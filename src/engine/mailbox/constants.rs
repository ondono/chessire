/********************************/
/***** 0x88 BOARD CONSTANTS *****/
/********************************/

// Rank 1
pub const A1: usize = 0x0;
pub const B1: usize = 0x1;
pub const C1: usize = 0x2;
pub const D1: usize = 0x3;
pub const E1: usize = 0x4;
pub const F1: usize = 0x5;
pub const G1: usize = 0x6;
pub const H1: usize = 0x7;

// Rank 2
pub const A2: usize = 0x10;
pub const B2: usize = 0x11;
pub const C2: usize = 0x12;
pub const D2: usize = 0x13;
pub const E2: usize = 0x14;
pub const F2: usize = 0x15;
pub const G2: usize = 0x16;
pub const H2: usize = 0x17;

// Rank 3
pub const A3: usize = 0x20;
pub const B3: usize = 0x21;
pub const C3: usize = 0x22;
pub const D3: usize = 0x23;
pub const E3: usize = 0x24;
pub const F3: usize = 0x25;
pub const G3: usize = 0x26;
pub const H3: usize = 0x27;

// Rank 4
pub const A4: usize = 0x30;
pub const B4: usize = 0x31;
pub const C4: usize = 0x32;
pub const D4: usize = 0x33;
pub const E4: usize = 0x34;
pub const F4: usize = 0x35;
pub const G4: usize = 0x36;
pub const H4: usize = 0x37;

// Rank 5
pub const A5: usize = 0x40;
pub const B5: usize = 0x41;
pub const C5: usize = 0x42;
pub const D5: usize = 0x43;
pub const E5: usize = 0x44;
pub const F5: usize = 0x45;
pub const G5: usize = 0x46;
pub const H5: usize = 0x47;

// Rank 6
pub const A6: usize = 0x50;
pub const B6: usize = 0x51;
pub const C6: usize = 0x52;
pub const D6: usize = 0x53;
pub const E6: usize = 0x54;
pub const F6: usize = 0x55;
pub const G6: usize = 0x56;
pub const H6: usize = 0x57;

// Rank 7
pub const A7: usize = 0x60;
pub const B7: usize = 0x61;
pub const C7: usize = 0x62;
pub const D7: usize = 0x63;
pub const E7: usize = 0x64;
pub const F7: usize = 0x65;
pub const G7: usize = 0x66;
pub const H7: usize = 0x67;

// Rank 8
pub const A8: usize = 0x70;
pub const B8: usize = 0x71;
pub const C8: usize = 0x72;
pub const D8: usize = 0x73;
pub const E8: usize = 0x74;
pub const F8: usize = 0x75;
pub const G8: usize = 0x76;
pub const H8: usize = 0x77;

// rank and file (never use individually)
pub const A: usize = 0x0;
pub const B: usize = 0x1;
pub const C: usize = 0x2;
pub const D: usize = 0x3;
pub const E: usize = 0x4;
pub const F: usize = 0x5;
pub const G: usize = 0x6;
pub const H: usize = 0x7;

#[rustfmt::skip]
pub const LUT_MAILBOX_TO_0X88: [usize; 64] = [
    A1, B1, C1, D1, E1, F1, G1, H1,
    A2, B2, C2, D2, E2, F2, G2, H2,
    A3, B3, C3, D3, E3, F3, G3, H3,
    A4, B4, C4, D4, E4, F4, G4, H4,
    A5, B5, C5, D5, E5, F5, G5, H5,
    A6, B6, C6, D6, E6, F6, G6, H6,
    A7, B7, C7, D7, E7, F7, G7, H7,
    A8, B8, C8, D8, E8, F8, G8, H8,
];

#[rustfmt::skip]
pub const LUT_0X88_TO_MAILBOX: [usize; 128] = [
    0,  1,  2,  3,  4,  5,  6,  7,  0, 0, 0, 0, 0, 0, 0, 0,
    8,  9,  10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0, 0, 0, 0,
    16, 17, 18, 19, 20, 21, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0,
    24, 25, 26, 27, 28, 29, 30, 31, 0, 0, 0, 0, 0, 0, 0, 0,
    32, 33, 34, 35, 36, 37, 38, 39, 0, 0, 0, 0, 0, 0, 0, 0,
    40, 41, 42, 43, 44, 45, 46, 47, 0, 0, 0, 0, 0, 0, 0, 0,
    48, 49, 50, 51, 52, 53, 54, 55, 0, 0, 0, 0, 0, 0, 0, 0,
    56, 57, 58, 59, 60, 61, 62, 63, 0, 0, 0, 0, 0, 0, 0, 0,
];

/******************************/
/***** BITBOARD CONSTANTS *****/
/******************************/

pub const BB_A1: u64 = 0b0000000000000000000000000000000000000000000000000000000000000001;
pub const BB_B1: u64 = 0b0000000000000000000000000000000000000000000000000000000000000010;
pub const BB_C1: u64 = 0b0000000000000000000000000000000000000000000000000000000000000100;
pub const BB_D1: u64 = 0b0000000000000000000000000000000000000000000000000000000000001000;
pub const BB_E1: u64 = 0b0000000000000000000000000000000000000000000000000000000000010000;
pub const BB_F1: u64 = 0b0000000000000000000000000000000000000000000000000000000000100000;
pub const BB_G1: u64 = 0b0000000000000000000000000000000000000000000000000000000001000000;
pub const BB_H1: u64 = 0b0000000000000000000000000000000000000000000000000000000010000000;

pub const BB_A2: u64 = 0b0000000000000000000000000000000000000000000000000000000100000000;
pub const BB_B2: u64 = 0b0000000000000000000000000000000000000000000000000000001000000000;
pub const BB_C2: u64 = 0b0000000000000000000000000000000000000000000000000000010000000000;
pub const BB_D2: u64 = 0b0000000000000000000000000000000000000000000000000000100000000000;
pub const BB_E2: u64 = 0b0000000000000000000000000000000000000000000000000001000000000000;
pub const BB_F2: u64 = 0b0000000000000000000000000000000000000000000000000010000000000000;
pub const BB_G2: u64 = 0b0000000000000000000000000000000000000000000000000100000000000000;
pub const BB_H2: u64 = 0b0000000000000000000000000000000000000000000000001000000000000000;

pub const BB_A3: u64 = 0b0000000000000000000000000000000000000000000000010000000000000000;
pub const BB_B3: u64 = 0b0000000000000000000000000000000000000000000000100000000000000000;
pub const BB_C3: u64 = 0b0000000000000000000000000000000000000000000001000000000000000000;
pub const BB_D3: u64 = 0b0000000000000000000000000000000000000000000010000000000000000000;
pub const BB_E3: u64 = 0b0000000000000000000000000000000000000000000100000000000000000000;
pub const BB_F3: u64 = 0b0000000000000000000000000000000000000000001000000000000000000000;
pub const BB_G3: u64 = 0b0000000000000000000000000000000000000000010000000000000000000000;
pub const BB_H3: u64 = 0b0000000000000000000000000000000000000000100000000000000000000000;

pub const BB_A4: u64 = 0b0000000000000000000000000000000000000001000000000000000000000000;
pub const BB_B4: u64 = 0b0000000000000000000000000000000000000010000000000000000000000000;
pub const BB_C4: u64 = 0b0000000000000000000000000000000000000100000000000000000000000000;
pub const BB_D4: u64 = 0b0000000000000000000000000000000000001000000000000000000000000000;
pub const BB_E4: u64 = 0b0000000000000000000000000000000000010000000000000000000000000000;
pub const BB_F4: u64 = 0b0000000000000000000000000000000000100000000000000000000000000000;
pub const BB_G4: u64 = 0b0000000000000000000000000000000001000000000000000000000000000000;
pub const BB_H4: u64 = 0b0000000000000000000000000000000010000000000000000000000000000000;

pub const BB_A5: u64 = 0b0000000000000000000000000000000100000000000000000000000000000000;
pub const BB_B5: u64 = 0b0000000000000000000000000000001000000000000000000000000000000000;
pub const BB_C5: u64 = 0b0000000000000000000000000000010000000000000000000000000000000000;
pub const BB_D5: u64 = 0b0000000000000000000000000000100000000000000000000000000000000000;
pub const BB_E5: u64 = 0b0000000000000000000000000001000000000000000000000000000000000000;
pub const BB_F5: u64 = 0b0000000000000000000000000010000000000000000000000000000000000000;
pub const BB_G5: u64 = 0b0000000000000000000000000100000000000000000000000000000000000000;
pub const BB_H5: u64 = 0b0000000000000000000000001000000000000000000000000000000000000000;

pub const BB_A6: u64 = 0b0000000000000000000000010000000000000000000000000000000000000000;
pub const BB_B6: u64 = 0b0000000000000000000000100000000000000000000000000000000000000000;
pub const BB_C6: u64 = 0b0000000000000000000001000000000000000000000000000000000000000000;
pub const BB_D6: u64 = 0b0000000000000000000010000000000000000000000000000000000000000000;
pub const BB_E6: u64 = 0b0000000000000000000100000000000000000000000000000000000000000000;
pub const BB_F6: u64 = 0b0000000000000000001000000000000000000000000000000000000000000000;
pub const BB_G6: u64 = 0b0000000000000000010000000000000000000000000000000000000000000000;
pub const BB_H6: u64 = 0b0000000000000000100000000000000000000000000000000000000000000000;

pub const BB_A7: u64 = 0b0000000000000001000000000000000000000000000000000000000000000000;
pub const BB_B7: u64 = 0b0000000000000010000000000000000000000000000000000000000000000000;
pub const BB_C7: u64 = 0b0000000000000100000000000000000000000000000000000000000000000000;
pub const BB_D7: u64 = 0b0000000000001000000000000000000000000000000000000000000000000000;
pub const BB_E7: u64 = 0b0000000000010000000000000000000000000000000000000000000000000000;
pub const BB_F7: u64 = 0b0000000000100000000000000000000000000000000000000000000000000000;
pub const BB_G7: u64 = 0b0000000001000000000000000000000000000000000000000000000000000000;
pub const BB_H7: u64 = 0b0000000010000000000000000000000000000000000000000000000000000000;

pub const BB_A8: u64 = 0b0000000100000000000000000000000000000000000000000000000000000000;
pub const BB_B8: u64 = 0b0000001000000000000000000000000000000000000000000000000000000000;
pub const BB_C8: u64 = 0b0000010000000000000000000000000000000000000000000000000000000000;
pub const BB_D8: u64 = 0b0000100000000000000000000000000000000000000000000000000000000000;
pub const BB_E8: u64 = 0b0001000000000000000000000000000000000000000000000000000000000000;
pub const BB_F8: u64 = 0b0010000000000000000000000000000000000000000000000000000000000000;
pub const BB_G8: u64 = 0b0100000000000000000000000000000000000000000000000000000000000000;
pub const BB_H8: u64 = 0b1000000000000000000000000000000000000000000000000000000000000000;

// board constants
pub const BB_FILE_A: u64 = BB_A1 | BB_A2 | BB_A3 | BB_A4 | BB_A5 | BB_A6 | BB_A7 | BB_A8;
pub const BB_FILE_B: u64 = BB_B1 | BB_B2 | BB_B3 | BB_B4 | BB_B5 | BB_B6 | BB_B7 | BB_B8;
pub const BB_FILE_C: u64 = BB_C1 | BB_C2 | BB_C3 | BB_C4 | BB_C5 | BB_C6 | BB_C7 | BB_C8;
pub const BB_FILE_D: u64 = BB_D1 | BB_D2 | BB_D3 | BB_D4 | BB_D5 | BB_D6 | BB_D7 | BB_D8;
pub const BB_FILE_E: u64 = BB_E1 | BB_E2 | BB_E3 | BB_E4 | BB_E5 | BB_E6 | BB_E7 | BB_E8;
pub const BB_FILE_F: u64 = BB_F1 | BB_F2 | BB_F3 | BB_F4 | BB_F5 | BB_F6 | BB_F7 | BB_F8;
pub const BB_FILE_G: u64 = BB_G1 | BB_G2 | BB_G3 | BB_G4 | BB_G5 | BB_G6 | BB_G7 | BB_G8;
pub const BB_FILE_H: u64 = BB_H1 | BB_H2 | BB_H3 | BB_H4 | BB_H5 | BB_H6 | BB_H7 | BB_H8;

pub const BB_RANK_1: u64 = BB_A1 | BB_B1 | BB_C1 | BB_D1 | BB_E1 | BB_F1 | BB_G1 | BB_H1;
pub const BB_RANK_2: u64 = BB_A2 | BB_B2 | BB_C2 | BB_D2 | BB_E2 | BB_F2 | BB_G2 | BB_H2;
pub const BB_RANK_3: u64 = BB_A3 | BB_B3 | BB_C3 | BB_D3 | BB_E3 | BB_F3 | BB_G3 | BB_H3;
pub const BB_RANK_4: u64 = BB_A4 | BB_B4 | BB_C4 | BB_D4 | BB_E4 | BB_F4 | BB_G4 | BB_H4;
pub const BB_RANK_5: u64 = BB_A5 | BB_B5 | BB_C5 | BB_D5 | BB_E5 | BB_F5 | BB_G5 | BB_H5;
pub const BB_RANK_6: u64 = BB_A6 | BB_B6 | BB_C6 | BB_D6 | BB_E6 | BB_F6 | BB_G6 | BB_H6;
pub const BB_RANK_7: u64 = BB_A7 | BB_B7 | BB_C7 | BB_D7 | BB_E7 | BB_F7 | BB_G7 | BB_H7;
pub const BB_RANK_8: u64 = BB_A8 | BB_B8 | BB_C8 | BB_D8 | BB_E8 | BB_F8 | BB_G8 | BB_H8;

pub const BB_EDGE_OF_BOARD: u64 = BB_FILE_A | BB_FILE_H | BB_RANK_1 | BB_RANK_8;
pub const BB_INSIDE_OF_BOARD: u64 = !BB_EDGE_OF_BOARD;

// BITBOARD ATTACKS LUTS
//
#[rustfmt::skip]
pub const BB_BISHOP_REL_BITS: [usize; 64] = [
    6, 5, 5, 5, 5, 5, 5, 6,
    5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 7, 7, 7, 7, 5, 5,
    5, 5, 7, 9, 9, 7, 5, 5,
    5, 5, 7, 9, 9, 7, 5, 5,
    5, 5, 7, 7, 7, 7, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5,
    6, 5, 5, 5, 5, 5, 5, 6,
];

#[rustfmt::skip]
pub const BB_ROOK_REL_BITS: [usize; 64] = [
    12, 11, 11, 11, 11, 11, 11, 12,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    11, 10, 10, 10, 10, 10, 10, 11,
    12, 11, 11, 11, 11, 11, 11, 12,
];

pub const BISHOP_MAGIC_NUMBERS: [u64; 64] = [
    0x597A9687DCD8725B,
    0xEFE84701BB9264D6,
    0x3621DBF4A965F73A,
    0x393760FF2B4439BD,
    0x17FD622ADE05235F,
    0x137497F0879EEDC4,
    0x1AD0D99F24606B75,
    0xC7EAD497B483462F,
    0xDFE8A7E2435E4146,
    0xA0E1477368AC14E8,
    0xB8D901ED033AD81A,
    0x80F262E2BCA636A4,
    0xB2D6FA38E5841F0B,
    0x2B33DFC5974499A3,
    0xC2E89EFEE2B5A35B,
    0x2709392C0A235DB0,
    0xB29B57D31A59FE9D,
    0x511D338A4287173,
    0xB6B686FE27BA68A5,
    0xAC589CD6E1C93784,
    0xB426B1B050F3CA6A,
    0xB92CA5FDCD8D8CF3,
    0xDCDBD44EFC4D5D90,
    0x45A8EF0AFDBA5520,
    0x94FD91D96FAA0BE3,
    0xF20119A8DC4C8BB6,
    0x21FF338AE0005A3,
    0x3C405A254064FBE2,
    0x1127BB60D0785164,
    0x7D599AD6EDA41B2D,
    0x1ED8216906CAD94D,
    0xCF1D1D363C68ADF2,
    0x6740B07AA183CEF4,
    0x3B275B5F150503EE,
    0x1AD962C1AAFAE4AF,
    0x29267FCD70DD4BCB,
    0x3C25AC4AB0E3A0F,
    0xC24B15DCDEC75A5E,
    0x6602C803D1184E67,
    0x997393DC7EBF923F,
    0x544E1F332F72FCA4,
    0x278ADF0AC1C955B5,
    0x79F029F1D6EEEBB4,
    0x9B73013C857F02DE,
    0xF413B6F9A87A52C5,
    0x4FE78CDAA9EC69C9,
    0xCF0914A48B60AC0F,
    0xA87157845FC5F202,
    0x7EBCBDCC8509C751,
    0x1188BB99BEF2D157,
    0xB8F39936BA9E8AA1,
    0x86B2F956DD4B7900,
    0x5604A04DE3993412,
    0x1CC6D41DB50A51A6,
    0x3391A0A66DE24941,
    0x803B79EDEEFA13EC,
    0xB03B2D8CEC2D4EF,
    0xAF5F47BDEE72F505,
    0xE8FBF03B227AD2B1,
    0xA3937330D2B9098A,
    0xD509D87E7D8D7610,
    0x20DBFE946FA00D1D,
    0xBB4F16E6F1F1FC5,
    0x8C9D4133D0DA8311,
];

pub const ROOK_MAGIC_NUMBERS: [u64; 64] = [
    0x4157FF3735F81AFE,
    0x9E11CF78BF227C55,
    0xFCD449EA328E17C0,
    0x4E9ABE0B41696AD,
    0x14DABC108D887358,
    0xDDC2F40C0E6A0914,
    0x90D52A86CD8D2286,
    0xFD105A36D528C590,
    0x810EFB9377574358,
    0x28126FE8FB84B68,
    0xBEDE5E0866AB09DA,
    0x7EEC34CDAF63EE35,
    0x4847B209D31B78B6,
    0xED03EF41FD03131D,
    0xA97FA58835AD5B93,
    0x63EBD10F44332A2E,
    0x24D26A7F447D81B2,
    0xD75FBF2D4D96C1BE,
    0x86EE179C670F6EFF,
    0x5E94A20300312164,
    0xB08013DAFA1F92CC,
    0xC49C183F5EBEF79A,
    0xEA7928B604E3FC85,
    0xB15411D607EECB9E,
    0x8302F395FB9CA05F,
    0xE63676B8EAE33C1A,
    0x80192D47A9685E19,
    0x31194100A2651503,
    0x63FA4A68E08F9A23,
    0xE7D500FE5B2EACFF,
    0xCE16AADF6067B5F6,
    0x3DF6502E499B4116,
    0x18051D642C09C2D0,
    0x937E58D8AA0A17C7,
    0xC4C69D4C84E01AFF,
    0x75B7D895ED3F6EDF,
    0x7CFE082120618898,
    0xFE6483B5B2A24B13,
    0xE9AF2A2A90187014,
    0xEFC9C05632AE7B59,
    0xAB7354A672D12BC2,
    0xFBEC595BA99ABBE9,
    0xD5194425F5B164A6,
    0x5BDEF14007910CBE,
    0xDAE758BB2644C5F,
    0x566682D9306D3444,
    0xFC787CE07CE43C2A,
    0xBEDDE95E05BA2DB4,
    0xFD0A108D50FCF3E5,
    0x734B6DB36BD9E039,
    0xB7B89F73E61C2FCC,
    0xC1613FA009C5EFB1,
    0x946CFE2A6F5782E,
    0x826F62117FD8D5EC,
    0xADB114D01D9CE6B0,
    0x2213C98E1C1EC6C2,
    0x5429230FE32E3AD4,
    0xB4FC9A0EB47E042E,
    0xE390E93D9ECC4344,
    0xE6463ABE649B7026,
    0xAD43607C8D6D99DA,
    0xD1913B11B49DAB38,
    0xEDC1E26ED82097B2,
    0xA3994D345668CA59,
];
