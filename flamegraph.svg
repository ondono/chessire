<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="86638"><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (45 samples, 0.05%)</title><rect x="0.0173%" y="277" width="0.0519%" height="15" fill="rgb(227,0,7)" fg:x="15" fg:w="45"/><text x="0.2673%" y="287.50"></text></g><g><title>alloc::string::String::push_str (45 samples, 0.05%)</title><rect x="0.0173%" y="261" width="0.0519%" height="15" fill="rgb(217,0,24)" fg:x="15" fg:w="45"/><text x="0.2673%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (45 samples, 0.05%)</title><rect x="0.0173%" y="245" width="0.0519%" height="15" fill="rgb(221,193,54)" fg:x="15" fg:w="45"/><text x="0.2673%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (45 samples, 0.05%)</title><rect x="0.0173%" y="229" width="0.0519%" height="15" fill="rgb(248,212,6)" fg:x="15" fg:w="45"/><text x="0.2673%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (45 samples, 0.05%)</title><rect x="0.0173%" y="213" width="0.0519%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="45"/><text x="0.2673%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (45 samples, 0.05%)</title><rect x="0.0173%" y="197" width="0.0519%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="45"/><text x="0.2673%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (45 samples, 0.05%)</title><rect x="0.0173%" y="181" width="0.0519%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="45"/><text x="0.2673%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (45 samples, 0.05%)</title><rect x="0.0173%" y="165" width="0.0519%" height="15" fill="rgb(228,23,34)" fg:x="15" fg:w="45"/><text x="0.2673%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (45 samples, 0.05%)</title><rect x="0.0173%" y="149" width="0.0519%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="45"/><text x="0.2673%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (45 samples, 0.05%)</title><rect x="0.0173%" y="133" width="0.0519%" height="15" fill="rgb(220,122,19)" fg:x="15" fg:w="45"/><text x="0.2673%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (45 samples, 0.05%)</title><rect x="0.0173%" y="117" width="0.0519%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="45"/><text x="0.2673%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (45 samples, 0.05%)</title><rect x="0.0173%" y="101" width="0.0519%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="45"/><text x="0.2673%" y="111.50"></text></g><g><title>alloc::alloc::realloc (45 samples, 0.05%)</title><rect x="0.0173%" y="85" width="0.0519%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="45"/><text x="0.2673%" y="95.50"></text></g><g><title>realloc (45 samples, 0.05%)</title><rect x="0.0173%" y="69" width="0.0519%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="45"/><text x="0.2673%" y="79.50"></text></g><g><title>[libc.so.6] (45 samples, 0.05%)</title><rect x="0.0173%" y="53" width="0.0519%" height="15" fill="rgb(217,207,13)" fg:x="15" fg:w="45"/><text x="0.2673%" y="63.50"></text></g><g><title>[libc.so.6] (41 samples, 0.05%)</title><rect x="0.0219%" y="37" width="0.0473%" height="15" fill="rgb(231,73,38)" fg:x="19" fg:w="41"/><text x="0.2719%" y="47.50"></text></g><g><title>alloc::str::join_generic_copy (10 samples, 0.01%)</title><rect x="0.0739%" y="181" width="0.0115%" height="15" fill="rgb(225,20,46)" fg:x="64" fg:w="10"/><text x="0.3239%" y="191.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (60 samples, 0.07%)</title><rect x="0.0173%" y="389" width="0.0693%" height="15" fill="rgb(210,31,41)" fg:x="15" fg:w="60"/><text x="0.2673%" y="399.50"></text></g><g><title>&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt (60 samples, 0.07%)</title><rect x="0.0173%" y="373" width="0.0693%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="60"/><text x="0.2673%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (60 samples, 0.07%)</title><rect x="0.0173%" y="357" width="0.0693%" height="15" fill="rgb(226,26,5)" fg:x="15" fg:w="60"/><text x="0.2673%" y="367.50"></text></g><g><title>core::fmt::write (60 samples, 0.07%)</title><rect x="0.0173%" y="341" width="0.0693%" height="15" fill="rgb(249,33,26)" fg:x="15" fg:w="60"/><text x="0.2673%" y="351.50"></text></g><g><title>&lt;chessire_utils::piece::Piece as core::fmt::Display&gt;::fmt (60 samples, 0.07%)</title><rect x="0.0173%" y="325" width="0.0693%" height="15" fill="rgb(235,183,28)" fg:x="15" fg:w="60"/><text x="0.2673%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (60 samples, 0.07%)</title><rect x="0.0173%" y="309" width="0.0693%" height="15" fill="rgb(221,5,38)" fg:x="15" fg:w="60"/><text x="0.2673%" y="319.50"></text></g><g><title>core::fmt::write (60 samples, 0.07%)</title><rect x="0.0173%" y="293" width="0.0693%" height="15" fill="rgb(247,18,42)" fg:x="15" fg:w="60"/><text x="0.2673%" y="303.50"></text></g><g><title>&lt;termion::color::Fg&lt;C&gt; as core::fmt::Display&gt;::fmt (15 samples, 0.02%)</title><rect x="0.0693%" y="277" width="0.0173%" height="15" fill="rgb(241,131,45)" fg:x="60" fg:w="15"/><text x="0.3193%" y="287.50"></text></g><g><title>&lt;termion::color::Rgb as termion::color::Color&gt;::write_fg (15 samples, 0.02%)</title><rect x="0.0693%" y="261" width="0.0173%" height="15" fill="rgb(249,31,29)" fg:x="60" fg:w="15"/><text x="0.3193%" y="271.50"></text></g><g><title>termion::color::Rgb::fg_string (15 samples, 0.02%)</title><rect x="0.0693%" y="245" width="0.0173%" height="15" fill="rgb(225,111,53)" fg:x="60" fg:w="15"/><text x="0.3193%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (12 samples, 0.01%)</title><rect x="0.0727%" y="229" width="0.0139%" height="15" fill="rgb(238,160,17)" fg:x="63" fg:w="12"/><text x="0.3227%" y="239.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (12 samples, 0.01%)</title><rect x="0.0727%" y="213" width="0.0139%" height="15" fill="rgb(214,148,48)" fg:x="63" fg:w="12"/><text x="0.3227%" y="223.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (11 samples, 0.01%)</title><rect x="0.0739%" y="197" width="0.0127%" height="15" fill="rgb(232,36,49)" fg:x="64" fg:w="11"/><text x="0.3239%" y="207.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (22 samples, 0.03%)</title><rect x="0.1050%" y="373" width="0.0254%" height="15" fill="rgb(209,103,24)" fg:x="91" fg:w="22"/><text x="0.3550%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="0.1339%" y="373" width="0.0139%" height="15" fill="rgb(229,88,8)" fg:x="116" fg:w="12"/><text x="0.3839%" y="383.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="0.1350%" y="357" width="0.0127%" height="15" fill="rgb(213,181,19)" fg:x="117" fg:w="11"/><text x="0.3850%" y="367.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (18 samples, 0.02%)</title><rect x="0.1824%" y="229" width="0.0208%" height="15" fill="rgb(254,191,54)" fg:x="158" fg:w="18"/><text x="0.4324%" y="239.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (18 samples, 0.02%)</title><rect x="0.1824%" y="213" width="0.0208%" height="15" fill="rgb(241,83,37)" fg:x="158" fg:w="18"/><text x="0.4324%" y="223.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (18 samples, 0.02%)</title><rect x="0.1824%" y="197" width="0.0208%" height="15" fill="rgb(233,36,39)" fg:x="158" fg:w="18"/><text x="0.4324%" y="207.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (18 samples, 0.02%)</title><rect x="0.1824%" y="181" width="0.0208%" height="15" fill="rgb(226,3,54)" fg:x="158" fg:w="18"/><text x="0.4324%" y="191.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.05%)</title><rect x="0.1778%" y="309" width="0.0485%" height="15" fill="rgb(245,192,40)" fg:x="154" fg:w="42"/><text x="0.4278%" y="319.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (38 samples, 0.04%)</title><rect x="0.1824%" y="293" width="0.0439%" height="15" fill="rgb(238,167,29)" fg:x="158" fg:w="38"/><text x="0.4324%" y="303.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (38 samples, 0.04%)</title><rect x="0.1824%" y="277" width="0.0439%" height="15" fill="rgb(232,182,51)" fg:x="158" fg:w="38"/><text x="0.4324%" y="287.50"></text></g><g><title>core::str::pattern::Searcher::next_match (38 samples, 0.04%)</title><rect x="0.1824%" y="261" width="0.0439%" height="15" fill="rgb(231,60,39)" fg:x="158" fg:w="38"/><text x="0.4324%" y="271.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (38 samples, 0.04%)</title><rect x="0.1824%" y="245" width="0.0439%" height="15" fill="rgb(208,69,12)" fg:x="158" fg:w="38"/><text x="0.4324%" y="255.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="0.2031%" y="229" width="0.0231%" height="15" fill="rgb(235,93,37)" fg:x="176" fg:w="20"/><text x="0.4531%" y="239.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="0.2031%" y="213" width="0.0231%" height="15" fill="rgb(213,116,39)" fg:x="176" fg:w="20"/><text x="0.4531%" y="223.50"></text></g><g><title>core::str::validations::next_code_point (20 samples, 0.02%)</title><rect x="0.2031%" y="197" width="0.0231%" height="15" fill="rgb(222,207,29)" fg:x="176" fg:w="20"/><text x="0.4531%" y="207.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.07%)</title><rect x="0.1581%" y="373" width="0.0704%" height="15" fill="rgb(206,96,30)" fg:x="137" fg:w="61"/><text x="0.4081%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.07%)</title><rect x="0.1581%" y="357" width="0.0704%" height="15" fill="rgb(218,138,4)" fg:x="137" fg:w="61"/><text x="0.4081%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (61 samples, 0.07%)</title><rect x="0.1581%" y="341" width="0.0704%" height="15" fill="rgb(250,191,14)" fg:x="137" fg:w="61"/><text x="0.4081%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (61 samples, 0.07%)</title><rect x="0.1581%" y="325" width="0.0704%" height="15" fill="rgb(239,60,40)" fg:x="137" fg:w="61"/><text x="0.4081%" y="335.50"></text></g><g><title>__rdl_alloc (14 samples, 0.02%)</title><rect x="0.2320%" y="149" width="0.0162%" height="15" fill="rgb(206,27,48)" fg:x="201" fg:w="14"/><text x="0.4820%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.01%)</title><rect x="0.2355%" y="133" width="0.0127%" height="15" fill="rgb(225,35,8)" fg:x="204" fg:w="11"/><text x="0.4855%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="0.2285%" y="245" width="0.0208%" height="15" fill="rgb(250,213,24)" fg:x="198" fg:w="18"/><text x="0.4785%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="0.2285%" y="229" width="0.0208%" height="15" fill="rgb(247,123,22)" fg:x="198" fg:w="18"/><text x="0.4785%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="0.2285%" y="213" width="0.0208%" height="15" fill="rgb(231,138,38)" fg:x="198" fg:w="18"/><text x="0.4785%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="0.2285%" y="197" width="0.0208%" height="15" fill="rgb(231,145,46)" fg:x="198" fg:w="18"/><text x="0.4785%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="0.2285%" y="181" width="0.0208%" height="15" fill="rgb(251,118,11)" fg:x="198" fg:w="18"/><text x="0.4785%" y="191.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.02%)</title><rect x="0.2320%" y="165" width="0.0173%" height="15" fill="rgb(217,147,25)" fg:x="201" fg:w="15"/><text x="0.4820%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (20 samples, 0.02%)</title><rect x="0.2285%" y="325" width="0.0231%" height="15" fill="rgb(247,81,37)" fg:x="198" fg:w="20"/><text x="0.4785%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (20 samples, 0.02%)</title><rect x="0.2285%" y="309" width="0.0231%" height="15" fill="rgb(209,12,38)" fg:x="198" fg:w="20"/><text x="0.4785%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.02%)</title><rect x="0.2285%" y="293" width="0.0231%" height="15" fill="rgb(227,1,9)" fg:x="198" fg:w="20"/><text x="0.4785%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.02%)</title><rect x="0.2285%" y="277" width="0.0231%" height="15" fill="rgb(248,47,43)" fg:x="198" fg:w="20"/><text x="0.4785%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.02%)</title><rect x="0.2285%" y="261" width="0.0231%" height="15" fill="rgb(221,10,30)" fg:x="198" fg:w="20"/><text x="0.4785%" y="271.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (26 samples, 0.03%)</title><rect x="0.2285%" y="373" width="0.0300%" height="15" fill="rgb(210,229,1)" fg:x="198" fg:w="26"/><text x="0.4785%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (26 samples, 0.03%)</title><rect x="0.2285%" y="357" width="0.0300%" height="15" fill="rgb(222,148,37)" fg:x="198" fg:w="26"/><text x="0.4785%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (26 samples, 0.03%)</title><rect x="0.2285%" y="341" width="0.0300%" height="15" fill="rgb(234,67,33)" fg:x="198" fg:w="26"/><text x="0.4785%" y="351.50"></text></g><g><title>[libc.so.6] (105 samples, 0.12%)</title><rect x="0.2585%" y="373" width="0.1212%" height="15" fill="rgb(247,98,35)" fg:x="224" fg:w="105"/><text x="0.5085%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.02%)</title><rect x="0.3797%" y="309" width="0.0162%" height="15" fill="rgb(247,138,52)" fg:x="329" fg:w="14"/><text x="0.6297%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.02%)</title><rect x="0.3797%" y="293" width="0.0162%" height="15" fill="rgb(213,79,30)" fg:x="329" fg:w="14"/><text x="0.6297%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (15 samples, 0.02%)</title><rect x="0.3797%" y="373" width="0.0173%" height="15" fill="rgb(246,177,23)" fg:x="329" fg:w="15"/><text x="0.6297%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.02%)</title><rect x="0.3797%" y="357" width="0.0173%" height="15" fill="rgb(230,62,27)" fg:x="329" fg:w="15"/><text x="0.6297%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.02%)</title><rect x="0.3797%" y="341" width="0.0173%" height="15" fill="rgb(216,154,8)" fg:x="329" fg:w="15"/><text x="0.6297%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="0.3797%" y="325" width="0.0173%" height="15" fill="rgb(244,35,45)" fg:x="329" fg:w="15"/><text x="0.6297%" y="335.50"></text></g><g><title>[libc.so.6] (336 samples, 0.39%)</title><rect x="0.0150%" y="693" width="0.3878%" height="15" fill="rgb(251,115,12)" fg:x="13" fg:w="336"/><text x="0.2650%" y="703.50"></text></g><g><title>main (334 samples, 0.39%)</title><rect x="0.0173%" y="677" width="0.3855%" height="15" fill="rgb(240,54,50)" fg:x="15" fg:w="334"/><text x="0.2673%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (334 samples, 0.39%)</title><rect x="0.0173%" y="661" width="0.3855%" height="15" fill="rgb(233,84,52)" fg:x="15" fg:w="334"/><text x="0.2673%" y="671.50"></text></g><g><title>std::panic::catch_unwind (334 samples, 0.39%)</title><rect x="0.0173%" y="645" width="0.3855%" height="15" fill="rgb(207,117,47)" fg:x="15" fg:w="334"/><text x="0.2673%" y="655.50"></text></g><g><title>std::panicking::try (334 samples, 0.39%)</title><rect x="0.0173%" y="629" width="0.3855%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="334"/><text x="0.2673%" y="639.50"></text></g><g><title>std::panicking::try::do_call (334 samples, 0.39%)</title><rect x="0.0173%" y="613" width="0.3855%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="334"/><text x="0.2673%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (334 samples, 0.39%)</title><rect x="0.0173%" y="597" width="0.3855%" height="15" fill="rgb(236,212,23)" fg:x="15" fg:w="334"/><text x="0.2673%" y="607.50"></text></g><g><title>std::panic::catch_unwind (334 samples, 0.39%)</title><rect x="0.0173%" y="581" width="0.3855%" height="15" fill="rgb(242,79,21)" fg:x="15" fg:w="334"/><text x="0.2673%" y="591.50"></text></g><g><title>std::panicking::try (334 samples, 0.39%)</title><rect x="0.0173%" y="565" width="0.3855%" height="15" fill="rgb(211,96,35)" fg:x="15" fg:w="334"/><text x="0.2673%" y="575.50"></text></g><g><title>std::panicking::try::do_call (334 samples, 0.39%)</title><rect x="0.0173%" y="549" width="0.3855%" height="15" fill="rgb(253,215,40)" fg:x="15" fg:w="334"/><text x="0.2673%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (334 samples, 0.39%)</title><rect x="0.0173%" y="533" width="0.3855%" height="15" fill="rgb(211,81,21)" fg:x="15" fg:w="334"/><text x="0.2673%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}} (334 samples, 0.39%)</title><rect x="0.0173%" y="517" width="0.3855%" height="15" fill="rgb(208,190,38)" fg:x="15" fg:w="334"/><text x="0.2673%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (334 samples, 0.39%)</title><rect x="0.0173%" y="501" width="0.3855%" height="15" fill="rgb(235,213,38)" fg:x="15" fg:w="334"/><text x="0.2673%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (334 samples, 0.39%)</title><rect x="0.0173%" y="485" width="0.3855%" height="15" fill="rgb(237,122,38)" fg:x="15" fg:w="334"/><text x="0.2673%" y="495.50"></text></g><g><title>chessire::main (334 samples, 0.39%)</title><rect x="0.0173%" y="469" width="0.3855%" height="15" fill="rgb(244,218,35)" fg:x="15" fg:w="334"/><text x="0.2673%" y="479.50"></text></g><g><title>chessire::test::perft (334 samples, 0.39%)</title><rect x="0.0173%" y="453" width="0.3855%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="334"/><text x="0.2673%" y="463.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (334 samples, 0.39%)</title><rect x="0.0173%" y="437" width="0.3855%" height="15" fill="rgb(210,16,53)" fg:x="15" fg:w="334"/><text x="0.2673%" y="447.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (334 samples, 0.39%)</title><rect x="0.0173%" y="421" width="0.3855%" height="15" fill="rgb(235,124,12)" fg:x="15" fg:w="334"/><text x="0.2673%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (334 samples, 0.39%)</title><rect x="0.0173%" y="405" width="0.3855%" height="15" fill="rgb(224,169,11)" fg:x="15" fg:w="334"/><text x="0.2673%" y="415.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (274 samples, 0.32%)</title><rect x="0.0866%" y="389" width="0.3163%" height="15" fill="rgb(250,166,2)" fg:x="75" fg:w="274"/><text x="0.3366%" y="399.50"></text></g><g><title>[libc.so.6] (9 samples, 0.01%)</title><rect x="0.4121%" y="421" width="0.0104%" height="15" fill="rgb(242,216,29)" fg:x="357" fg:w="9"/><text x="0.6621%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (22 samples, 0.03%)</title><rect x="0.4074%" y="437" width="0.0254%" height="15" fill="rgb(230,116,27)" fg:x="353" fg:w="22"/><text x="0.6574%" y="447.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (26 samples, 0.03%)</title><rect x="0.4074%" y="613" width="0.0300%" height="15" fill="rgb(228,99,48)" fg:x="353" fg:w="26"/><text x="0.6574%" y="623.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves (26 samples, 0.03%)</title><rect x="0.4074%" y="597" width="0.0300%" height="15" fill="rgb(253,11,6)" fg:x="353" fg:w="26"/><text x="0.6574%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.03%)</title><rect x="0.4074%" y="581" width="0.0300%" height="15" fill="rgb(247,143,39)" fg:x="353" fg:w="26"/><text x="0.6574%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="0.4074%" y="565" width="0.0300%" height="15" fill="rgb(236,97,10)" fg:x="353" fg:w="26"/><text x="0.6574%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (26 samples, 0.03%)</title><rect x="0.4074%" y="549" width="0.0300%" height="15" fill="rgb(233,208,19)" fg:x="353" fg:w="26"/><text x="0.6574%" y="559.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (26 samples, 0.03%)</title><rect x="0.4074%" y="533" width="0.0300%" height="15" fill="rgb(216,164,2)" fg:x="353" fg:w="26"/><text x="0.6574%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (26 samples, 0.03%)</title><rect x="0.4074%" y="517" width="0.0300%" height="15" fill="rgb(220,129,5)" fg:x="353" fg:w="26"/><text x="0.6574%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.03%)</title><rect x="0.4074%" y="501" width="0.0300%" height="15" fill="rgb(242,17,10)" fg:x="353" fg:w="26"/><text x="0.6574%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (26 samples, 0.03%)</title><rect x="0.4074%" y="485" width="0.0300%" height="15" fill="rgb(242,107,0)" fg:x="353" fg:w="26"/><text x="0.6574%" y="495.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves::{{closure}} (26 samples, 0.03%)</title><rect x="0.4074%" y="469" width="0.0300%" height="15" fill="rgb(251,28,31)" fg:x="353" fg:w="26"/><text x="0.6574%" y="479.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::test_move_legality (26 samples, 0.03%)</title><rect x="0.4074%" y="453" width="0.0300%" height="15" fill="rgb(233,223,10)" fg:x="353" fg:w="26"/><text x="0.6574%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (58 samples, 0.07%)</title><rect x="0.4675%" y="373" width="0.0669%" height="15" fill="rgb(215,21,27)" fg:x="405" fg:w="58"/><text x="0.7175%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (58 samples, 0.07%)</title><rect x="0.4675%" y="357" width="0.0669%" height="15" fill="rgb(232,23,21)" fg:x="405" fg:w="58"/><text x="0.7175%" y="367.50"></text></g><g><title>alloc::alloc::realloc (58 samples, 0.07%)</title><rect x="0.4675%" y="341" width="0.0669%" height="15" fill="rgb(244,5,23)" fg:x="405" fg:w="58"/><text x="0.7175%" y="351.50"></text></g><g><title>realloc (49 samples, 0.06%)</title><rect x="0.4779%" y="325" width="0.0566%" height="15" fill="rgb(226,81,46)" fg:x="414" fg:w="49"/><text x="0.7279%" y="335.50"></text></g><g><title>[libc.so.6] (40 samples, 0.05%)</title><rect x="0.4882%" y="309" width="0.0462%" height="15" fill="rgb(247,70,30)" fg:x="423" fg:w="40"/><text x="0.7382%" y="319.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="0.5217%" y="293" width="0.0127%" height="15" fill="rgb(212,68,19)" fg:x="452" fg:w="11"/><text x="0.7717%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (76 samples, 0.09%)</title><rect x="0.4571%" y="389" width="0.0877%" height="15" fill="rgb(240,187,13)" fg:x="396" fg:w="76"/><text x="0.7071%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (9 samples, 0.01%)</title><rect x="0.5344%" y="373" width="0.0104%" height="15" fill="rgb(223,113,26)" fg:x="463" fg:w="9"/><text x="0.7844%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 samples, 0.11%)</title><rect x="0.4375%" y="533" width="0.1108%" height="15" fill="rgb(206,192,2)" fg:x="379" fg:w="96"/><text x="0.6875%" y="543.50"></text></g><g><title>alloc::string::String::push_str (96 samples, 0.11%)</title><rect x="0.4375%" y="517" width="0.1108%" height="15" fill="rgb(241,108,4)" fg:x="379" fg:w="96"/><text x="0.6875%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (96 samples, 0.11%)</title><rect x="0.4375%" y="501" width="0.1108%" height="15" fill="rgb(247,173,49)" fg:x="379" fg:w="96"/><text x="0.6875%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (96 samples, 0.11%)</title><rect x="0.4375%" y="485" width="0.1108%" height="15" fill="rgb(224,114,35)" fg:x="379" fg:w="96"/><text x="0.6875%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (96 samples, 0.11%)</title><rect x="0.4375%" y="469" width="0.1108%" height="15" fill="rgb(245,159,27)" fg:x="379" fg:w="96"/><text x="0.6875%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (96 samples, 0.11%)</title><rect x="0.4375%" y="453" width="0.1108%" height="15" fill="rgb(245,172,44)" fg:x="379" fg:w="96"/><text x="0.6875%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (96 samples, 0.11%)</title><rect x="0.4375%" y="437" width="0.1108%" height="15" fill="rgb(236,23,11)" fg:x="379" fg:w="96"/><text x="0.6875%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (96 samples, 0.11%)</title><rect x="0.4375%" y="421" width="0.1108%" height="15" fill="rgb(205,117,38)" fg:x="379" fg:w="96"/><text x="0.6875%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (96 samples, 0.11%)</title><rect x="0.4375%" y="405" width="0.1108%" height="15" fill="rgb(237,72,25)" fg:x="379" fg:w="96"/><text x="0.6875%" y="415.50"></text></g><g><title>chessire_utils::board::to_char (18 samples, 0.02%)</title><rect x="0.5575%" y="517" width="0.0208%" height="15" fill="rgb(244,70,9)" fg:x="483" fg:w="18"/><text x="0.8075%" y="527.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (9 samples, 0.01%)</title><rect x="0.5679%" y="501" width="0.0104%" height="15" fill="rgb(217,125,39)" fg:x="492" fg:w="9"/><text x="0.8179%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.02%)</title><rect x="0.7179%" y="405" width="0.0162%" height="15" fill="rgb(235,36,10)" fg:x="622" fg:w="14"/><text x="0.9679%" y="415.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="0.7225%" y="389" width="0.0115%" height="15" fill="rgb(251,123,47)" fg:x="626" fg:w="10"/><text x="0.9725%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.03%)</title><rect x="0.7029%" y="453" width="0.0323%" height="15" fill="rgb(221,13,13)" fg:x="609" fg:w="28"/><text x="0.9529%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (24 samples, 0.03%)</title><rect x="0.7075%" y="437" width="0.0277%" height="15" fill="rgb(238,131,9)" fg:x="613" fg:w="24"/><text x="0.9575%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.03%)</title><rect x="0.7075%" y="421" width="0.0277%" height="15" fill="rgb(211,50,8)" fg:x="613" fg:w="24"/><text x="0.9575%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (35 samples, 0.04%)</title><rect x="0.6995%" y="485" width="0.0404%" height="15" fill="rgb(245,182,24)" fg:x="606" fg:w="35"/><text x="0.9495%" y="495.50"></text></g><g><title>alloc::string::String::push (32 samples, 0.04%)</title><rect x="0.7029%" y="469" width="0.0369%" height="15" fill="rgb(242,14,37)" fg:x="609" fg:w="32"/><text x="0.9529%" y="479.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (24 samples, 0.03%)</title><rect x="0.7399%" y="485" width="0.0277%" height="15" fill="rgb(246,228,12)" fg:x="641" fg:w="24"/><text x="0.9899%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="0.7676%" y="485" width="0.0127%" height="15" fill="rgb(213,55,15)" fg:x="665" fg:w="11"/><text x="1.0176%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="0.7676%" y="469" width="0.0127%" height="15" fill="rgb(209,9,3)" fg:x="665" fg:w="11"/><text x="1.0176%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.02%)</title><rect x="0.8068%" y="453" width="0.0242%" height="15" fill="rgb(230,59,30)" fg:x="699" fg:w="21"/><text x="1.0568%" y="463.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.02%)</title><rect x="0.8137%" y="437" width="0.0173%" height="15" fill="rgb(209,121,21)" fg:x="705" fg:w="15"/><text x="1.0637%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.02%)</title><rect x="0.8137%" y="421" width="0.0173%" height="15" fill="rgb(220,109,13)" fg:x="705" fg:w="15"/><text x="1.0637%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.02%)</title><rect x="0.8137%" y="405" width="0.0173%" height="15" fill="rgb(232,18,1)" fg:x="705" fg:w="15"/><text x="1.0637%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.02%)</title><rect x="0.8137%" y="389" width="0.0173%" height="15" fill="rgb(215,41,42)" fg:x="705" fg:w="15"/><text x="1.0637%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="0.8195%" y="373" width="0.0115%" height="15" fill="rgb(224,123,36)" fg:x="710" fg:w="10"/><text x="1.0695%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="0.8195%" y="357" width="0.0115%" height="15" fill="rgb(240,125,3)" fg:x="710" fg:w="10"/><text x="1.0695%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad_integral (40 samples, 0.05%)</title><rect x="0.8310%" y="453" width="0.0462%" height="15" fill="rgb(205,98,50)" fg:x="720" fg:w="40"/><text x="1.0810%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (84 samples, 0.10%)</title><rect x="0.7814%" y="485" width="0.0970%" height="15" fill="rgb(205,185,37)" fg:x="677" fg:w="84"/><text x="1.0314%" y="495.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (71 samples, 0.08%)</title><rect x="0.7964%" y="469" width="0.0820%" height="15" fill="rgb(238,207,15)" fg:x="690" fg:w="71"/><text x="1.0464%" y="479.50"></text></g><g><title>&lt;chessire_utils::board::Coord as core::fmt::Display&gt;::fmt (297 samples, 0.34%)</title><rect x="0.5483%" y="533" width="0.3428%" height="15" fill="rgb(213,199,42)" fg:x="475" fg:w="297"/><text x="0.7983%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (269 samples, 0.31%)</title><rect x="0.5806%" y="517" width="0.3105%" height="15" fill="rgb(235,201,11)" fg:x="503" fg:w="269"/><text x="0.8306%" y="527.50"></text></g><g><title>core::fmt::write (191 samples, 0.22%)</title><rect x="0.6706%" y="501" width="0.2205%" height="15" fill="rgb(207,46,11)" fg:x="581" fg:w="191"/><text x="0.9206%" y="511.50"></text></g><g><title>&lt;chessire_utils::piece::Piece as core::fmt::Display&gt;::fmt (11 samples, 0.01%)</title><rect x="0.9038%" y="517" width="0.0127%" height="15" fill="rgb(241,35,35)" fg:x="783" fg:w="11"/><text x="1.1538%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.01%)</title><rect x="1.0296%" y="341" width="0.0104%" height="15" fill="rgb(243,32,47)" fg:x="892" fg:w="9"/><text x="1.2796%" y="351.50"></text></g><g><title>__rdl_realloc (15 samples, 0.02%)</title><rect x="1.0573%" y="277" width="0.0173%" height="15" fill="rgb(247,202,23)" fg:x="916" fg:w="15"/><text x="1.3073%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (11 samples, 0.01%)</title><rect x="1.0619%" y="261" width="0.0127%" height="15" fill="rgb(219,102,11)" fg:x="920" fg:w="11"/><text x="1.3119%" y="271.50"></text></g><g><title>[libc.so.6] (26 samples, 0.03%)</title><rect x="1.9830%" y="229" width="0.0300%" height="15" fill="rgb(243,110,44)" fg:x="1718" fg:w="26"/><text x="2.2330%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (829 samples, 0.96%)</title><rect x="1.0573%" y="325" width="0.9569%" height="15" fill="rgb(222,74,54)" fg:x="916" fg:w="829"/><text x="1.3073%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (829 samples, 0.96%)</title><rect x="1.0573%" y="309" width="0.9569%" height="15" fill="rgb(216,99,12)" fg:x="916" fg:w="829"/><text x="1.3073%" y="319.50"></text></g><g><title>alloc::alloc::realloc (829 samples, 0.96%)</title><rect x="1.0573%" y="293" width="0.9569%" height="15" fill="rgb(226,22,26)" fg:x="916" fg:w="829"/><text x="1.3073%" y="303.50"></text></g><g><title>realloc (812 samples, 0.94%)</title><rect x="1.0769%" y="277" width="0.9372%" height="15" fill="rgb(217,163,10)" fg:x="933" fg:w="812"/><text x="1.3269%" y="287.50"></text></g><g><title>[libc.so.6] (785 samples, 0.91%)</title><rect x="1.1081%" y="261" width="0.9061%" height="15" fill="rgb(213,25,53)" fg:x="960" fg:w="785"/><text x="1.3581%" y="271.50"></text></g><g><title>[libc.so.6] (748 samples, 0.86%)</title><rect x="1.1508%" y="245" width="0.8634%" height="15" fill="rgb(252,105,26)" fg:x="997" fg:w="748"/><text x="1.4008%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (849 samples, 0.98%)</title><rect x="1.0434%" y="341" width="0.9799%" height="15" fill="rgb(220,39,43)" fg:x="904" fg:w="849"/><text x="1.2934%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (877 samples, 1.01%)</title><rect x="1.0180%" y="405" width="1.0123%" height="15" fill="rgb(229,68,48)" fg:x="882" fg:w="877"/><text x="1.2680%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (876 samples, 1.01%)</title><rect x="1.0192%" y="389" width="1.0111%" height="15" fill="rgb(252,8,32)" fg:x="883" fg:w="876"/><text x="1.2692%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (867 samples, 1.00%)</title><rect x="1.0296%" y="373" width="1.0007%" height="15" fill="rgb(223,20,43)" fg:x="892" fg:w="867"/><text x="1.2796%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (867 samples, 1.00%)</title><rect x="1.0296%" y="357" width="1.0007%" height="15" fill="rgb(229,81,49)" fg:x="892" fg:w="867"/><text x="1.2796%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.03%)</title><rect x="2.0303%" y="405" width="0.0254%" height="15" fill="rgb(236,28,36)" fg:x="1759" fg:w="22"/><text x="2.2803%" y="415.50"></text></g><g><title>[libc.so.6] (19 samples, 0.02%)</title><rect x="2.0337%" y="389" width="0.0219%" height="15" fill="rgb(249,185,26)" fg:x="1762" fg:w="19"/><text x="2.2837%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (931 samples, 1.07%)</title><rect x="0.9915%" y="485" width="1.0746%" height="15" fill="rgb(249,174,33)" fg:x="859" fg:w="931"/><text x="1.2415%" y="495.50"></text></g><g><title>alloc::string::String::push_str (927 samples, 1.07%)</title><rect x="0.9961%" y="469" width="1.0700%" height="15" fill="rgb(233,201,37)" fg:x="863" fg:w="927"/><text x="1.2461%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (927 samples, 1.07%)</title><rect x="0.9961%" y="453" width="1.0700%" height="15" fill="rgb(221,78,26)" fg:x="863" fg:w="927"/><text x="1.2461%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (927 samples, 1.07%)</title><rect x="0.9961%" y="437" width="1.0700%" height="15" fill="rgb(250,127,30)" fg:x="863" fg:w="927"/><text x="1.2461%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (927 samples, 1.07%)</title><rect x="0.9961%" y="421" width="1.0700%" height="15" fill="rgb(230,49,44)" fg:x="863" fg:w="927"/><text x="1.2461%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.01%)</title><rect x="2.0557%" y="405" width="0.0104%" height="15" fill="rgb(229,67,23)" fg:x="1781" fg:w="9"/><text x="2.3057%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.01%)</title><rect x="2.0557%" y="389" width="0.0104%" height="15" fill="rgb(249,83,47)" fg:x="1781" fg:w="9"/><text x="2.3057%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="2.1157%" y="309" width="0.0115%" height="15" fill="rgb(215,43,3)" fg:x="1833" fg:w="10"/><text x="2.3657%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.06%)</title><rect x="2.1330%" y="309" width="0.0623%" height="15" fill="rgb(238,154,13)" fg:x="1848" fg:w="54"/><text x="2.3830%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (51 samples, 0.06%)</title><rect x="2.1365%" y="293" width="0.0589%" height="15" fill="rgb(219,56,2)" fg:x="1851" fg:w="51"/><text x="2.3865%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (51 samples, 0.06%)</title><rect x="2.1365%" y="277" width="0.0589%" height="15" fill="rgb(233,0,4)" fg:x="1851" fg:w="51"/><text x="2.3865%" y="287.50"></text></g><g><title>alloc::alloc::realloc (51 samples, 0.06%)</title><rect x="2.1365%" y="261" width="0.0589%" height="15" fill="rgb(235,30,7)" fg:x="1851" fg:w="51"/><text x="2.3865%" y="271.50"></text></g><g><title>realloc (48 samples, 0.06%)</title><rect x="2.1399%" y="245" width="0.0554%" height="15" fill="rgb(250,79,13)" fg:x="1854" fg:w="48"/><text x="2.3899%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (76 samples, 0.09%)</title><rect x="2.1134%" y="373" width="0.0877%" height="15" fill="rgb(211,146,34)" fg:x="1831" fg:w="76"/><text x="2.3634%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (76 samples, 0.09%)</title><rect x="2.1134%" y="357" width="0.0877%" height="15" fill="rgb(228,22,38)" fg:x="1831" fg:w="76"/><text x="2.3634%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (75 samples, 0.09%)</title><rect x="2.1145%" y="341" width="0.0866%" height="15" fill="rgb(235,168,5)" fg:x="1832" fg:w="75"/><text x="2.3645%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (74 samples, 0.09%)</title><rect x="2.1157%" y="325" width="0.0854%" height="15" fill="rgb(221,155,16)" fg:x="1833" fg:w="74"/><text x="2.3657%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.01%)</title><rect x="2.2011%" y="373" width="0.0104%" height="15" fill="rgb(215,215,53)" fg:x="1907" fg:w="9"/><text x="2.4511%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (103 samples, 0.12%)</title><rect x="2.1065%" y="453" width="0.1189%" height="15" fill="rgb(223,4,10)" fg:x="1825" fg:w="103"/><text x="2.3565%" y="463.50"></text></g><g><title>alloc::string::String::push_str (99 samples, 0.11%)</title><rect x="2.1111%" y="437" width="0.1143%" height="15" fill="rgb(234,103,6)" fg:x="1829" fg:w="99"/><text x="2.3611%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (99 samples, 0.11%)</title><rect x="2.1111%" y="421" width="0.1143%" height="15" fill="rgb(227,97,0)" fg:x="1829" fg:w="99"/><text x="2.3611%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (99 samples, 0.11%)</title><rect x="2.1111%" y="405" width="0.1143%" height="15" fill="rgb(234,150,53)" fg:x="1829" fg:w="99"/><text x="2.3611%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (99 samples, 0.11%)</title><rect x="2.1111%" y="389" width="0.1143%" height="15" fill="rgb(228,201,54)" fg:x="1829" fg:w="99"/><text x="2.3611%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.01%)</title><rect x="2.2115%" y="373" width="0.0139%" height="15" fill="rgb(222,22,37)" fg:x="1916" fg:w="12"/><text x="2.4615%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.01%)</title><rect x="2.2115%" y="357" width="0.0139%" height="15" fill="rgb(237,53,32)" fg:x="1916" fg:w="12"/><text x="2.4615%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.03%)</title><rect x="2.2288%" y="389" width="0.0300%" height="15" fill="rgb(233,25,53)" fg:x="1931" fg:w="26"/><text x="2.4788%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.03%)</title><rect x="2.2288%" y="373" width="0.0300%" height="15" fill="rgb(210,40,34)" fg:x="1931" fg:w="26"/><text x="2.4788%" y="383.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="2.2334%" y="357" width="0.0254%" height="15" fill="rgb(241,220,44)" fg:x="1935" fg:w="22"/><text x="2.4834%" y="367.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="2.2404%" y="341" width="0.0185%" height="15" fill="rgb(235,28,35)" fg:x="1941" fg:w="16"/><text x="2.4904%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (29 samples, 0.03%)</title><rect x="2.2288%" y="453" width="0.0335%" height="15" fill="rgb(210,56,17)" fg:x="1931" fg:w="29"/><text x="2.4788%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (29 samples, 0.03%)</title><rect x="2.2288%" y="437" width="0.0335%" height="15" fill="rgb(224,130,29)" fg:x="1931" fg:w="29"/><text x="2.4788%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (29 samples, 0.03%)</title><rect x="2.2288%" y="421" width="0.0335%" height="15" fill="rgb(235,212,8)" fg:x="1931" fg:w="29"/><text x="2.4788%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="2.2288%" y="405" width="0.0335%" height="15" fill="rgb(223,33,50)" fg:x="1931" fg:w="29"/><text x="2.4788%" y="415.50"></text></g><g><title>&lt;u8 as numtoa::NumToA&lt;u8&gt;&gt;::numtoa (16 samples, 0.02%)</title><rect x="2.2946%" y="421" width="0.0185%" height="15" fill="rgb(219,149,13)" fg:x="1988" fg:w="16"/><text x="2.5446%" y="431.50"></text></g><g><title>&lt;u8 as numtoa::NumToA&lt;u8&gt;&gt;::numtoa_str (34 samples, 0.04%)</title><rect x="2.2808%" y="437" width="0.0392%" height="15" fill="rgb(250,156,29)" fg:x="1976" fg:w="34"/><text x="2.5308%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.07%)</title><rect x="2.3881%" y="357" width="0.0658%" height="15" fill="rgb(216,193,19)" fg:x="2069" fg:w="57"/><text x="2.6381%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.07%)</title><rect x="2.3881%" y="373" width="0.0669%" height="15" fill="rgb(216,135,14)" fg:x="2069" fg:w="58"/><text x="2.6381%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.02%)</title><rect x="2.4550%" y="373" width="0.0150%" height="15" fill="rgb(241,47,5)" fg:x="2127" fg:w="13"/><text x="2.7050%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.02%)</title><rect x="2.4550%" y="357" width="0.0150%" height="15" fill="rgb(233,42,35)" fg:x="2127" fg:w="13"/><text x="2.7050%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.02%)</title><rect x="2.4550%" y="341" width="0.0150%" height="15" fill="rgb(231,13,6)" fg:x="2127" fg:w="13"/><text x="2.7050%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="2.4574%" y="325" width="0.0127%" height="15" fill="rgb(207,181,40)" fg:x="2129" fg:w="11"/><text x="2.7074%" y="335.50"></text></g><g><title>__rdl_alloc (21 samples, 0.02%)</title><rect x="2.4724%" y="261" width="0.0242%" height="15" fill="rgb(254,173,49)" fg:x="2142" fg:w="21"/><text x="2.7224%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (16 samples, 0.02%)</title><rect x="2.4781%" y="245" width="0.0185%" height="15" fill="rgb(221,1,38)" fg:x="2147" fg:w="16"/><text x="2.7281%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (43 samples, 0.05%)</title><rect x="2.4700%" y="373" width="0.0496%" height="15" fill="rgb(206,124,46)" fg:x="2140" fg:w="43"/><text x="2.7200%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.05%)</title><rect x="2.4700%" y="357" width="0.0496%" height="15" fill="rgb(249,21,11)" fg:x="2140" fg:w="43"/><text x="2.7200%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.05%)</title><rect x="2.4700%" y="341" width="0.0496%" height="15" fill="rgb(222,201,40)" fg:x="2140" fg:w="43"/><text x="2.7200%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.05%)</title><rect x="2.4700%" y="325" width="0.0496%" height="15" fill="rgb(235,61,29)" fg:x="2140" fg:w="43"/><text x="2.7200%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.05%)</title><rect x="2.4712%" y="309" width="0.0485%" height="15" fill="rgb(219,207,3)" fg:x="2141" fg:w="42"/><text x="2.7212%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.05%)</title><rect x="2.4712%" y="293" width="0.0485%" height="15" fill="rgb(222,56,46)" fg:x="2141" fg:w="42"/><text x="2.7212%" y="303.50"></text></g><g><title>alloc::alloc::alloc (42 samples, 0.05%)</title><rect x="2.4712%" y="277" width="0.0485%" height="15" fill="rgb(239,76,54)" fg:x="2141" fg:w="42"/><text x="2.7212%" y="287.50"></text></g><g><title>malloc (18 samples, 0.02%)</title><rect x="2.4989%" y="261" width="0.0208%" height="15" fill="rgb(231,124,27)" fg:x="2165" fg:w="18"/><text x="2.7489%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (39 samples, 0.05%)</title><rect x="2.5266%" y="373" width="0.0450%" height="15" fill="rgb(249,195,6)" fg:x="2189" fg:w="39"/><text x="2.7766%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.05%)</title><rect x="2.5266%" y="357" width="0.0450%" height="15" fill="rgb(237,174,47)" fg:x="2189" fg:w="39"/><text x="2.7766%" y="367.50"></text></g><g><title>[libc.so.6] (39 samples, 0.05%)</title><rect x="2.5266%" y="341" width="0.0450%" height="15" fill="rgb(206,201,31)" fg:x="2189" fg:w="39"/><text x="2.7766%" y="351.50"></text></g><g><title>alloc::str::join_generic_copy (218 samples, 0.25%)</title><rect x="2.3315%" y="389" width="0.2516%" height="15" fill="rgb(231,57,52)" fg:x="2020" fg:w="218"/><text x="2.5815%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (10 samples, 0.01%)</title><rect x="2.5716%" y="373" width="0.0115%" height="15" fill="rgb(248,177,22)" fg:x="2228" fg:w="10"/><text x="2.8216%" y="383.50"></text></g><g><title>&lt;termion::color::Fg&lt;C&gt; as core::fmt::Display&gt;::fmt (458 samples, 0.53%)</title><rect x="2.0707%" y="485" width="0.5286%" height="15" fill="rgb(215,211,37)" fg:x="1794" fg:w="458"/><text x="2.3207%" y="495.50"></text></g><g><title>&lt;termion::color::Rgb as termion::color::Color&gt;::write_fg (441 samples, 0.51%)</title><rect x="2.0903%" y="469" width="0.5090%" height="15" fill="rgb(241,128,51)" fg:x="1811" fg:w="441"/><text x="2.3403%" y="479.50"></text></g><g><title>termion::color::Rgb::fg_string (292 samples, 0.34%)</title><rect x="2.2623%" y="453" width="0.3370%" height="15" fill="rgb(227,165,31)" fg:x="1960" fg:w="292"/><text x="2.5123%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (242 samples, 0.28%)</title><rect x="2.3200%" y="437" width="0.2793%" height="15" fill="rgb(228,167,24)" fg:x="2010" fg:w="242"/><text x="2.5700%" y="447.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (238 samples, 0.27%)</title><rect x="2.3246%" y="421" width="0.2747%" height="15" fill="rgb(228,143,12)" fg:x="2014" fg:w="238"/><text x="2.5746%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (232 samples, 0.27%)</title><rect x="2.3315%" y="405" width="0.2678%" height="15" fill="rgb(249,149,8)" fg:x="2020" fg:w="232"/><text x="2.5815%" y="415.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (14 samples, 0.02%)</title><rect x="2.5832%" y="389" width="0.0162%" height="15" fill="rgb(243,35,44)" fg:x="2238" fg:w="14"/><text x="2.8332%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad (10 samples, 0.01%)</title><rect x="2.6016%" y="485" width="0.0115%" height="15" fill="rgb(246,89,9)" fg:x="2254" fg:w="10"/><text x="2.8516%" y="495.50"></text></g><g><title>&lt;chessire_utils::piece::Piece as core::fmt::Display&gt;::fmt (1,513 samples, 1.75%)</title><rect x="0.8911%" y="533" width="1.7463%" height="15" fill="rgb(233,213,13)" fg:x="772" fg:w="1513"/><text x="1.1411%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1,485 samples, 1.71%)</title><rect x="0.9234%" y="517" width="1.7140%" height="15" fill="rgb(233,141,41)" fg:x="800" fg:w="1485"/><text x="1.1734%" y="527.50"></text></g><g><title>core::fmt::write (1,460 samples, 1.69%)</title><rect x="0.9522%" y="501" width="1.6852%" height="15" fill="rgb(239,167,4)" fg:x="825" fg:w="1460"/><text x="1.2022%" y="511.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (16 samples, 0.02%)</title><rect x="2.6189%" y="485" width="0.0185%" height="15" fill="rgb(209,217,16)" fg:x="2269" fg:w="16"/><text x="2.8689%" y="495.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1,929 samples, 2.23%)</title><rect x="0.4375%" y="597" width="2.2265%" height="15" fill="rgb(219,88,35)" fg:x="379" fg:w="1929"/><text x="0.6875%" y="607.50">&lt;..</text></g><g><title>&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt (1,929 samples, 2.23%)</title><rect x="0.4375%" y="581" width="2.2265%" height="15" fill="rgb(220,193,23)" fg:x="379" fg:w="1929"/><text x="0.6875%" y="591.50">&lt;..</text></g><g><title>core::fmt::Formatter::write_fmt (1,929 samples, 2.23%)</title><rect x="0.4375%" y="565" width="2.2265%" height="15" fill="rgb(230,90,52)" fg:x="379" fg:w="1929"/><text x="0.6875%" y="575.50">c..</text></g><g><title>core::fmt::write (1,929 samples, 2.23%)</title><rect x="0.4375%" y="549" width="2.2265%" height="15" fill="rgb(252,106,19)" fg:x="379" fg:w="1929"/><text x="0.6875%" y="559.50">c..</text></g><g><title>core::fmt::Formatter::pad (23 samples, 0.03%)</title><rect x="2.6374%" y="533" width="0.0265%" height="15" fill="rgb(206,74,20)" fg:x="2285" fg:w="23"/><text x="2.8874%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12 samples, 0.01%)</title><rect x="2.6674%" y="565" width="0.0139%" height="15" fill="rgb(230,138,44)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="2.6674%" y="549" width="0.0139%" height="15" fill="rgb(235,182,43)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="2.6674%" y="533" width="0.0139%" height="15" fill="rgb(242,16,51)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="2.6674%" y="517" width="0.0139%" height="15" fill="rgb(248,9,4)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="2.6674%" y="501" width="0.0139%" height="15" fill="rgb(210,31,22)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="2.6674%" y="485" width="0.0139%" height="15" fill="rgb(239,54,39)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="495.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="2.6674%" y="469" width="0.0139%" height="15" fill="rgb(230,99,41)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="479.50"></text></g><g><title>malloc (12 samples, 0.01%)</title><rect x="2.6674%" y="453" width="0.0139%" height="15" fill="rgb(253,106,12)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="463.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="2.6674%" y="437" width="0.0139%" height="15" fill="rgb(213,46,41)" fg:x="2311" fg:w="12"/><text x="2.9174%" y="447.50"></text></g><g><title>chessire_utils::moves::Move::double_push (10 samples, 0.01%)</title><rect x="2.7090%" y="357" width="0.0115%" height="15" fill="rgb(215,133,35)" fg:x="2347" fg:w="10"/><text x="2.9590%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.05%)</title><rect x="2.6836%" y="437" width="0.0450%" height="15" fill="rgb(213,28,5)" fg:x="2325" fg:w="39"/><text x="2.9336%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.05%)</title><rect x="2.6836%" y="421" width="0.0450%" height="15" fill="rgb(215,77,49)" fg:x="2325" fg:w="39"/><text x="2.9336%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (31 samples, 0.04%)</title><rect x="2.6928%" y="405" width="0.0358%" height="15" fill="rgb(248,100,22)" fg:x="2333" fg:w="31"/><text x="2.9428%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (28 samples, 0.03%)</title><rect x="2.6963%" y="389" width="0.0323%" height="15" fill="rgb(208,67,9)" fg:x="2336" fg:w="28"/><text x="2.9463%" y="399.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (28 samples, 0.03%)</title><rect x="2.6963%" y="373" width="0.0323%" height="15" fill="rgb(219,133,21)" fg:x="2336" fg:w="28"/><text x="2.9463%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (47 samples, 0.05%)</title><rect x="2.6824%" y="469" width="0.0542%" height="15" fill="rgb(246,46,29)" fg:x="2324" fg:w="47"/><text x="2.9324%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (47 samples, 0.05%)</title><rect x="2.6824%" y="453" width="0.0542%" height="15" fill="rgb(246,185,52)" fg:x="2324" fg:w="47"/><text x="2.9324%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="2.7367%" y="469" width="0.0185%" height="15" fill="rgb(252,136,11)" fg:x="2371" fg:w="16"/><text x="2.9867%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.02%)</title><rect x="2.7378%" y="453" width="0.0173%" height="15" fill="rgb(219,138,53)" fg:x="2372" fg:w="15"/><text x="2.9878%" y="463.50"></text></g><g><title>chessire::engine::bitboard::moves::get_bishop_moves (65 samples, 0.08%)</title><rect x="2.6813%" y="565" width="0.0750%" height="15" fill="rgb(211,51,23)" fg:x="2323" fg:w="65"/><text x="2.9313%" y="575.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (65 samples, 0.08%)</title><rect x="2.6813%" y="549" width="0.0750%" height="15" fill="rgb(247,221,28)" fg:x="2323" fg:w="65"/><text x="2.9313%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.08%)</title><rect x="2.6813%" y="533" width="0.0750%" height="15" fill="rgb(251,222,45)" fg:x="2323" fg:w="65"/><text x="2.9313%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.08%)</title><rect x="2.6813%" y="517" width="0.0750%" height="15" fill="rgb(217,162,53)" fg:x="2323" fg:w="65"/><text x="2.9313%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 samples, 0.08%)</title><rect x="2.6813%" y="501" width="0.0750%" height="15" fill="rgb(229,93,14)" fg:x="2323" fg:w="65"/><text x="2.9313%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (64 samples, 0.07%)</title><rect x="2.6824%" y="485" width="0.0739%" height="15" fill="rgb(209,67,49)" fg:x="2324" fg:w="64"/><text x="2.9324%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.01%)</title><rect x="2.7713%" y="469" width="0.0104%" height="15" fill="rgb(213,87,29)" fg:x="2401" fg:w="9"/><text x="3.0213%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.01%)</title><rect x="2.7713%" y="453" width="0.0104%" height="15" fill="rgb(205,151,52)" fg:x="2401" fg:w="9"/><text x="3.0213%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="2.7713%" y="437" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="2401" fg:w="9"/><text x="3.0213%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="2.7713%" y="421" width="0.0104%" height="15" fill="rgb(221,220,41)" fg:x="2401" fg:w="9"/><text x="3.0213%" y="431.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (22 samples, 0.03%)</title><rect x="2.7713%" y="549" width="0.0254%" height="15" fill="rgb(218,133,21)" fg:x="2401" fg:w="22"/><text x="3.0213%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 0.03%)</title><rect x="2.7713%" y="533" width="0.0254%" height="15" fill="rgb(221,193,43)" fg:x="2401" fg:w="22"/><text x="3.0213%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="2.7713%" y="517" width="0.0254%" height="15" fill="rgb(240,128,52)" fg:x="2401" fg:w="22"/><text x="3.0213%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="2.7713%" y="501" width="0.0254%" height="15" fill="rgb(253,114,12)" fg:x="2401" fg:w="22"/><text x="3.0213%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (22 samples, 0.03%)</title><rect x="2.7713%" y="485" width="0.0254%" height="15" fill="rgb(215,223,47)" fg:x="2401" fg:w="22"/><text x="3.0213%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="2.7817%" y="469" width="0.0150%" height="15" fill="rgb(248,225,23)" fg:x="2410" fg:w="13"/><text x="3.0317%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="2.7817%" y="453" width="0.0150%" height="15" fill="rgb(250,108,0)" fg:x="2410" fg:w="13"/><text x="3.0317%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="2.7863%" y="437" width="0.0104%" height="15" fill="rgb(228,208,7)" fg:x="2414" fg:w="9"/><text x="3.0363%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.01%)</title><rect x="2.7863%" y="421" width="0.0104%" height="15" fill="rgb(244,45,10)" fg:x="2414" fg:w="9"/><text x="3.0363%" y="431.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (9 samples, 0.01%)</title><rect x="2.7863%" y="405" width="0.0104%" height="15" fill="rgb(207,125,25)" fg:x="2414" fg:w="9"/><text x="3.0363%" y="415.50"></text></g><g><title>chessire::engine::bitboard::moves::get_king_moves (38 samples, 0.04%)</title><rect x="2.7563%" y="565" width="0.0439%" height="15" fill="rgb(210,195,18)" fg:x="2388" fg:w="38"/><text x="3.0063%" y="575.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.03%)</title><rect x="2.8036%" y="421" width="0.0254%" height="15" fill="rgb(249,80,12)" fg:x="2429" fg:w="22"/><text x="3.0536%" y="431.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (22 samples, 0.03%)</title><rect x="2.8036%" y="405" width="0.0254%" height="15" fill="rgb(221,65,9)" fg:x="2429" fg:w="22"/><text x="3.0536%" y="415.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (22 samples, 0.03%)</title><rect x="2.8036%" y="389" width="0.0254%" height="15" fill="rgb(235,49,36)" fg:x="2429" fg:w="22"/><text x="3.0536%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="2.8013%" y="453" width="0.0416%" height="15" fill="rgb(225,32,20)" fg:x="2427" fg:w="36"/><text x="3.0513%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.04%)</title><rect x="2.8036%" y="437" width="0.0392%" height="15" fill="rgb(215,141,46)" fg:x="2429" fg:w="34"/><text x="3.0536%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="2.8290%" y="421" width="0.0139%" height="15" fill="rgb(250,160,47)" fg:x="2451" fg:w="12"/><text x="3.0790%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (48 samples, 0.06%)</title><rect x="2.8013%" y="485" width="0.0554%" height="15" fill="rgb(216,222,40)" fg:x="2427" fg:w="48"/><text x="3.0513%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (48 samples, 0.06%)</title><rect x="2.8013%" y="469" width="0.0554%" height="15" fill="rgb(234,217,39)" fg:x="2427" fg:w="48"/><text x="3.0513%" y="479.50"></text></g><g><title>chessire::engine::bitboard::moves::get_knight_moves (55 samples, 0.06%)</title><rect x="2.8002%" y="565" width="0.0635%" height="15" fill="rgb(207,178,40)" fg:x="2426" fg:w="55"/><text x="3.0502%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (55 samples, 0.06%)</title><rect x="2.8002%" y="549" width="0.0635%" height="15" fill="rgb(221,136,13)" fg:x="2426" fg:w="55"/><text x="3.0502%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (55 samples, 0.06%)</title><rect x="2.8002%" y="533" width="0.0635%" height="15" fill="rgb(249,199,10)" fg:x="2426" fg:w="55"/><text x="3.0502%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (55 samples, 0.06%)</title><rect x="2.8002%" y="517" width="0.0635%" height="15" fill="rgb(249,222,13)" fg:x="2426" fg:w="55"/><text x="3.0502%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (55 samples, 0.06%)</title><rect x="2.8002%" y="501" width="0.0635%" height="15" fill="rgb(244,185,38)" fg:x="2426" fg:w="55"/><text x="3.0502%" y="511.50"></text></g><g><title>chessire::engine::bitboard::moves::get_pawn_moves (32 samples, 0.04%)</title><rect x="2.8636%" y="565" width="0.0369%" height="15" fill="rgb(236,202,9)" fg:x="2481" fg:w="32"/><text x="3.1136%" y="575.50"></text></g><g><title>chessire_utils::moves::Move::double_push (9 samples, 0.01%)</title><rect x="2.9202%" y="357" width="0.0104%" height="15" fill="rgb(250,229,37)" fg:x="2530" fg:w="9"/><text x="3.1702%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="2.9017%" y="437" width="0.0335%" height="15" fill="rgb(206,174,23)" fg:x="2514" fg:w="29"/><text x="3.1517%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="2.9017%" y="421" width="0.0335%" height="15" fill="rgb(211,33,43)" fg:x="2514" fg:w="29"/><text x="3.1517%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.03%)</title><rect x="2.9029%" y="405" width="0.0323%" height="15" fill="rgb(245,58,50)" fg:x="2515" fg:w="28"/><text x="3.1529%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (24 samples, 0.03%)</title><rect x="2.9075%" y="389" width="0.0277%" height="15" fill="rgb(244,68,36)" fg:x="2519" fg:w="24"/><text x="3.1575%" y="399.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (24 samples, 0.03%)</title><rect x="2.9075%" y="373" width="0.0277%" height="15" fill="rgb(232,229,15)" fg:x="2519" fg:w="24"/><text x="3.1575%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (31 samples, 0.04%)</title><rect x="2.9017%" y="469" width="0.0358%" height="15" fill="rgb(254,30,23)" fg:x="2514" fg:w="31"/><text x="3.1517%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (31 samples, 0.04%)</title><rect x="2.9017%" y="453" width="0.0358%" height="15" fill="rgb(235,160,14)" fg:x="2514" fg:w="31"/><text x="3.1517%" y="463.50"></text></g><g><title>chessire::engine::bitboard::moves::get_queen_moves (39 samples, 0.05%)</title><rect x="2.9006%" y="565" width="0.0450%" height="15" fill="rgb(212,155,44)" fg:x="2513" fg:w="39"/><text x="3.1506%" y="575.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (38 samples, 0.04%)</title><rect x="2.9017%" y="549" width="0.0439%" height="15" fill="rgb(226,2,50)" fg:x="2514" fg:w="38"/><text x="3.1517%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.04%)</title><rect x="2.9017%" y="533" width="0.0439%" height="15" fill="rgb(234,177,6)" fg:x="2514" fg:w="38"/><text x="3.1517%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="2.9017%" y="517" width="0.0439%" height="15" fill="rgb(217,24,9)" fg:x="2514" fg:w="38"/><text x="3.1517%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="2.9017%" y="501" width="0.0439%" height="15" fill="rgb(220,13,46)" fg:x="2514" fg:w="38"/><text x="3.1517%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (38 samples, 0.04%)</title><rect x="2.9017%" y="485" width="0.0439%" height="15" fill="rgb(239,221,27)" fg:x="2514" fg:w="38"/><text x="3.1517%" y="495.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="2.9456%" y="405" width="0.0127%" height="15" fill="rgb(222,198,25)" fg:x="2552" fg:w="11"/><text x="3.1956%" y="415.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (11 samples, 0.01%)</title><rect x="2.9456%" y="389" width="0.0127%" height="15" fill="rgb(211,99,13)" fg:x="2552" fg:w="11"/><text x="3.1956%" y="399.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (11 samples, 0.01%)</title><rect x="2.9456%" y="373" width="0.0127%" height="15" fill="rgb(232,111,31)" fg:x="2552" fg:w="11"/><text x="3.1956%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (10 samples, 0.01%)</title><rect x="2.9906%" y="357" width="0.0115%" height="15" fill="rgb(245,82,37)" fg:x="2591" fg:w="10"/><text x="3.2406%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.06%)</title><rect x="2.9456%" y="437" width="0.0589%" height="15" fill="rgb(227,149,46)" fg:x="2552" fg:w="51"/><text x="3.1956%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.06%)</title><rect x="2.9456%" y="421" width="0.0589%" height="15" fill="rgb(218,36,50)" fg:x="2552" fg:w="51"/><text x="3.1956%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (40 samples, 0.05%)</title><rect x="2.9583%" y="405" width="0.0462%" height="15" fill="rgb(226,80,48)" fg:x="2563" fg:w="40"/><text x="3.2083%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (38 samples, 0.04%)</title><rect x="2.9606%" y="389" width="0.0439%" height="15" fill="rgb(238,224,15)" fg:x="2565" fg:w="38"/><text x="3.2106%" y="399.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (36 samples, 0.04%)</title><rect x="2.9629%" y="373" width="0.0416%" height="15" fill="rgb(241,136,10)" fg:x="2567" fg:w="36"/><text x="3.2129%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (57 samples, 0.07%)</title><rect x="2.9456%" y="469" width="0.0658%" height="15" fill="rgb(208,32,45)" fg:x="2552" fg:w="57"/><text x="3.1956%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (57 samples, 0.07%)</title><rect x="2.9456%" y="453" width="0.0658%" height="15" fill="rgb(207,135,9)" fg:x="2552" fg:w="57"/><text x="3.1956%" y="463.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="3.0114%" y="437" width="0.0162%" height="15" fill="rgb(206,86,44)" fg:x="2609" fg:w="14"/><text x="3.2614%" y="447.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (13 samples, 0.02%)</title><rect x="3.0125%" y="421" width="0.0150%" height="15" fill="rgb(245,177,15)" fg:x="2610" fg:w="13"/><text x="3.2625%" y="431.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (13 samples, 0.02%)</title><rect x="3.0125%" y="405" width="0.0150%" height="15" fill="rgb(206,64,50)" fg:x="2610" fg:w="13"/><text x="3.2625%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="3.0114%" y="469" width="0.0312%" height="15" fill="rgb(234,36,40)" fg:x="2609" fg:w="27"/><text x="3.2614%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="3.0114%" y="453" width="0.0312%" height="15" fill="rgb(213,64,8)" fg:x="2609" fg:w="27"/><text x="3.2614%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.02%)</title><rect x="3.0275%" y="437" width="0.0150%" height="15" fill="rgb(210,75,36)" fg:x="2623" fg:w="13"/><text x="3.2775%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.01%)</title><rect x="3.0287%" y="421" width="0.0139%" height="15" fill="rgb(229,88,21)" fg:x="2624" fg:w="12"/><text x="3.2787%" y="431.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (12 samples, 0.01%)</title><rect x="3.0287%" y="405" width="0.0139%" height="15" fill="rgb(252,204,47)" fg:x="2624" fg:w="12"/><text x="3.2787%" y="415.50"></text></g><g><title>chessire::engine::bitboard::moves::get_rook_moves (85 samples, 0.10%)</title><rect x="2.9456%" y="565" width="0.0981%" height="15" fill="rgb(208,77,27)" fg:x="2552" fg:w="85"/><text x="3.1956%" y="575.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (85 samples, 0.10%)</title><rect x="2.9456%" y="549" width="0.0981%" height="15" fill="rgb(221,76,26)" fg:x="2552" fg:w="85"/><text x="3.1956%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (85 samples, 0.10%)</title><rect x="2.9456%" y="533" width="0.0981%" height="15" fill="rgb(225,139,18)" fg:x="2552" fg:w="85"/><text x="3.1956%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (85 samples, 0.10%)</title><rect x="2.9456%" y="517" width="0.0981%" height="15" fill="rgb(230,137,11)" fg:x="2552" fg:w="85"/><text x="3.1956%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (85 samples, 0.10%)</title><rect x="2.9456%" y="501" width="0.0981%" height="15" fill="rgb(212,28,1)" fg:x="2552" fg:w="85"/><text x="3.1956%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (85 samples, 0.10%)</title><rect x="2.9456%" y="485" width="0.0981%" height="15" fill="rgb(248,164,17)" fg:x="2552" fg:w="85"/><text x="3.1956%" y="495.50"></text></g><g><title>[libc.so.6] (40 samples, 0.05%)</title><rect x="3.1730%" y="405" width="0.0462%" height="15" fill="rgb(222,171,42)" fg:x="2749" fg:w="40"/><text x="3.4230%" y="415.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (11 samples, 0.01%)</title><rect x="3.2607%" y="373" width="0.0127%" height="15" fill="rgb(243,84,45)" fg:x="2825" fg:w="11"/><text x="3.5107%" y="383.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_queen_attack (14 samples, 0.02%)</title><rect x="3.2595%" y="389" width="0.0162%" height="15" fill="rgb(252,49,23)" fg:x="2824" fg:w="14"/><text x="3.5095%" y="399.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::is_square_attacked_by (48 samples, 0.06%)</title><rect x="3.2238%" y="405" width="0.0554%" height="15" fill="rgb(215,19,7)" fg:x="2793" fg:w="48"/><text x="3.4738%" y="415.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (201 samples, 0.23%)</title><rect x="3.2826%" y="405" width="0.2320%" height="15" fill="rgb(238,81,41)" fg:x="2844" fg:w="201"/><text x="3.5326%" y="415.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (196 samples, 0.23%)</title><rect x="3.2884%" y="389" width="0.2262%" height="15" fill="rgb(210,199,37)" fg:x="2849" fg:w="196"/><text x="3.5384%" y="399.50"></text></g><g><title>chessire_utils::board::Coord::to_usize (10 samples, 0.01%)</title><rect x="3.5204%" y="405" width="0.0115%" height="15" fill="rgb(244,192,49)" fg:x="3050" fg:w="10"/><text x="3.7704%" y="415.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (414 samples, 0.48%)</title><rect x="3.0645%" y="421" width="0.4779%" height="15" fill="rgb(226,211,11)" fg:x="2655" fg:w="414"/><text x="3.3145%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as core::clone::Clone&gt;::clone (56 samples, 0.06%)</title><rect x="3.5423%" y="421" width="0.0646%" height="15" fill="rgb(236,162,54)" fg:x="3069" fg:w="56"/><text x="3.7923%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardState as core::clone::Clone&gt;::clone (52 samples, 0.06%)</title><rect x="3.5469%" y="405" width="0.0600%" height="15" fill="rgb(220,229,9)" fg:x="3073" fg:w="52"/><text x="3.7969%" y="415.50"></text></g><g><title>[libc.so.6] (51 samples, 0.06%)</title><rect x="3.5481%" y="389" width="0.0589%" height="15" fill="rgb(250,87,22)" fg:x="3074" fg:w="51"/><text x="3.7981%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (502 samples, 0.58%)</title><rect x="3.0437%" y="565" width="0.5794%" height="15" fill="rgb(239,43,17)" fg:x="2637" fg:w="502"/><text x="3.2937%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (502 samples, 0.58%)</title><rect x="3.0437%" y="549" width="0.5794%" height="15" fill="rgb(231,177,25)" fg:x="2637" fg:w="502"/><text x="3.2937%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (502 samples, 0.58%)</title><rect x="3.0437%" y="533" width="0.5794%" height="15" fill="rgb(219,179,1)" fg:x="2637" fg:w="502"/><text x="3.2937%" y="543.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (501 samples, 0.58%)</title><rect x="3.0449%" y="517" width="0.5783%" height="15" fill="rgb(238,219,53)" fg:x="2638" fg:w="501"/><text x="3.2949%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (501 samples, 0.58%)</title><rect x="3.0449%" y="501" width="0.5783%" height="15" fill="rgb(232,167,36)" fg:x="2638" fg:w="501"/><text x="3.2949%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (501 samples, 0.58%)</title><rect x="3.0449%" y="485" width="0.5783%" height="15" fill="rgb(244,19,51)" fg:x="2638" fg:w="501"/><text x="3.2949%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (498 samples, 0.57%)</title><rect x="3.0483%" y="469" width="0.5748%" height="15" fill="rgb(224,6,22)" fg:x="2641" fg:w="498"/><text x="3.2983%" y="479.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves::{{closure}} (490 samples, 0.57%)</title><rect x="3.0575%" y="453" width="0.5656%" height="15" fill="rgb(224,145,5)" fg:x="2649" fg:w="490"/><text x="3.3075%" y="463.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::test_move_legality (489 samples, 0.56%)</title><rect x="3.0587%" y="437" width="0.5644%" height="15" fill="rgb(234,130,49)" fg:x="2650" fg:w="489"/><text x="3.3087%" y="447.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="3.6070%" y="421" width="0.0162%" height="15" fill="rgb(254,6,2)" fg:x="3125" fg:w="14"/><text x="3.8570%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (842 samples, 0.97%)</title><rect x="2.6640%" y="597" width="0.9719%" height="15" fill="rgb(208,96,46)" fg:x="2308" fg:w="842"/><text x="2.9140%" y="607.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves (842 samples, 0.97%)</title><rect x="2.6640%" y="581" width="0.9719%" height="15" fill="rgb(239,3,39)" fg:x="2308" fg:w="842"/><text x="2.9140%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chessire_utils::moves::Move&gt;&gt; (11 samples, 0.01%)</title><rect x="3.6231%" y="565" width="0.0127%" height="15" fill="rgb(233,210,1)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chessire_utils::moves::Move&gt;&gt; (11 samples, 0.01%)</title><rect x="3.6231%" y="549" width="0.0127%" height="15" fill="rgb(244,137,37)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="3.6231%" y="533" width="0.0127%" height="15" fill="rgb(240,136,2)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="3.6231%" y="517" width="0.0127%" height="15" fill="rgb(239,18,37)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="3.6231%" y="501" width="0.0127%" height="15" fill="rgb(218,185,22)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="511.50"></text></g><g><title>cfree (11 samples, 0.01%)</title><rect x="3.6231%" y="485" width="0.0127%" height="15" fill="rgb(225,218,4)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="495.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="3.6231%" y="469" width="0.0127%" height="15" fill="rgb(230,182,32)" fg:x="3139" fg:w="11"/><text x="3.8731%" y="479.50"></text></g><g><title>[libc.so.6] (48 samples, 0.06%)</title><rect x="3.7939%" y="581" width="0.0554%" height="15" fill="rgb(242,56,43)" fg:x="3287" fg:w="48"/><text x="4.0439%" y="591.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_queen_attack (12 samples, 0.01%)</title><rect x="3.8701%" y="565" width="0.0139%" height="15" fill="rgb(233,99,24)" fg:x="3353" fg:w="12"/><text x="4.1201%" y="575.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::is_square_attacked_by (32 samples, 0.04%)</title><rect x="3.8505%" y="581" width="0.0369%" height="15" fill="rgb(234,209,42)" fg:x="3336" fg:w="32"/><text x="4.1005%" y="591.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (223 samples, 0.26%)</title><rect x="3.8990%" y="581" width="0.2574%" height="15" fill="rgb(227,7,12)" fg:x="3378" fg:w="223"/><text x="4.1490%" y="591.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (221 samples, 0.26%)</title><rect x="3.9013%" y="565" width="0.2551%" height="15" fill="rgb(245,203,43)" fg:x="3380" fg:w="221"/><text x="4.1513%" y="575.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (480 samples, 0.55%)</title><rect x="3.6358%" y="597" width="0.5540%" height="15" fill="rgb(238,205,33)" fg:x="3150" fg:w="480"/><text x="3.8858%" y="607.50"></text></g><g><title>core::fmt::Arguments::new_v1 (162 samples, 0.19%)</title><rect x="5.0936%" y="549" width="0.1870%" height="15" fill="rgb(231,56,7)" fg:x="4413" fg:w="162"/><text x="5.3436%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (187 samples, 0.22%)</title><rect x="11.3022%" y="405" width="0.2158%" height="15" fill="rgb(244,186,29)" fg:x="9792" fg:w="187"/><text x="11.5522%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (94 samples, 0.11%)</title><rect x="11.4095%" y="389" width="0.1085%" height="15" fill="rgb(234,111,31)" fg:x="9885" fg:w="94"/><text x="11.6595%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (258 samples, 0.30%)</title><rect x="11.5965%" y="373" width="0.2978%" height="15" fill="rgb(241,149,10)" fg:x="10047" fg:w="258"/><text x="11.8465%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (83 samples, 0.10%)</title><rect x="11.8943%" y="373" width="0.0958%" height="15" fill="rgb(249,206,44)" fg:x="10305" fg:w="83"/><text x="12.1443%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (47 samples, 0.05%)</title><rect x="11.9913%" y="373" width="0.0542%" height="15" fill="rgb(251,153,30)" fg:x="10389" fg:w="47"/><text x="12.2413%" y="383.50"></text></g><g><title>__rdl_realloc (231 samples, 0.27%)</title><rect x="12.4657%" y="309" width="0.2666%" height="15" fill="rgb(239,152,38)" fg:x="10800" fg:w="231"/><text x="12.7157%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (166 samples, 0.19%)</title><rect x="12.5407%" y="293" width="0.1916%" height="15" fill="rgb(249,139,47)" fg:x="10865" fg:w="166"/><text x="12.7907%" y="303.50"></text></g><g><title>__rust_realloc (33 samples, 0.04%)</title><rect x="12.7323%" y="309" width="0.0381%" height="15" fill="rgb(244,64,35)" fg:x="11031" fg:w="33"/><text x="12.9823%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,913 samples, 3.36%)</title><rect x="12.4645%" y="357" width="3.3623%" height="15" fill="rgb(216,46,15)" fg:x="10799" fg:w="2913"/><text x="12.7145%" y="367.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (2,913 samples, 3.36%)</title><rect x="12.4645%" y="341" width="3.3623%" height="15" fill="rgb(250,74,19)" fg:x="10799" fg:w="2913"/><text x="12.7145%" y="351.50">all..</text></g><g><title>alloc::alloc::realloc (2,912 samples, 3.36%)</title><rect x="12.4657%" y="325" width="3.3611%" height="15" fill="rgb(249,42,33)" fg:x="10800" fg:w="2912"/><text x="12.7157%" y="335.50">all..</text></g><g><title>realloc (2,648 samples, 3.06%)</title><rect x="12.7704%" y="309" width="3.0564%" height="15" fill="rgb(242,149,17)" fg:x="11064" fg:w="2648"/><text x="13.0204%" y="319.50">rea..</text></g><g><title>[libc.so.6] (2,166 samples, 2.50%)</title><rect x="13.3267%" y="293" width="2.5001%" height="15" fill="rgb(244,29,21)" fg:x="11546" fg:w="2166"/><text x="13.5767%" y="303.50">[l..</text></g><g><title>[libc.so.6] (1,341 samples, 1.55%)</title><rect x="14.2790%" y="277" width="1.5478%" height="15" fill="rgb(220,130,37)" fg:x="12371" fg:w="1341"/><text x="14.5290%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,354 samples, 3.87%)</title><rect x="12.0455%" y="373" width="3.8713%" height="15" fill="rgb(211,67,2)" fg:x="10436" fg:w="3354"/><text x="12.2955%" y="383.50">allo..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (78 samples, 0.09%)</title><rect x="15.8268%" y="357" width="0.0900%" height="15" fill="rgb(235,68,52)" fg:x="13712" fg:w="78"/><text x="16.0768%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (108 samples, 0.12%)</title><rect x="15.9168%" y="341" width="0.1247%" height="15" fill="rgb(246,142,3)" fg:x="13790" fg:w="108"/><text x="16.1668%" y="351.50"></text></g><g><title>core::cmp::max (138 samples, 0.16%)</title><rect x="15.9168%" y="373" width="0.1593%" height="15" fill="rgb(241,25,7)" fg:x="13790" fg:w="138"/><text x="16.1668%" y="383.50"></text></g><g><title>core::cmp::Ord::max (138 samples, 0.16%)</title><rect x="15.9168%" y="357" width="0.1593%" height="15" fill="rgb(242,119,39)" fg:x="13790" fg:w="138"/><text x="16.1668%" y="367.50"></text></g><g><title>core::cmp::max_by (30 samples, 0.03%)</title><rect x="16.0415%" y="341" width="0.0346%" height="15" fill="rgb(241,98,45)" fg:x="13898" fg:w="30"/><text x="16.2915%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,573 samples, 5.28%)</title><rect x="10.9167%" y="437" width="5.2783%" height="15" fill="rgb(254,28,30)" fg:x="9458" fg:w="4573"/><text x="11.1667%" y="447.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4,360 samples, 5.03%)</title><rect x="11.1625%" y="421" width="5.0324%" height="15" fill="rgb(241,142,54)" fg:x="9671" fg:w="4360"/><text x="11.4125%" y="431.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4,052 samples, 4.68%)</title><rect x="11.5180%" y="405" width="4.6769%" height="15" fill="rgb(222,85,15)" fg:x="9979" fg:w="4052"/><text x="11.7680%" y="415.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4,050 samples, 4.67%)</title><rect x="11.5203%" y="389" width="4.6746%" height="15" fill="rgb(210,85,47)" fg:x="9981" fg:w="4050"/><text x="11.7703%" y="399.50">alloc..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (103 samples, 0.12%)</title><rect x="16.0761%" y="373" width="0.1189%" height="15" fill="rgb(224,206,25)" fg:x="13928" fg:w="103"/><text x="16.3261%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (103 samples, 0.12%)</title><rect x="16.0761%" y="357" width="0.1189%" height="15" fill="rgb(243,201,19)" fg:x="13928" fg:w="103"/><text x="16.3261%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,924 samples, 2.22%)</title><rect x="16.1950%" y="437" width="2.2207%" height="15" fill="rgb(236,59,4)" fg:x="14031" fg:w="1924"/><text x="16.4450%" y="447.50">c..</text></g><g><title>[libc.so.6] (1,828 samples, 2.11%)</title><rect x="16.3058%" y="421" width="2.1099%" height="15" fill="rgb(254,179,45)" fg:x="14127" fg:w="1828"/><text x="16.5558%" y="431.50">[..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9,604 samples, 11.09%)</title><rect x="7.7287%" y="517" width="11.0852%" height="15" fill="rgb(226,14,10)" fg:x="6696" fg:w="9604"/><text x="7.9787%" y="527.50">&lt;alloc::string::..</text></g><g><title>alloc::string::String::push_str (8,415 samples, 9.71%)</title><rect x="9.1011%" y="501" width="9.7128%" height="15" fill="rgb(244,27,41)" fg:x="7885" fg:w="8415"/><text x="9.3511%" y="511.50">alloc::string:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8,415 samples, 9.71%)</title><rect x="9.1011%" y="485" width="9.7128%" height="15" fill="rgb(235,35,32)" fg:x="7885" fg:w="8415"/><text x="9.3511%" y="495.50">alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8,415 samples, 9.71%)</title><rect x="9.1011%" y="469" width="9.7128%" height="15" fill="rgb(218,68,31)" fg:x="7885" fg:w="8415"/><text x="9.3511%" y="479.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8,414 samples, 9.71%)</title><rect x="9.1022%" y="453" width="9.7117%" height="15" fill="rgb(207,120,37)" fg:x="7886" fg:w="8414"/><text x="9.3522%" y="463.50">alloc::vec::Ve..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (345 samples, 0.40%)</title><rect x="18.4157%" y="437" width="0.3982%" height="15" fill="rgb(227,98,0)" fg:x="15955" fg:w="345"/><text x="18.6657%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (345 samples, 0.40%)</title><rect x="18.4157%" y="421" width="0.3982%" height="15" fill="rgb(207,7,3)" fg:x="15955" fg:w="345"/><text x="18.6657%" y="431.50"></text></g><g><title>&lt;bool as core::fmt::Display&gt;::fmt (704 samples, 0.81%)</title><rect x="18.8139%" y="517" width="0.8126%" height="15" fill="rgb(206,98,19)" fg:x="16300" fg:w="704"/><text x="19.0639%" y="527.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (164 samples, 0.19%)</title><rect x="19.4372%" y="501" width="0.1893%" height="15" fill="rgb(217,5,26)" fg:x="16840" fg:w="164"/><text x="19.6872%" y="511.50"></text></g><g><title>chessire_utils::board::to_char (343 samples, 0.40%)</title><rect x="20.0039%" y="501" width="0.3959%" height="15" fill="rgb(235,190,38)" fg:x="17331" fg:w="343"/><text x="20.2539%" y="511.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (227 samples, 0.26%)</title><rect x="20.1378%" y="485" width="0.2620%" height="15" fill="rgb(247,86,24)" fg:x="17447" fg:w="227"/><text x="20.3878%" y="495.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (80 samples, 0.09%)</title><rect x="20.3075%" y="469" width="0.0923%" height="15" fill="rgb(205,101,16)" fg:x="17594" fg:w="80"/><text x="20.5575%" y="479.50"></text></g><g><title>core::fmt::Arguments::new_v1 (81 samples, 0.09%)</title><rect x="20.3998%" y="501" width="0.0935%" height="15" fill="rgb(246,168,33)" fg:x="17674" fg:w="81"/><text x="20.6498%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.05%)</title><rect x="24.5146%" y="389" width="0.0519%" height="15" fill="rgb(231,114,1)" fg:x="21239" fg:w="45"/><text x="24.7646%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (44 samples, 0.05%)</title><rect x="24.5666%" y="389" width="0.0508%" height="15" fill="rgb(207,184,53)" fg:x="21284" fg:w="44"/><text x="24.8166%" y="399.50"></text></g><g><title>__rdl_alloc (39 samples, 0.05%)</title><rect x="24.7686%" y="373" width="0.0450%" height="15" fill="rgb(224,95,51)" fg:x="21459" fg:w="39"/><text x="25.0186%" y="383.50"></text></g><g><title>__rust_alloc (45 samples, 0.05%)</title><rect x="24.8136%" y="373" width="0.0519%" height="15" fill="rgb(212,188,45)" fg:x="21498" fg:w="45"/><text x="25.0636%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (434 samples, 0.50%)</title><rect x="24.6220%" y="389" width="0.5009%" height="15" fill="rgb(223,154,38)" fg:x="21332" fg:w="434"/><text x="24.8720%" y="399.50"></text></g><g><title>malloc (223 samples, 0.26%)</title><rect x="24.8655%" y="373" width="0.2574%" height="15" fill="rgb(251,22,52)" fg:x="21543" fg:w="223"/><text x="25.1155%" y="383.50"></text></g><g><title>core::cmp::max (34 samples, 0.04%)</title><rect x="25.1229%" y="389" width="0.0392%" height="15" fill="rgb(229,209,22)" fg:x="21766" fg:w="34"/><text x="25.3729%" y="399.50"></text></g><g><title>core::cmp::Ord::max (34 samples, 0.04%)</title><rect x="25.1229%" y="373" width="0.0392%" height="15" fill="rgb(234,138,34)" fg:x="21766" fg:w="34"/><text x="25.3729%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.04%)</title><rect x="25.1229%" y="357" width="0.0392%" height="15" fill="rgb(212,95,11)" fg:x="21766" fg:w="34"/><text x="25.3729%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (614 samples, 0.71%)</title><rect x="24.5100%" y="421" width="0.7087%" height="15" fill="rgb(240,179,47)" fg:x="21235" fg:w="614"/><text x="24.7600%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (614 samples, 0.71%)</title><rect x="24.5100%" y="405" width="0.7087%" height="15" fill="rgb(240,163,11)" fg:x="21235" fg:w="614"/><text x="24.7600%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (49 samples, 0.06%)</title><rect x="25.1622%" y="389" width="0.0566%" height="15" fill="rgb(236,37,12)" fg:x="21800" fg:w="49"/><text x="25.4122%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (49 samples, 0.06%)</title><rect x="25.1622%" y="373" width="0.0566%" height="15" fill="rgb(232,164,16)" fg:x="21800" fg:w="49"/><text x="25.4122%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (778 samples, 0.90%)</title><rect x="24.3230%" y="437" width="0.8980%" height="15" fill="rgb(244,205,15)" fg:x="21073" fg:w="778"/><text x="24.5730%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (932 samples, 1.08%)</title><rect x="24.2296%" y="469" width="1.0757%" height="15" fill="rgb(223,117,47)" fg:x="20992" fg:w="932"/><text x="24.4796%" y="479.50"></text></g><g><title>alloc::string::String::push (851 samples, 0.98%)</title><rect x="24.3230%" y="453" width="0.9822%" height="15" fill="rgb(244,107,35)" fg:x="21073" fg:w="851"/><text x="24.5730%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (73 samples, 0.08%)</title><rect x="25.2210%" y="437" width="0.0843%" height="15" fill="rgb(205,140,8)" fg:x="21851" fg:w="73"/><text x="25.4710%" y="447.50"></text></g><g><title>core::char::methods::len_utf8 (73 samples, 0.08%)</title><rect x="25.2210%" y="421" width="0.0843%" height="15" fill="rgb(228,84,46)" fg:x="21851" fg:w="73"/><text x="25.4710%" y="431.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (93 samples, 0.11%)</title><rect x="25.6931%" y="453" width="0.1073%" height="15" fill="rgb(254,188,9)" fg:x="22260" fg:w="93"/><text x="25.9431%" y="463.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (507 samples, 0.59%)</title><rect x="25.3053%" y="469" width="0.5852%" height="15" fill="rgb(206,112,54)" fg:x="21924" fg:w="507"/><text x="25.5553%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (78 samples, 0.09%)</title><rect x="25.8005%" y="453" width="0.0900%" height="15" fill="rgb(216,84,49)" fg:x="22353" fg:w="78"/><text x="26.0505%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (78 samples, 0.09%)</title><rect x="25.8005%" y="437" width="0.0900%" height="15" fill="rgb(214,194,35)" fg:x="22353" fg:w="78"/><text x="26.0505%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.18%)</title><rect x="25.8905%" y="469" width="0.1812%" height="15" fill="rgb(249,28,3)" fg:x="22431" fg:w="157"/><text x="26.1405%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (157 samples, 0.18%)</title><rect x="25.8905%" y="453" width="0.1812%" height="15" fill="rgb(222,56,52)" fg:x="22431" fg:w="157"/><text x="26.1405%" y="463.50"></text></g><g><title>core::fmt::Formatter::new (88 samples, 0.10%)</title><rect x="26.0717%" y="469" width="0.1016%" height="15" fill="rgb(245,217,50)" fg:x="22588" fg:w="88"/><text x="26.3217%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.09%)</title><rect x="26.9893%" y="357" width="0.0935%" height="15" fill="rgb(213,201,24)" fg:x="23383" fg:w="81"/><text x="27.2393%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (600 samples, 0.69%)</title><rect x="26.7896%" y="437" width="0.6925%" height="15" fill="rgb(248,116,28)" fg:x="23210" fg:w="600"/><text x="27.0396%" y="447.50"></text></g><g><title>alloc::string::String::push_str (436 samples, 0.50%)</title><rect x="26.9789%" y="421" width="0.5032%" height="15" fill="rgb(219,72,43)" fg:x="23374" fg:w="436"/><text x="27.2289%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (436 samples, 0.50%)</title><rect x="26.9789%" y="405" width="0.5032%" height="15" fill="rgb(209,138,14)" fg:x="23374" fg:w="436"/><text x="27.2289%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (436 samples, 0.50%)</title><rect x="26.9789%" y="389" width="0.5032%" height="15" fill="rgb(222,18,33)" fg:x="23374" fg:w="436"/><text x="27.2289%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (435 samples, 0.50%)</title><rect x="26.9801%" y="373" width="0.5021%" height="15" fill="rgb(213,199,7)" fg:x="23375" fg:w="435"/><text x="27.2301%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (346 samples, 0.40%)</title><rect x="27.0828%" y="357" width="0.3994%" height="15" fill="rgb(250,110,10)" fg:x="23464" fg:w="346"/><text x="27.3328%" y="367.50"></text></g><g><title>[libc.so.6] (344 samples, 0.40%)</title><rect x="27.0851%" y="341" width="0.3971%" height="15" fill="rgb(248,123,6)" fg:x="23466" fg:w="344"/><text x="27.3351%" y="351.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (184 samples, 0.21%)</title><rect x="28.1239%" y="421" width="0.2124%" height="15" fill="rgb(206,91,31)" fg:x="24366" fg:w="184"/><text x="28.3739%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad_integral (820 samples, 0.95%)</title><rect x="27.4822%" y="437" width="0.9465%" height="15" fill="rgb(211,154,13)" fg:x="23810" fg:w="820"/><text x="27.7322%" y="447.50"></text></g><g><title>core::fmt::Formatter::sign_plus (80 samples, 0.09%)</title><rect x="28.3363%" y="421" width="0.0923%" height="15" fill="rgb(225,148,7)" fg:x="24550" fg:w="80"/><text x="28.5863%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1,956 samples, 2.26%)</title><rect x="26.1733%" y="469" width="2.2577%" height="15" fill="rgb(220,160,43)" fg:x="22676" fg:w="1956"/><text x="26.4233%" y="479.50">c..</text></g><g><title>core::fmt::num::imp::fmt_u64 (1,588 samples, 1.83%)</title><rect x="26.5980%" y="453" width="1.8329%" height="15" fill="rgb(213,52,39)" fg:x="23044" fg:w="1588"/><text x="26.8480%" y="463.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (93 samples, 0.11%)</title><rect x="28.4309%" y="469" width="0.1073%" height="15" fill="rgb(243,137,7)" fg:x="24632" fg:w="93"/><text x="28.6809%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (93 samples, 0.11%)</title><rect x="28.4309%" y="453" width="0.1073%" height="15" fill="rgb(230,79,13)" fg:x="24632" fg:w="93"/><text x="28.6809%" y="463.50"></text></g><g><title>&lt;chessire_utils::board::Coord as core::fmt::Display&gt;::fmt (7,801 samples, 9.00%)</title><rect x="19.6265%" y="517" width="9.0041%" height="15" fill="rgb(247,105,23)" fg:x="17004" fg:w="7801"/><text x="19.8765%" y="527.50">&lt;chessire_uti..</text></g><g><title>core::fmt::Formatter::write_fmt (7,050 samples, 8.14%)</title><rect x="20.4933%" y="501" width="8.1373%" height="15" fill="rgb(223,179,41)" fg:x="17755" fg:w="7050"/><text x="20.7433%" y="511.50">core::fmt::..</text></g><g><title>core::fmt::write (4,843 samples, 5.59%)</title><rect x="23.0407%" y="485" width="5.5899%" height="15" fill="rgb(218,9,34)" fg:x="19962" fg:w="4843"/><text x="23.2907%" y="495.50">core::f..</text></g><g><title>core::str::&lt;impl str&gt;::is_empty (80 samples, 0.09%)</title><rect x="28.5383%" y="469" width="0.0923%" height="15" fill="rgb(222,106,8)" fg:x="24725" fg:w="80"/><text x="28.7883%" y="479.50"></text></g><g><title>&lt;chessire_utils::piece::Piece as core::fmt::Display&gt;::fmt (107 samples, 0.12%)</title><rect x="28.9492%" y="501" width="0.1235%" height="15" fill="rgb(211,220,0)" fg:x="25081" fg:w="107"/><text x="29.1992%" y="511.50"></text></g><g><title>chessire_utils::piece::Piece::get_unicode (48 samples, 0.06%)</title><rect x="29.0738%" y="501" width="0.0554%" height="15" fill="rgb(229,52,16)" fg:x="25189" fg:w="48"/><text x="29.3238%" y="511.50"></text></g><g><title>core::fmt::Arguments::new_v1 (58 samples, 0.07%)</title><rect x="29.1293%" y="501" width="0.0669%" height="15" fill="rgb(212,155,18)" fg:x="25237" fg:w="58"/><text x="29.3793%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (193 samples, 0.22%)</title><rect x="31.1041%" y="469" width="0.2228%" height="15" fill="rgb(242,21,14)" fg:x="26948" fg:w="193"/><text x="31.3541%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (73 samples, 0.08%)</title><rect x="32.0679%" y="357" width="0.0843%" height="15" fill="rgb(222,19,48)" fg:x="27783" fg:w="73"/><text x="32.3179%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (258 samples, 0.30%)</title><rect x="32.1591%" y="325" width="0.2978%" height="15" fill="rgb(232,45,27)" fg:x="27862" fg:w="258"/><text x="32.4091%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (47 samples, 0.05%)</title><rect x="32.4569%" y="325" width="0.0542%" height="15" fill="rgb(249,103,42)" fg:x="28120" fg:w="47"/><text x="32.7069%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (13 samples, 0.02%)</title><rect x="32.5192%" y="325" width="0.0150%" height="15" fill="rgb(246,81,33)" fg:x="28174" fg:w="13"/><text x="32.7692%" y="335.50"></text></g><g><title>__rdl_realloc (331 samples, 0.38%)</title><rect x="32.8332%" y="261" width="0.3820%" height="15" fill="rgb(252,33,42)" fg:x="28446" fg:w="331"/><text x="33.0832%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (257 samples, 0.30%)</title><rect x="32.9186%" y="245" width="0.2966%" height="15" fill="rgb(209,212,41)" fg:x="28520" fg:w="257"/><text x="33.1686%" y="255.50"></text></g><g><title>__rust_realloc (54 samples, 0.06%)</title><rect x="33.2152%" y="261" width="0.0623%" height="15" fill="rgb(207,154,6)" fg:x="28777" fg:w="54"/><text x="33.4652%" y="271.50"></text></g><g><title>[libc.so.6] (587 samples, 0.68%)</title><rect x="37.3924%" y="213" width="0.6775%" height="15" fill="rgb(223,64,47)" fg:x="32396" fg:w="587"/><text x="37.6424%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4,546 samples, 5.25%)</title><rect x="32.8251%" y="309" width="5.2471%" height="15" fill="rgb(211,161,38)" fg:x="28439" fg:w="4546"/><text x="33.0751%" y="319.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (4,546 samples, 5.25%)</title><rect x="32.8251%" y="293" width="5.2471%" height="15" fill="rgb(219,138,40)" fg:x="28439" fg:w="4546"/><text x="33.0751%" y="303.50">alloc:..</text></g><g><title>alloc::alloc::realloc (4,540 samples, 5.24%)</title><rect x="32.8320%" y="277" width="5.2402%" height="15" fill="rgb(241,228,46)" fg:x="28445" fg:w="4540"/><text x="33.0820%" y="287.50">alloc:..</text></g><g><title>realloc (4,154 samples, 4.79%)</title><rect x="33.2775%" y="261" width="4.7947%" height="15" fill="rgb(223,209,38)" fg:x="28831" fg:w="4154"/><text x="33.5275%" y="271.50">realloc</text></g><g><title>[libc.so.6] (3,598 samples, 4.15%)</title><rect x="33.9193%" y="245" width="4.1529%" height="15" fill="rgb(236,164,45)" fg:x="29387" fg:w="3598"/><text x="34.1693%" y="255.50">[libc..</text></g><g><title>[libc.so.6] (2,864 samples, 3.31%)</title><rect x="34.7665%" y="229" width="3.3057%" height="15" fill="rgb(231,15,5)" fg:x="30121" fg:w="2864"/><text x="35.0165%" y="239.50">[li..</text></g><g><title>alloc::raw_vec::finish_grow (4,864 samples, 5.61%)</title><rect x="32.5342%" y="325" width="5.6142%" height="15" fill="rgb(252,35,15)" fg:x="28187" fg:w="4864"/><text x="32.7842%" y="335.50">alloc::..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (66 samples, 0.08%)</title><rect x="38.0722%" y="309" width="0.0762%" height="15" fill="rgb(248,181,18)" fg:x="32985" fg:w="66"/><text x="38.3222%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.08%)</title><rect x="38.1484%" y="293" width="0.0762%" height="15" fill="rgb(233,39,42)" fg:x="33051" fg:w="66"/><text x="38.3984%" y="303.50"></text></g><g><title>core::cmp::max (70 samples, 0.08%)</title><rect x="38.1484%" y="325" width="0.0808%" height="15" fill="rgb(238,110,33)" fg:x="33051" fg:w="70"/><text x="38.3984%" y="335.50"></text></g><g><title>core::cmp::Ord::max (70 samples, 0.08%)</title><rect x="38.1484%" y="309" width="0.0808%" height="15" fill="rgb(233,195,10)" fg:x="33051" fg:w="70"/><text x="38.3984%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (55 samples, 0.06%)</title><rect x="38.2292%" y="325" width="0.0635%" height="15" fill="rgb(254,105,3)" fg:x="33121" fg:w="55"/><text x="38.4792%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (55 samples, 0.06%)</title><rect x="38.2292%" y="309" width="0.0635%" height="15" fill="rgb(221,225,9)" fg:x="33121" fg:w="55"/><text x="38.4792%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5,450 samples, 6.29%)</title><rect x="32.0033%" y="389" width="6.2905%" height="15" fill="rgb(224,227,45)" fg:x="27727" fg:w="5450"/><text x="32.2533%" y="399.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5,441 samples, 6.28%)</title><rect x="32.0137%" y="373" width="6.2802%" height="15" fill="rgb(229,198,43)" fg:x="27736" fg:w="5441"/><text x="32.2637%" y="383.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5,321 samples, 6.14%)</title><rect x="32.1522%" y="357" width="6.1416%" height="15" fill="rgb(206,209,35)" fg:x="27856" fg:w="5321"/><text x="32.4022%" y="367.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5,320 samples, 6.14%)</title><rect x="32.1533%" y="341" width="6.1405%" height="15" fill="rgb(245,195,53)" fg:x="27857" fg:w="5320"/><text x="32.4033%" y="351.50">alloc::r..</text></g><g><title>[libc.so.6] (420 samples, 0.48%)</title><rect x="38.3596%" y="373" width="0.4848%" height="15" fill="rgb(240,92,26)" fg:x="33234" fg:w="420"/><text x="38.6096%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (478 samples, 0.55%)</title><rect x="38.2938%" y="389" width="0.5517%" height="15" fill="rgb(207,40,23)" fg:x="33177" fg:w="478"/><text x="38.5438%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (6,834 samples, 7.89%)</title><rect x="31.3269%" y="469" width="7.8880%" height="15" fill="rgb(223,111,35)" fg:x="27141" fg:w="6834"/><text x="31.5769%" y="479.50">&lt;alloc::str..</text></g><g><title>alloc::string::String::push_str (6,655 samples, 7.68%)</title><rect x="31.5335%" y="453" width="7.6814%" height="15" fill="rgb(229,147,28)" fg:x="27320" fg:w="6655"/><text x="31.7835%" y="463.50">alloc::stri..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6,655 samples, 7.68%)</title><rect x="31.5335%" y="437" width="7.6814%" height="15" fill="rgb(211,29,28)" fg:x="27320" fg:w="6655"/><text x="31.7835%" y="447.50">alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6,655 samples, 7.68%)</title><rect x="31.5335%" y="421" width="7.6814%" height="15" fill="rgb(228,72,33)" fg:x="27320" fg:w="6655"/><text x="31.7835%" y="431.50">&lt;alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6,654 samples, 7.68%)</title><rect x="31.5347%" y="405" width="7.6802%" height="15" fill="rgb(205,214,31)" fg:x="27321" fg:w="6654"/><text x="31.7847%" y="415.50">alloc::vec:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (320 samples, 0.37%)</title><rect x="38.8455%" y="389" width="0.3694%" height="15" fill="rgb(224,111,15)" fg:x="33655" fg:w="320"/><text x="39.0955%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (320 samples, 0.37%)</title><rect x="38.8455%" y="373" width="0.3694%" height="15" fill="rgb(253,21,26)" fg:x="33655" fg:w="320"/><text x="39.0955%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.06%)</title><rect x="39.2149%" y="469" width="0.0612%" height="15" fill="rgb(245,139,43)" fg:x="33975" fg:w="53"/><text x="39.4649%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.06%)</title><rect x="39.2149%" y="453" width="0.0612%" height="15" fill="rgb(252,170,7)" fg:x="33975" fg:w="53"/><text x="39.4649%" y="463.50"></text></g><g><title>&lt;termion::color::Reset as termion::color::Color&gt;::write_fg (40 samples, 0.05%)</title><rect x="39.5577%" y="453" width="0.0462%" height="15" fill="rgb(231,118,14)" fg:x="34272" fg:w="40"/><text x="39.8077%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.03%)</title><rect x="40.0944%" y="373" width="0.0254%" height="15" fill="rgb(238,83,0)" fg:x="34737" fg:w="22"/><text x="40.3444%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (157 samples, 0.18%)</title><rect x="40.2225%" y="293" width="0.1812%" height="15" fill="rgb(221,39,39)" fg:x="34848" fg:w="157"/><text x="40.4725%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (40 samples, 0.05%)</title><rect x="40.4037%" y="293" width="0.0462%" height="15" fill="rgb(222,119,46)" fg:x="35005" fg:w="40"/><text x="40.6537%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (14 samples, 0.02%)</title><rect x="40.4499%" y="293" width="0.0162%" height="15" fill="rgb(222,165,49)" fg:x="35045" fg:w="14"/><text x="40.6999%" y="303.50"></text></g><g><title>__rdl_realloc (173 samples, 0.20%)</title><rect x="40.6150%" y="229" width="0.1997%" height="15" fill="rgb(219,113,52)" fg:x="35188" fg:w="173"/><text x="40.8650%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (118 samples, 0.14%)</title><rect x="40.6785%" y="213" width="0.1362%" height="15" fill="rgb(214,7,15)" fg:x="35243" fg:w="118"/><text x="40.9285%" y="223.50"></text></g><g><title>__rust_realloc (51 samples, 0.06%)</title><rect x="40.8147%" y="229" width="0.0589%" height="15" fill="rgb(235,32,4)" fg:x="35361" fg:w="51"/><text x="41.0647%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,448 samples, 1.67%)</title><rect x="40.6138%" y="277" width="1.6713%" height="15" fill="rgb(238,90,54)" fg:x="35187" fg:w="1448"/><text x="40.8638%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,448 samples, 1.67%)</title><rect x="40.6138%" y="261" width="1.6713%" height="15" fill="rgb(213,208,19)" fg:x="35187" fg:w="1448"/><text x="40.8638%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1,448 samples, 1.67%)</title><rect x="40.6138%" y="245" width="1.6713%" height="15" fill="rgb(233,156,4)" fg:x="35187" fg:w="1448"/><text x="40.8638%" y="255.50"></text></g><g><title>realloc (1,223 samples, 1.41%)</title><rect x="40.8735%" y="229" width="1.4116%" height="15" fill="rgb(207,194,5)" fg:x="35412" fg:w="1223"/><text x="41.1235%" y="239.50"></text></g><g><title>[libc.so.6] (298 samples, 0.34%)</title><rect x="41.9412%" y="213" width="0.3440%" height="15" fill="rgb(206,111,30)" fg:x="36337" fg:w="298"/><text x="42.1912%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,588 samples, 1.83%)</title><rect x="40.4661%" y="293" width="1.8329%" height="15" fill="rgb(243,70,54)" fg:x="35059" fg:w="1588"/><text x="40.7161%" y="303.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.01%)</title><rect x="42.2851%" y="277" width="0.0139%" height="15" fill="rgb(242,28,8)" fg:x="36635" fg:w="12"/><text x="42.5351%" y="287.50"></text></g><g><title>core::cmp::max (22 samples, 0.03%)</title><rect x="42.2990%" y="293" width="0.0254%" height="15" fill="rgb(219,106,18)" fg:x="36647" fg:w="22"/><text x="42.5490%" y="303.50"></text></g><g><title>core::cmp::Ord::max (22 samples, 0.03%)</title><rect x="42.2990%" y="277" width="0.0254%" height="15" fill="rgb(244,222,10)" fg:x="36647" fg:w="22"/><text x="42.5490%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.03%)</title><rect x="42.2990%" y="261" width="0.0254%" height="15" fill="rgb(236,179,52)" fg:x="36647" fg:w="22"/><text x="42.5490%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,918 samples, 2.21%)</title><rect x="40.1533%" y="357" width="2.2138%" height="15" fill="rgb(213,23,39)" fg:x="34788" fg:w="1918"/><text x="40.4033%" y="367.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,918 samples, 2.21%)</title><rect x="40.1533%" y="341" width="2.2138%" height="15" fill="rgb(238,48,10)" fg:x="34788" fg:w="1918"/><text x="40.4033%" y="351.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,878 samples, 2.17%)</title><rect x="40.1995%" y="325" width="2.1676%" height="15" fill="rgb(251,196,23)" fg:x="34828" fg:w="1878"/><text x="40.4495%" y="335.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,858 samples, 2.14%)</title><rect x="40.2225%" y="309" width="2.1446%" height="15" fill="rgb(250,152,24)" fg:x="34848" fg:w="1858"/><text x="40.4725%" y="319.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (37 samples, 0.04%)</title><rect x="42.3244%" y="293" width="0.0427%" height="15" fill="rgb(209,150,17)" fg:x="36669" fg:w="37"/><text x="42.5744%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (37 samples, 0.04%)</title><rect x="42.3244%" y="277" width="0.0427%" height="15" fill="rgb(234,202,34)" fg:x="36669" fg:w="37"/><text x="42.5744%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (348 samples, 0.40%)</title><rect x="42.3671%" y="357" width="0.4017%" height="15" fill="rgb(253,148,53)" fg:x="36706" fg:w="348"/><text x="42.6171%" y="367.50"></text></g><g><title>[libc.so.6] (306 samples, 0.35%)</title><rect x="42.4156%" y="341" width="0.3532%" height="15" fill="rgb(218,129,16)" fg:x="36748" fg:w="306"/><text x="42.6656%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,632 samples, 3.04%)</title><rect x="39.9871%" y="437" width="3.0379%" height="15" fill="rgb(216,85,19)" fg:x="34644" fg:w="2632"/><text x="40.2371%" y="447.50">&lt;al..</text></g><g><title>alloc::string::String::push_str (2,539 samples, 2.93%)</title><rect x="40.0944%" y="421" width="2.9306%" height="15" fill="rgb(235,228,7)" fg:x="34737" fg:w="2539"/><text x="40.3444%" y="431.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,539 samples, 2.93%)</title><rect x="40.0944%" y="405" width="2.9306%" height="15" fill="rgb(245,175,0)" fg:x="34737" fg:w="2539"/><text x="40.3444%" y="415.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,539 samples, 2.93%)</title><rect x="40.0944%" y="389" width="2.9306%" height="15" fill="rgb(208,168,36)" fg:x="34737" fg:w="2539"/><text x="40.3444%" y="399.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,517 samples, 2.91%)</title><rect x="40.1198%" y="373" width="2.9052%" height="15" fill="rgb(246,171,24)" fg:x="34759" fg:w="2517"/><text x="40.3698%" y="383.50">al..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (222 samples, 0.26%)</title><rect x="42.7688%" y="357" width="0.2562%" height="15" fill="rgb(215,142,24)" fg:x="37054" fg:w="222"/><text x="43.0188%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (222 samples, 0.26%)</title><rect x="42.7688%" y="341" width="0.2562%" height="15" fill="rgb(250,187,7)" fg:x="37054" fg:w="222"/><text x="43.0188%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_str (84 samples, 0.10%)</title><rect x="43.0262%" y="437" width="0.0970%" height="15" fill="rgb(228,66,33)" fg:x="37277" fg:w="84"/><text x="43.2762%" y="447.50"></text></g><g><title>__rdl_dealloc (43 samples, 0.05%)</title><rect x="43.1300%" y="341" width="0.0496%" height="15" fill="rgb(234,215,21)" fg:x="37367" fg:w="43"/><text x="43.3800%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (43 samples, 0.05%)</title><rect x="43.1300%" y="325" width="0.0496%" height="15" fill="rgb(222,191,20)" fg:x="37367" fg:w="43"/><text x="43.3800%" y="335.50"></text></g><g><title>__rust_dealloc (69 samples, 0.08%)</title><rect x="43.1797%" y="341" width="0.0796%" height="15" fill="rgb(245,79,54)" fg:x="37410" fg:w="69"/><text x="43.4297%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (780 samples, 0.90%)</title><rect x="43.1231%" y="373" width="0.9003%" height="15" fill="rgb(240,10,37)" fg:x="37361" fg:w="780"/><text x="43.3731%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (780 samples, 0.90%)</title><rect x="43.1231%" y="357" width="0.9003%" height="15" fill="rgb(214,192,32)" fg:x="37361" fg:w="780"/><text x="43.3731%" y="367.50"></text></g><g><title>cfree (662 samples, 0.76%)</title><rect x="43.2593%" y="341" width="0.7641%" height="15" fill="rgb(209,36,54)" fg:x="37479" fg:w="662"/><text x="43.5093%" y="351.50"></text></g><g><title>[libc.so.6] (527 samples, 0.61%)</title><rect x="43.4151%" y="325" width="0.6083%" height="15" fill="rgb(220,10,11)" fg:x="37614" fg:w="527"/><text x="43.6651%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (814 samples, 0.94%)</title><rect x="43.1231%" y="437" width="0.9395%" height="15" fill="rgb(221,106,17)" fg:x="37361" fg:w="814"/><text x="43.3731%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (814 samples, 0.94%)</title><rect x="43.1231%" y="421" width="0.9395%" height="15" fill="rgb(251,142,44)" fg:x="37361" fg:w="814"/><text x="43.3731%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (814 samples, 0.94%)</title><rect x="43.1231%" y="405" width="0.9395%" height="15" fill="rgb(238,13,15)" fg:x="37361" fg:w="814"/><text x="43.3731%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (814 samples, 0.94%)</title><rect x="43.1231%" y="389" width="0.9395%" height="15" fill="rgb(208,107,27)" fg:x="37361" fg:w="814"/><text x="43.3731%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (34 samples, 0.04%)</title><rect x="44.0234%" y="373" width="0.0392%" height="15" fill="rgb(205,136,37)" fg:x="38141" fg:w="34"/><text x="44.2734%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (95 samples, 0.11%)</title><rect x="45.7247%" y="389" width="0.1097%" height="15" fill="rgb(250,205,27)" fg:x="39615" fg:w="95"/><text x="45.9747%" y="399.50"></text></g><g><title>&lt;u8 as numtoa::NumToA&lt;u8&gt;&gt;::numtoa (987 samples, 1.14%)</title><rect x="44.8822%" y="405" width="1.1392%" height="15" fill="rgb(210,80,43)" fg:x="38885" fg:w="987"/><text x="45.1322%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (162 samples, 0.19%)</title><rect x="45.8344%" y="389" width="0.1870%" height="15" fill="rgb(247,160,36)" fg:x="39710" fg:w="162"/><text x="46.0844%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (162 samples, 0.19%)</title><rect x="45.8344%" y="373" width="0.1870%" height="15" fill="rgb(234,13,49)" fg:x="39710" fg:w="162"/><text x="46.0844%" y="383.50"></text></g><g><title>&lt;u8 as numtoa::NumToA&lt;u8&gt;&gt;::numtoa_str (1,275 samples, 1.47%)</title><rect x="44.6005%" y="421" width="1.4716%" height="15" fill="rgb(234,122,0)" fg:x="38641" fg:w="1275"/><text x="44.8505%" y="431.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (44 samples, 0.05%)</title><rect x="46.0214%" y="405" width="0.0508%" height="15" fill="rgb(207,146,38)" fg:x="39872" fg:w="44"/><text x="46.2714%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (44 samples, 0.05%)</title><rect x="46.0214%" y="389" width="0.0508%" height="15" fill="rgb(207,177,25)" fg:x="39872" fg:w="44"/><text x="46.2714%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (44 samples, 0.05%)</title><rect x="46.0214%" y="373" width="0.0508%" height="15" fill="rgb(211,178,42)" fg:x="39872" fg:w="44"/><text x="46.2714%" y="383.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (37 samples, 0.04%)</title><rect x="47.4376%" y="357" width="0.0427%" height="15" fill="rgb(230,69,54)" fg:x="41099" fg:w="37"/><text x="47.6876%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,440 samples, 1.66%)</title><rect x="47.4803%" y="341" width="1.6621%" height="15" fill="rgb(214,135,41)" fg:x="41136" fg:w="1440"/><text x="47.7303%" y="351.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (36 samples, 0.04%)</title><rect x="49.1459%" y="293" width="0.0416%" height="15" fill="rgb(237,67,25)" fg:x="42579" fg:w="36"/><text x="49.3959%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,480 samples, 1.71%)</title><rect x="47.4803%" y="357" width="1.7083%" height="15" fill="rgb(222,189,50)" fg:x="41136" fg:w="1480"/><text x="47.7303%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (37 samples, 0.04%)</title><rect x="49.1459%" y="341" width="0.0427%" height="15" fill="rgb(245,148,34)" fg:x="42579" fg:w="37"/><text x="49.3959%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (37 samples, 0.04%)</title><rect x="49.1459%" y="325" width="0.0427%" height="15" fill="rgb(222,29,6)" fg:x="42579" fg:w="37"/><text x="49.3959%" y="335.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (37 samples, 0.04%)</title><rect x="49.1459%" y="309" width="0.0427%" height="15" fill="rgb(221,189,43)" fg:x="42579" fg:w="37"/><text x="49.3959%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="49.2486%" y="309" width="0.0162%" height="15" fill="rgb(207,36,27)" fg:x="42668" fg:w="14"/><text x="49.4986%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.02%)</title><rect x="49.2486%" y="293" width="0.0162%" height="15" fill="rgb(217,90,24)" fg:x="42668" fg:w="14"/><text x="49.4986%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (12 samples, 0.01%)</title><rect x="49.2509%" y="277" width="0.0139%" height="15" fill="rgb(224,66,35)" fg:x="42670" fg:w="12"/><text x="49.5009%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (266 samples, 0.31%)</title><rect x="49.1897%" y="357" width="0.3070%" height="15" fill="rgb(221,13,50)" fg:x="42617" fg:w="266"/><text x="49.4397%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (266 samples, 0.31%)</title><rect x="49.1897%" y="341" width="0.3070%" height="15" fill="rgb(236,68,49)" fg:x="42617" fg:w="266"/><text x="49.4397%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (262 samples, 0.30%)</title><rect x="49.1943%" y="325" width="0.3024%" height="15" fill="rgb(229,146,28)" fg:x="42621" fg:w="262"/><text x="49.4443%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (201 samples, 0.23%)</title><rect x="49.2648%" y="309" width="0.2320%" height="15" fill="rgb(225,31,38)" fg:x="42682" fg:w="201"/><text x="49.5148%" y="319.50"></text></g><g><title>[libc.so.6] (167 samples, 0.19%)</title><rect x="49.3040%" y="293" width="0.1928%" height="15" fill="rgb(250,208,3)" fg:x="42716" fg:w="167"/><text x="49.5540%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (24 samples, 0.03%)</title><rect x="49.4968%" y="357" width="0.0277%" height="15" fill="rgb(246,54,23)" fg:x="42883" fg:w="24"/><text x="49.7468%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (24 samples, 0.03%)</title><rect x="49.4968%" y="341" width="0.0277%" height="15" fill="rgb(243,76,11)" fg:x="42883" fg:w="24"/><text x="49.7468%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (24 samples, 0.03%)</title><rect x="49.4968%" y="325" width="0.0277%" height="15" fill="rgb(245,21,50)" fg:x="42883" fg:w="24"/><text x="49.7468%" y="335.50"></text></g><g><title>__rdl_alloc (110 samples, 0.13%)</title><rect x="49.6376%" y="245" width="0.1270%" height="15" fill="rgb(228,9,43)" fg:x="43005" fg:w="110"/><text x="49.8876%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (69 samples, 0.08%)</title><rect x="49.6849%" y="229" width="0.0796%" height="15" fill="rgb(208,100,47)" fg:x="43046" fg:w="69"/><text x="49.9349%" y="239.50"></text></g><g><title>__rust_alloc (33 samples, 0.04%)</title><rect x="49.7645%" y="245" width="0.0381%" height="15" fill="rgb(232,26,8)" fg:x="43115" fg:w="33"/><text x="50.0145%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (672 samples, 0.78%)</title><rect x="49.5245%" y="357" width="0.7756%" height="15" fill="rgb(216,166,38)" fg:x="42907" fg:w="672"/><text x="49.7745%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (672 samples, 0.78%)</title><rect x="49.5245%" y="341" width="0.7756%" height="15" fill="rgb(251,202,51)" fg:x="42907" fg:w="672"/><text x="49.7745%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (672 samples, 0.78%)</title><rect x="49.5245%" y="325" width="0.7756%" height="15" fill="rgb(254,216,34)" fg:x="42907" fg:w="672"/><text x="49.7745%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (672 samples, 0.78%)</title><rect x="49.5245%" y="309" width="0.7756%" height="15" fill="rgb(251,32,27)" fg:x="42907" fg:w="672"/><text x="49.7745%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (667 samples, 0.77%)</title><rect x="49.5302%" y="293" width="0.7699%" height="15" fill="rgb(208,127,28)" fg:x="42912" fg:w="667"/><text x="49.7802%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (667 samples, 0.77%)</title><rect x="49.5302%" y="277" width="0.7699%" height="15" fill="rgb(224,137,22)" fg:x="42912" fg:w="667"/><text x="49.7802%" y="287.50"></text></g><g><title>alloc::alloc::alloc (655 samples, 0.76%)</title><rect x="49.5441%" y="261" width="0.7560%" height="15" fill="rgb(254,70,32)" fg:x="42924" fg:w="655"/><text x="49.7941%" y="271.50"></text></g><g><title>malloc (431 samples, 0.50%)</title><rect x="49.8026%" y="245" width="0.4975%" height="15" fill="rgb(229,75,37)" fg:x="43148" fg:w="431"/><text x="50.0526%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.12%)</title><rect x="50.4421%" y="293" width="0.1189%" height="15" fill="rgb(252,64,23)" fg:x="43702" fg:w="103"/><text x="50.6921%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (275 samples, 0.32%)</title><rect x="50.3001%" y="357" width="0.3174%" height="15" fill="rgb(232,162,48)" fg:x="43579" fg:w="275"/><text x="50.5501%" y="367.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (275 samples, 0.32%)</title><rect x="50.3001%" y="341" width="0.3174%" height="15" fill="rgb(246,160,12)" fg:x="43579" fg:w="275"/><text x="50.5501%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (275 samples, 0.32%)</title><rect x="50.3001%" y="325" width="0.3174%" height="15" fill="rgb(247,166,0)" fg:x="43579" fg:w="275"/><text x="50.5501%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (275 samples, 0.32%)</title><rect x="50.3001%" y="309" width="0.3174%" height="15" fill="rgb(249,219,21)" fg:x="43579" fg:w="275"/><text x="50.5501%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (49 samples, 0.06%)</title><rect x="50.5610%" y="293" width="0.0566%" height="15" fill="rgb(205,209,3)" fg:x="43805" fg:w="49"/><text x="50.8110%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (49 samples, 0.06%)</title><rect x="50.5610%" y="277" width="0.0566%" height="15" fill="rgb(243,44,1)" fg:x="43805" fg:w="49"/><text x="50.8110%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (49 samples, 0.06%)</title><rect x="50.5610%" y="261" width="0.0566%" height="15" fill="rgb(206,159,16)" fg:x="43805" fg:w="49"/><text x="50.8110%" y="271.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (49 samples, 0.06%)</title><rect x="50.5610%" y="245" width="0.0566%" height="15" fill="rgb(244,77,30)" fg:x="43805" fg:w="49"/><text x="50.8110%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1,160 samples, 1.34%)</title><rect x="50.6175%" y="357" width="1.3389%" height="15" fill="rgb(218,69,12)" fg:x="43854" fg:w="1160"/><text x="50.8675%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,160 samples, 1.34%)</title><rect x="50.6175%" y="341" width="1.3389%" height="15" fill="rgb(212,87,7)" fg:x="43854" fg:w="1160"/><text x="50.8675%" y="351.50"></text></g><g><title>[libc.so.6] (1,160 samples, 1.34%)</title><rect x="50.6175%" y="325" width="1.3389%" height="15" fill="rgb(245,114,25)" fg:x="43854" fg:w="1160"/><text x="50.8675%" y="335.50"></text></g><g><title>alloc::str::join_generic_copy (5,039 samples, 5.82%)</title><rect x="46.3342%" y="373" width="5.8162%" height="15" fill="rgb(210,61,42)" fg:x="40143" fg:w="5039"/><text x="46.5842%" y="383.50">alloc::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (168 samples, 0.19%)</title><rect x="51.9564%" y="357" width="0.1939%" height="15" fill="rgb(211,52,33)" fg:x="45014" fg:w="168"/><text x="52.2064%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (82 samples, 0.09%)</title><rect x="52.0557%" y="341" width="0.0946%" height="15" fill="rgb(234,58,33)" fg:x="45100" fg:w="82"/><text x="52.3057%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (82 samples, 0.09%)</title><rect x="52.0557%" y="325" width="0.0946%" height="15" fill="rgb(220,115,36)" fg:x="45100" fg:w="82"/><text x="52.3057%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (82 samples, 0.09%)</title><rect x="52.0557%" y="309" width="0.0946%" height="15" fill="rgb(243,153,54)" fg:x="45100" fg:w="82"/><text x="52.3057%" y="319.50"></text></g><g><title>&lt;termion::color::Fg&lt;C&gt; as core::fmt::Display&gt;::fmt (11,449 samples, 13.21%)</title><rect x="39.2853%" y="469" width="13.2148%" height="15" fill="rgb(251,47,18)" fg:x="34036" fg:w="11449"/><text x="39.5353%" y="479.50">&lt;termion::color::Fg&lt;..</text></g><g><title>&lt;termion::color::Rgb as termion::color::Color&gt;::write_fg (11,173 samples, 12.90%)</title><rect x="39.6039%" y="453" width="12.8962%" height="15" fill="rgb(242,102,42)" fg:x="34312" fg:w="11173"/><text x="39.8539%" y="463.50">&lt;termion::color::Rg..</text></g><g><title>termion::color::Rgb::fg_string (7,310 samples, 8.44%)</title><rect x="44.0627%" y="437" width="8.4374%" height="15" fill="rgb(234,31,38)" fg:x="38175" fg:w="7310"/><text x="44.3127%" y="447.50">termion::col..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (5,569 samples, 6.43%)</title><rect x="46.0722%" y="421" width="6.4279%" height="15" fill="rgb(221,117,51)" fg:x="39916" fg:w="5569"/><text x="46.3222%" y="431.50">alloc::s..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (5,562 samples, 6.42%)</title><rect x="46.0802%" y="405" width="6.4198%" height="15" fill="rgb(212,20,18)" fg:x="39923" fg:w="5562"/><text x="46.3302%" y="415.50">alloc::s..</text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5,342 samples, 6.17%)</title><rect x="46.3342%" y="389" width="6.1659%" height="15" fill="rgb(245,133,36)" fg:x="40143" fg:w="5342"/><text x="46.5842%" y="399.50">alloc::s..</text></g><g><title>alloc::string::String::from_utf8_unchecked (303 samples, 0.35%)</title><rect x="52.1503%" y="373" width="0.3497%" height="15" fill="rgb(212,6,19)" fg:x="45182" fg:w="303"/><text x="52.4003%" y="383.50"></text></g><g><title>core::fmt::Formatter::new (37 samples, 0.04%)</title><rect x="52.5001%" y="469" width="0.0427%" height="15" fill="rgb(218,1,36)" fg:x="45485" fg:w="37"/><text x="52.7501%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad (167 samples, 0.19%)</title><rect x="52.5428%" y="469" width="0.1928%" height="15" fill="rgb(246,84,54)" fg:x="45522" fg:w="167"/><text x="52.7928%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (27 samples, 0.03%)</title><rect x="52.7355%" y="469" width="0.0312%" height="15" fill="rgb(242,110,6)" fg:x="45689" fg:w="27"/><text x="52.9855%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (72 samples, 0.08%)</title><rect x="52.7667%" y="469" width="0.0831%" height="15" fill="rgb(214,47,5)" fg:x="45716" fg:w="72"/><text x="53.0167%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (72 samples, 0.08%)</title><rect x="52.7667%" y="453" width="0.0831%" height="15" fill="rgb(218,159,25)" fg:x="45716" fg:w="72"/><text x="53.0167%" y="463.50"></text></g><g><title>&lt;chessire_utils::piece::Piece as core::fmt::Display&gt;::fmt (21,123 samples, 24.38%)</title><rect x="28.6306%" y="517" width="24.3808%" height="15" fill="rgb(215,211,28)" fg:x="24805" fg:w="21123"/><text x="28.8806%" y="527.50">&lt;chessire_utils::piece::Piece as core::..</text></g><g><title>core::fmt::Formatter::write_fmt (20,633 samples, 23.82%)</title><rect x="29.1962%" y="501" width="23.8152%" height="15" fill="rgb(238,59,32)" fg:x="25295" fg:w="20633"/><text x="29.4462%" y="511.50">core::fmt::Formatter::write_fmt</text></g><g><title>core::fmt::write (19,593 samples, 22.61%)</title><rect x="30.3966%" y="485" width="22.6148%" height="15" fill="rgb(226,82,3)" fg:x="26335" fg:w="19593"/><text x="30.6466%" y="495.50">core::fmt::write</text></g><g><title>core::str::&lt;impl str&gt;::is_empty (140 samples, 0.16%)</title><rect x="52.8498%" y="469" width="0.1616%" height="15" fill="rgb(240,164,32)" fg:x="45788" fg:w="140"/><text x="53.0998%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.12%)</title><rect x="53.0114%" y="517" width="0.1166%" height="15" fill="rgb(232,46,7)" fg:x="45928" fg:w="101"/><text x="53.2614%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.12%)</title><rect x="53.0114%" y="501" width="0.1166%" height="15" fill="rgb(229,129,53)" fg:x="45928" fg:w="101"/><text x="53.2614%" y="511.50"></text></g><g><title>core::fmt::Formatter::new (44 samples, 0.05%)</title><rect x="53.1280%" y="517" width="0.0508%" height="15" fill="rgb(234,188,29)" fg:x="46029" fg:w="44"/><text x="53.3780%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (1,205 samples, 1.39%)</title><rect x="53.1787%" y="517" width="1.3908%" height="15" fill="rgb(246,141,4)" fg:x="46073" fg:w="1205"/><text x="53.4287%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (101 samples, 0.12%)</title><rect x="54.5696%" y="517" width="0.1166%" height="15" fill="rgb(229,23,39)" fg:x="47278" fg:w="101"/><text x="54.8196%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (101 samples, 0.12%)</title><rect x="54.5696%" y="501" width="0.1166%" height="15" fill="rgb(206,12,3)" fg:x="47278" fg:w="101"/><text x="54.8196%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (42,968 samples, 49.59%)</title><rect x="5.2806%" y="549" width="49.5949%" height="15" fill="rgb(252,226,20)" fg:x="4575" fg:w="42968"/><text x="5.5306%" y="559.50">core::fmt::Formatter::write_fmt</text></g><g><title>core::fmt::write (41,705 samples, 48.14%)</title><rect x="6.7384%" y="533" width="48.1371%" height="15" fill="rgb(216,123,35)" fg:x="5838" fg:w="41705"/><text x="6.9884%" y="543.50">core::fmt::write</text></g><g><title>core::str::&lt;impl str&gt;::is_empty (164 samples, 0.19%)</title><rect x="54.6862%" y="517" width="0.1893%" height="15" fill="rgb(212,68,40)" fg:x="47379" fg:w="164"/><text x="54.9362%" y="527.50"></text></g><g><title>&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt (43,402 samples, 50.10%)</title><rect x="4.7820%" y="565" width="50.0958%" height="15" fill="rgb(254,125,32)" fg:x="4143" fg:w="43402"/><text x="5.0320%" y="575.50">&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt</text></g><g><title>alloc::string::String::new (20 samples, 0.02%)</title><rect x="54.8778%" y="565" width="0.0231%" height="15" fill="rgb(253,97,22)" fg:x="47545" fg:w="20"/><text x="55.1278%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="54.8778%" y="549" width="0.0231%" height="15" fill="rgb(241,101,14)" fg:x="47545" fg:w="20"/><text x="55.1278%" y="559.50"></text></g><g><title>core::fmt::Formatter::new (168 samples, 0.19%)</title><rect x="54.9009%" y="565" width="0.1939%" height="15" fill="rgb(238,103,29)" fg:x="47565" fg:w="168"/><text x="55.1509%" y="575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (43,752 samples, 50.50%)</title><rect x="4.6735%" y="581" width="50.4998%" height="15" fill="rgb(233,195,47)" fg:x="4049" fg:w="43752"/><text x="4.9235%" y="591.50">&lt;T as alloc::string::ToString&gt;::to_string</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (68 samples, 0.08%)</title><rect x="55.0948%" y="565" width="0.0785%" height="15" fill="rgb(246,218,30)" fg:x="47733" fg:w="68"/><text x="55.3448%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (45 samples, 0.05%)</title><rect x="55.1732%" y="565" width="0.0519%" height="15" fill="rgb(219,145,47)" fg:x="47801" fg:w="45"/><text x="55.4232%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (58 samples, 0.07%)</title><rect x="55.1732%" y="581" width="0.0669%" height="15" fill="rgb(243,12,26)" fg:x="47801" fg:w="58"/><text x="55.4232%" y="591.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (13 samples, 0.02%)</title><rect x="55.2252%" y="565" width="0.0150%" height="15" fill="rgb(214,87,16)" fg:x="47846" fg:w="13"/><text x="55.4752%" y="575.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.17%)</title><rect x="55.2437%" y="581" width="0.1651%" height="15" fill="rgb(208,99,42)" fg:x="47862" fg:w="143"/><text x="55.4937%" y="591.50"></text></g><g><title>core::ptr::read (101 samples, 0.12%)</title><rect x="55.2921%" y="565" width="0.1166%" height="15" fill="rgb(253,99,2)" fg:x="47904" fg:w="101"/><text x="55.5421%" y="575.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (9 samples, 0.01%)</title><rect x="55.4122%" y="565" width="0.0104%" height="15" fill="rgb(220,168,23)" fg:x="48008" fg:w="9"/><text x="55.6622%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (12 samples, 0.01%)</title><rect x="55.5172%" y="485" width="0.0139%" height="15" fill="rgb(242,38,24)" fg:x="48099" fg:w="12"/><text x="55.7672%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (111 samples, 0.13%)</title><rect x="55.5449%" y="437" width="0.1281%" height="15" fill="rgb(225,182,9)" fg:x="48123" fg:w="111"/><text x="55.7949%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (111 samples, 0.13%)</title><rect x="55.5449%" y="421" width="0.1281%" height="15" fill="rgb(243,178,37)" fg:x="48123" fg:w="111"/><text x="55.7949%" y="431.50"></text></g><g><title>alloc::alloc::realloc (111 samples, 0.13%)</title><rect x="55.5449%" y="405" width="0.1281%" height="15" fill="rgb(232,139,19)" fg:x="48123" fg:w="111"/><text x="55.7949%" y="415.50"></text></g><g><title>realloc (107 samples, 0.12%)</title><rect x="55.5495%" y="389" width="0.1235%" height="15" fill="rgb(225,201,24)" fg:x="48127" fg:w="107"/><text x="55.7995%" y="399.50"></text></g><g><title>[libc.so.6] (98 samples, 0.11%)</title><rect x="55.5599%" y="373" width="0.1131%" height="15" fill="rgb(221,47,46)" fg:x="48136" fg:w="98"/><text x="55.8099%" y="383.50"></text></g><g><title>[libc.so.6] (90 samples, 0.10%)</title><rect x="55.5691%" y="357" width="0.1039%" height="15" fill="rgb(249,23,13)" fg:x="48144" fg:w="90"/><text x="55.8191%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 samples, 0.15%)</title><rect x="55.5403%" y="453" width="0.1512%" height="15" fill="rgb(219,9,5)" fg:x="48119" fg:w="131"/><text x="55.7903%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (15 samples, 0.02%)</title><rect x="55.6742%" y="437" width="0.0173%" height="15" fill="rgb(254,171,16)" fg:x="48235" fg:w="15"/><text x="55.9242%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (157 samples, 0.18%)</title><rect x="55.5137%" y="517" width="0.1812%" height="15" fill="rgb(230,171,20)" fg:x="48096" fg:w="157"/><text x="55.7637%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (157 samples, 0.18%)</title><rect x="55.5137%" y="501" width="0.1812%" height="15" fill="rgb(210,71,41)" fg:x="48096" fg:w="157"/><text x="55.7637%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (142 samples, 0.16%)</title><rect x="55.5311%" y="485" width="0.1639%" height="15" fill="rgb(206,173,20)" fg:x="48111" fg:w="142"/><text x="55.7811%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (140 samples, 0.16%)</title><rect x="55.5334%" y="469" width="0.1616%" height="15" fill="rgb(233,88,34)" fg:x="48113" fg:w="140"/><text x="55.7834%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (246 samples, 0.28%)</title><rect x="55.6950%" y="517" width="0.2839%" height="15" fill="rgb(223,209,46)" fg:x="48253" fg:w="246"/><text x="55.9450%" y="527.50"></text></g><g><title>[libc.so.6] (237 samples, 0.27%)</title><rect x="55.7053%" y="501" width="0.2736%" height="15" fill="rgb(250,43,18)" fg:x="48262" fg:w="237"/><text x="55.9553%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (419 samples, 0.48%)</title><rect x="55.5034%" y="533" width="0.4836%" height="15" fill="rgb(208,13,10)" fg:x="48087" fg:w="419"/><text x="55.7534%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (438 samples, 0.51%)</title><rect x="55.4999%" y="549" width="0.5056%" height="15" fill="rgb(212,200,36)" fg:x="48084" fg:w="438"/><text x="55.7499%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (16 samples, 0.02%)</title><rect x="55.9870%" y="533" width="0.0185%" height="15" fill="rgb(225,90,30)" fg:x="48506" fg:w="16"/><text x="56.2370%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.02%)</title><rect x="55.9870%" y="517" width="0.0185%" height="15" fill="rgb(236,182,39)" fg:x="48506" fg:w="16"/><text x="56.2370%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (118 samples, 0.14%)</title><rect x="56.0054%" y="549" width="0.1362%" height="15" fill="rgb(212,144,35)" fg:x="48522" fg:w="118"/><text x="56.2554%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (118 samples, 0.14%)</title><rect x="56.0054%" y="533" width="0.1362%" height="15" fill="rgb(228,63,44)" fg:x="48522" fg:w="118"/><text x="56.2554%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (117 samples, 0.14%)</title><rect x="56.0066%" y="517" width="0.1350%" height="15" fill="rgb(228,109,6)" fg:x="48523" fg:w="117"/><text x="56.2566%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (117 samples, 0.14%)</title><rect x="56.0066%" y="501" width="0.1350%" height="15" fill="rgb(238,117,24)" fg:x="48523" fg:w="117"/><text x="56.2566%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (117 samples, 0.14%)</title><rect x="56.0066%" y="485" width="0.1350%" height="15" fill="rgb(242,26,26)" fg:x="48523" fg:w="117"/><text x="56.2566%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (117 samples, 0.14%)</title><rect x="56.0066%" y="469" width="0.1350%" height="15" fill="rgb(221,92,48)" fg:x="48523" fg:w="117"/><text x="56.2566%" y="479.50"></text></g><g><title>alloc::alloc::alloc (116 samples, 0.13%)</title><rect x="56.0078%" y="453" width="0.1339%" height="15" fill="rgb(209,209,32)" fg:x="48524" fg:w="116"/><text x="56.2578%" y="463.50"></text></g><g><title>malloc (110 samples, 0.13%)</title><rect x="56.0147%" y="437" width="0.1270%" height="15" fill="rgb(221,70,22)" fg:x="48530" fg:w="110"/><text x="56.2647%" y="447.50"></text></g><g><title>[libc.so.6] (104 samples, 0.12%)</title><rect x="56.0216%" y="421" width="0.1200%" height="15" fill="rgb(248,145,5)" fg:x="48536" fg:w="104"/><text x="56.2716%" y="431.50"></text></g><g><title>[libc.so.6] (76 samples, 0.09%)</title><rect x="56.0539%" y="405" width="0.0877%" height="15" fill="rgb(226,116,26)" fg:x="48564" fg:w="76"/><text x="56.3039%" y="415.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (11 samples, 0.01%)</title><rect x="56.1786%" y="533" width="0.0127%" height="15" fill="rgb(244,5,17)" fg:x="48672" fg:w="11"/><text x="56.4286%" y="543.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (101 samples, 0.12%)</title><rect x="56.2501%" y="357" width="0.1166%" height="15" fill="rgb(252,159,33)" fg:x="48734" fg:w="101"/><text x="56.5001%" y="367.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (103 samples, 0.12%)</title><rect x="56.2501%" y="389" width="0.1189%" height="15" fill="rgb(206,71,0)" fg:x="48734" fg:w="103"/><text x="56.5001%" y="399.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (103 samples, 0.12%)</title><rect x="56.2501%" y="373" width="0.1189%" height="15" fill="rgb(233,118,54)" fg:x="48734" fg:w="103"/><text x="56.5001%" y="383.50"></text></g><g><title>chessire_utils::board::Coord::from_tile (33 samples, 0.04%)</title><rect x="56.5237%" y="341" width="0.0381%" height="15" fill="rgb(234,83,48)" fg:x="48971" fg:w="33"/><text x="56.7737%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::capture (221 samples, 0.26%)</title><rect x="56.5618%" y="341" width="0.2551%" height="15" fill="rgb(228,3,54)" fg:x="49004" fg:w="221"/><text x="56.8118%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::castling (243 samples, 0.28%)</title><rect x="56.8169%" y="341" width="0.2805%" height="15" fill="rgb(226,155,13)" fg:x="49225" fg:w="243"/><text x="57.0669%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::double_push (225 samples, 0.26%)</title><rect x="57.0973%" y="341" width="0.2597%" height="15" fill="rgb(241,28,37)" fg:x="49468" fg:w="225"/><text x="57.3473%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (203 samples, 0.23%)</title><rect x="57.3570%" y="341" width="0.2343%" height="15" fill="rgb(233,93,10)" fg:x="49693" fg:w="203"/><text x="57.6070%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,200 samples, 1.39%)</title><rect x="56.2455%" y="421" width="1.3851%" height="15" fill="rgb(225,113,19)" fg:x="48730" fg:w="1200"/><text x="56.4955%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,196 samples, 1.38%)</title><rect x="56.2501%" y="405" width="1.3805%" height="15" fill="rgb(241,2,18)" fg:x="48734" fg:w="1196"/><text x="56.5001%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,093 samples, 1.26%)</title><rect x="56.3690%" y="389" width="1.2616%" height="15" fill="rgb(228,207,21)" fg:x="48837" fg:w="1093"/><text x="56.6190%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,007 samples, 1.16%)</title><rect x="56.4683%" y="373" width="1.1623%" height="15" fill="rgb(213,211,35)" fg:x="48923" fg:w="1007"/><text x="56.7183%" y="383.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (999 samples, 1.15%)</title><rect x="56.4775%" y="357" width="1.1531%" height="15" fill="rgb(209,83,10)" fg:x="48931" fg:w="999"/><text x="56.7275%" y="367.50"></text></g><g><title>chessire_utils::moves::Move::new (34 samples, 0.04%)</title><rect x="57.5914%" y="341" width="0.0392%" height="15" fill="rgb(209,164,1)" fg:x="49896" fg:w="34"/><text x="57.8414%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.01%)</title><rect x="57.6410%" y="357" width="0.0115%" height="15" fill="rgb(213,184,43)" fg:x="49939" fg:w="10"/><text x="57.8910%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (137 samples, 0.16%)</title><rect x="57.6664%" y="341" width="0.1581%" height="15" fill="rgb(231,61,34)" fg:x="49961" fg:w="137"/><text x="57.9164%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (137 samples, 0.16%)</title><rect x="57.6664%" y="325" width="0.1581%" height="15" fill="rgb(235,75,3)" fg:x="49961" fg:w="137"/><text x="57.9164%" y="335.50"></text></g><g><title>alloc::alloc::realloc (137 samples, 0.16%)</title><rect x="57.6664%" y="309" width="0.1581%" height="15" fill="rgb(220,106,47)" fg:x="49961" fg:w="137"/><text x="57.9164%" y="319.50"></text></g><g><title>realloc (128 samples, 0.15%)</title><rect x="57.6768%" y="293" width="0.1477%" height="15" fill="rgb(210,196,33)" fg:x="49970" fg:w="128"/><text x="57.9268%" y="303.50"></text></g><g><title>[libc.so.6] (112 samples, 0.13%)</title><rect x="57.6952%" y="277" width="0.1293%" height="15" fill="rgb(229,154,42)" fg:x="49986" fg:w="112"/><text x="57.9452%" y="287.50"></text></g><g><title>[libc.so.6] (102 samples, 0.12%)</title><rect x="57.7068%" y="261" width="0.1177%" height="15" fill="rgb(228,114,26)" fg:x="49996" fg:w="102"/><text x="57.9568%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 samples, 0.20%)</title><rect x="57.6548%" y="357" width="0.1974%" height="15" fill="rgb(208,144,1)" fg:x="49951" fg:w="171"/><text x="57.9048%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (24 samples, 0.03%)</title><rect x="57.8245%" y="341" width="0.0277%" height="15" fill="rgb(239,112,37)" fg:x="50098" fg:w="24"/><text x="58.0745%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (190 samples, 0.22%)</title><rect x="57.6387%" y="421" width="0.2193%" height="15" fill="rgb(210,96,50)" fg:x="49937" fg:w="190"/><text x="57.8887%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (190 samples, 0.22%)</title><rect x="57.6387%" y="405" width="0.2193%" height="15" fill="rgb(222,178,2)" fg:x="49937" fg:w="190"/><text x="57.8887%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (189 samples, 0.22%)</title><rect x="57.6398%" y="389" width="0.2181%" height="15" fill="rgb(226,74,18)" fg:x="49938" fg:w="189"/><text x="57.8898%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (188 samples, 0.22%)</title><rect x="57.6410%" y="373" width="0.2170%" height="15" fill="rgb(225,67,54)" fg:x="49939" fg:w="188"/><text x="57.8910%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,458 samples, 1.68%)</title><rect x="56.2328%" y="453" width="1.6829%" height="15" fill="rgb(251,92,32)" fg:x="48719" fg:w="1458"/><text x="56.4828%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,457 samples, 1.68%)</title><rect x="56.2340%" y="437" width="1.6817%" height="15" fill="rgb(228,149,22)" fg:x="48720" fg:w="1457"/><text x="56.4840%" y="447.50"></text></g><g><title>core::ptr::write (50 samples, 0.06%)</title><rect x="57.8580%" y="421" width="0.0577%" height="15" fill="rgb(243,54,13)" fg:x="50127" fg:w="50"/><text x="58.1080%" y="431.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (93 samples, 0.11%)</title><rect x="57.9365%" y="389" width="0.1073%" height="15" fill="rgb(243,180,28)" fg:x="50195" fg:w="93"/><text x="58.1865%" y="399.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.11%)</title><rect x="57.9330%" y="421" width="0.1143%" height="15" fill="rgb(208,167,24)" fg:x="50192" fg:w="99"/><text x="58.1830%" y="431.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (96 samples, 0.11%)</title><rect x="57.9365%" y="405" width="0.1108%" height="15" fill="rgb(245,73,45)" fg:x="50195" fg:w="96"/><text x="58.1865%" y="415.50"></text></g><g><title>chessire_utils::moves::Move::capture (48 samples, 0.06%)</title><rect x="58.0946%" y="373" width="0.0554%" height="15" fill="rgb(237,203,48)" fg:x="50332" fg:w="48"/><text x="58.3446%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::castling (40 samples, 0.05%)</title><rect x="58.1500%" y="373" width="0.0462%" height="15" fill="rgb(211,197,16)" fg:x="50380" fg:w="40"/><text x="58.4000%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::double_push (44 samples, 0.05%)</title><rect x="58.1962%" y="373" width="0.0508%" height="15" fill="rgb(243,99,51)" fg:x="50420" fg:w="44"/><text x="58.4462%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (51 samples, 0.06%)</title><rect x="58.2470%" y="373" width="0.0589%" height="15" fill="rgb(215,123,29)" fg:x="50464" fg:w="51"/><text x="58.4970%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (346 samples, 0.40%)</title><rect x="57.9180%" y="453" width="0.3994%" height="15" fill="rgb(239,186,37)" fg:x="50179" fg:w="346"/><text x="58.1680%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (333 samples, 0.38%)</title><rect x="57.9330%" y="437" width="0.3844%" height="15" fill="rgb(252,136,39)" fg:x="50192" fg:w="333"/><text x="58.1830%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (234 samples, 0.27%)</title><rect x="58.0473%" y="421" width="0.2701%" height="15" fill="rgb(223,213,32)" fg:x="50291" fg:w="234"/><text x="58.2973%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (217 samples, 0.25%)</title><rect x="58.0669%" y="405" width="0.2505%" height="15" fill="rgb(233,115,5)" fg:x="50308" fg:w="217"/><text x="58.3169%" y="415.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (214 samples, 0.25%)</title><rect x="58.0704%" y="389" width="0.2470%" height="15" fill="rgb(207,226,44)" fg:x="50311" fg:w="214"/><text x="58.3204%" y="399.50"></text></g><g><title>chessire_utils::moves::Move::new (10 samples, 0.01%)</title><rect x="58.3058%" y="373" width="0.0115%" height="15" fill="rgb(208,126,0)" fg:x="50515" fg:w="10"/><text x="58.5558%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.02%)</title><rect x="58.3174%" y="453" width="0.0208%" height="15" fill="rgb(244,66,21)" fg:x="50525" fg:w="18"/><text x="58.5674%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="58.3174%" y="437" width="0.0208%" height="15" fill="rgb(222,97,12)" fg:x="50525" fg:w="18"/><text x="58.5674%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="58.3174%" y="421" width="0.0208%" height="15" fill="rgb(219,213,19)" fg:x="50525" fg:w="18"/><text x="58.5674%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.02%)</title><rect x="58.3174%" y="405" width="0.0208%" height="15" fill="rgb(252,169,30)" fg:x="50525" fg:w="18"/><text x="58.5674%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="58.3174%" y="389" width="0.0208%" height="15" fill="rgb(206,32,51)" fg:x="50525" fg:w="18"/><text x="58.5674%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="58.3174%" y="373" width="0.0208%" height="15" fill="rgb(250,172,42)" fg:x="50525" fg:w="18"/><text x="58.5674%" y="383.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="58.3197%" y="357" width="0.0185%" height="15" fill="rgb(209,34,43)" fg:x="50527" fg:w="16"/><text x="58.5697%" y="367.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="58.3254%" y="341" width="0.0127%" height="15" fill="rgb(223,11,35)" fg:x="50532" fg:w="11"/><text x="58.5754%" y="351.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (1,862 samples, 2.15%)</title><rect x="56.1913%" y="533" width="2.1492%" height="15" fill="rgb(251,219,26)" fg:x="48683" fg:w="1862"/><text x="56.4413%" y="543.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,862 samples, 2.15%)</title><rect x="56.1913%" y="517" width="2.1492%" height="15" fill="rgb(231,119,3)" fg:x="48683" fg:w="1862"/><text x="56.4413%" y="527.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,862 samples, 2.15%)</title><rect x="56.1913%" y="501" width="2.1492%" height="15" fill="rgb(216,97,11)" fg:x="48683" fg:w="1862"/><text x="56.4413%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,860 samples, 2.15%)</title><rect x="56.1936%" y="485" width="2.1469%" height="15" fill="rgb(223,59,9)" fg:x="48685" fg:w="1860"/><text x="56.4436%" y="495.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,851 samples, 2.14%)</title><rect x="56.2040%" y="469" width="2.1365%" height="15" fill="rgb(233,93,31)" fg:x="48694" fg:w="1851"/><text x="56.4540%" y="479.50">&lt;..</text></g><g><title>chessire::engine::bitboard::moves::get_bishop_moves (1,907 samples, 2.20%)</title><rect x="56.1416%" y="549" width="2.2011%" height="15" fill="rgb(239,81,33)" fg:x="48640" fg:w="1907"/><text x="56.3916%" y="559.50">c..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.02%)</title><rect x="58.4997%" y="469" width="0.0242%" height="15" fill="rgb(213,120,34)" fg:x="50683" fg:w="21"/><text x="58.7497%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.02%)</title><rect x="58.4997%" y="453" width="0.0242%" height="15" fill="rgb(243,49,53)" fg:x="50683" fg:w="21"/><text x="58.7497%" y="463.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.02%)</title><rect x="58.4997%" y="437" width="0.0242%" height="15" fill="rgb(247,216,33)" fg:x="50683" fg:w="21"/><text x="58.7497%" y="447.50"></text></g><g><title>realloc (21 samples, 0.02%)</title><rect x="58.4997%" y="421" width="0.0242%" height="15" fill="rgb(226,26,14)" fg:x="50683" fg:w="21"/><text x="58.7497%" y="431.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="58.5009%" y="405" width="0.0231%" height="15" fill="rgb(215,49,53)" fg:x="50684" fg:w="20"/><text x="58.7509%" y="415.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="58.5078%" y="389" width="0.0162%" height="15" fill="rgb(245,162,40)" fg:x="50690" fg:w="14"/><text x="58.7578%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (31 samples, 0.04%)</title><rect x="58.4928%" y="517" width="0.0358%" height="15" fill="rgb(229,68,17)" fg:x="50677" fg:w="31"/><text x="58.7428%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.03%)</title><rect x="58.4940%" y="501" width="0.0346%" height="15" fill="rgb(213,182,10)" fg:x="50678" fg:w="30"/><text x="58.7440%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.03%)</title><rect x="58.4951%" y="485" width="0.0335%" height="15" fill="rgb(245,125,30)" fg:x="50679" fg:w="29"/><text x="58.7451%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (65 samples, 0.08%)</title><rect x="58.4663%" y="533" width="0.0750%" height="15" fill="rgb(232,202,2)" fg:x="50654" fg:w="65"/><text x="58.7163%" y="543.50"></text></g><g><title>core::ptr::write (11 samples, 0.01%)</title><rect x="58.5286%" y="517" width="0.0127%" height="15" fill="rgb(237,140,51)" fg:x="50708" fg:w="11"/><text x="58.7786%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (23 samples, 0.03%)</title><rect x="58.5875%" y="517" width="0.0265%" height="15" fill="rgb(236,157,25)" fg:x="50759" fg:w="23"/><text x="58.8375%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (22 samples, 0.03%)</title><rect x="58.5886%" y="501" width="0.0254%" height="15" fill="rgb(219,209,0)" fg:x="50760" fg:w="22"/><text x="58.8386%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (22 samples, 0.03%)</title><rect x="58.5886%" y="485" width="0.0254%" height="15" fill="rgb(240,116,54)" fg:x="50760" fg:w="22"/><text x="58.8386%" y="495.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (16 samples, 0.02%)</title><rect x="58.6140%" y="517" width="0.0185%" height="15" fill="rgb(216,10,36)" fg:x="50782" fg:w="16"/><text x="58.8640%" y="527.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_queen_attack (22 samples, 0.03%)</title><rect x="58.6325%" y="517" width="0.0254%" height="15" fill="rgb(222,72,44)" fg:x="50798" fg:w="22"/><text x="58.8825%" y="527.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::is_square_attacked_by (112 samples, 0.13%)</title><rect x="58.5413%" y="533" width="0.1293%" height="15" fill="rgb(232,159,9)" fg:x="50719" fg:w="112"/><text x="58.7913%" y="543.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_rook_attack (11 samples, 0.01%)</title><rect x="58.6579%" y="517" width="0.0127%" height="15" fill="rgb(210,39,32)" fg:x="50820" fg:w="11"/><text x="58.9079%" y="527.50"></text></g><g><title>chessire_utils::moves::Move::capture (27 samples, 0.03%)</title><rect x="58.7063%" y="341" width="0.0312%" height="15" fill="rgb(216,194,45)" fg:x="50862" fg:w="27"/><text x="58.9563%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::castling (26 samples, 0.03%)</title><rect x="58.7375%" y="341" width="0.0300%" height="15" fill="rgb(218,18,35)" fg:x="50889" fg:w="26"/><text x="58.9875%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::double_push (29 samples, 0.03%)</title><rect x="58.7675%" y="341" width="0.0335%" height="15" fill="rgb(207,83,51)" fg:x="50915" fg:w="29"/><text x="59.0175%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (29 samples, 0.03%)</title><rect x="58.8010%" y="341" width="0.0335%" height="15" fill="rgb(225,63,43)" fg:x="50944" fg:w="29"/><text x="59.0510%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.16%)</title><rect x="58.6798%" y="421" width="0.1558%" height="15" fill="rgb(207,57,36)" fg:x="50839" fg:w="135"/><text x="58.9298%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 0.16%)</title><rect x="58.6798%" y="405" width="0.1558%" height="15" fill="rgb(216,99,33)" fg:x="50839" fg:w="135"/><text x="58.9298%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (133 samples, 0.15%)</title><rect x="58.6821%" y="389" width="0.1535%" height="15" fill="rgb(225,42,16)" fg:x="50841" fg:w="133"/><text x="58.9321%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (120 samples, 0.14%)</title><rect x="58.6971%" y="373" width="0.1385%" height="15" fill="rgb(220,201,45)" fg:x="50854" fg:w="120"/><text x="58.9471%" y="383.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (120 samples, 0.14%)</title><rect x="58.6971%" y="357" width="0.1385%" height="15" fill="rgb(225,33,4)" fg:x="50854" fg:w="120"/><text x="58.9471%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (146 samples, 0.17%)</title><rect x="58.6775%" y="453" width="0.1685%" height="15" fill="rgb(224,33,50)" fg:x="50837" fg:w="146"/><text x="58.9275%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (146 samples, 0.17%)</title><rect x="58.6775%" y="437" width="0.1685%" height="15" fill="rgb(246,198,51)" fg:x="50837" fg:w="146"/><text x="58.9275%" y="447.50"></text></g><g><title>core::ptr::write (9 samples, 0.01%)</title><rect x="58.8356%" y="421" width="0.0104%" height="15" fill="rgb(205,22,4)" fg:x="50974" fg:w="9"/><text x="59.0856%" y="431.50"></text></g><g><title>chessire_utils::moves::Move::capture (23 samples, 0.03%)</title><rect x="58.8876%" y="373" width="0.0265%" height="15" fill="rgb(206,3,8)" fg:x="51019" fg:w="23"/><text x="59.1376%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::castling (31 samples, 0.04%)</title><rect x="58.9141%" y="373" width="0.0358%" height="15" fill="rgb(251,23,15)" fg:x="51042" fg:w="31"/><text x="59.1641%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::double_push (20 samples, 0.02%)</title><rect x="58.9499%" y="373" width="0.0231%" height="15" fill="rgb(252,88,28)" fg:x="51073" fg:w="20"/><text x="59.1999%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (23 samples, 0.03%)</title><rect x="58.9730%" y="373" width="0.0265%" height="15" fill="rgb(212,127,14)" fg:x="51093" fg:w="23"/><text x="59.2230%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 0.15%)</title><rect x="58.8518%" y="453" width="0.1547%" height="15" fill="rgb(247,145,37)" fg:x="50988" fg:w="134"/><text x="59.1018%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.14%)</title><rect x="58.8622%" y="437" width="0.1443%" height="15" fill="rgb(209,117,53)" fg:x="50997" fg:w="125"/><text x="59.1122%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (121 samples, 0.14%)</title><rect x="58.8668%" y="421" width="0.1397%" height="15" fill="rgb(212,90,42)" fg:x="51001" fg:w="121"/><text x="59.1168%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (107 samples, 0.12%)</title><rect x="58.8829%" y="405" width="0.1235%" height="15" fill="rgb(218,164,37)" fg:x="51015" fg:w="107"/><text x="59.1329%" y="415.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (107 samples, 0.12%)</title><rect x="58.8829%" y="389" width="0.1235%" height="15" fill="rgb(246,65,34)" fg:x="51015" fg:w="107"/><text x="59.1329%" y="399.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (297 samples, 0.34%)</title><rect x="58.6706%" y="533" width="0.3428%" height="15" fill="rgb(231,100,33)" fg:x="50831" fg:w="297"/><text x="58.9206%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (297 samples, 0.34%)</title><rect x="58.6706%" y="517" width="0.3428%" height="15" fill="rgb(228,126,14)" fg:x="50831" fg:w="297"/><text x="58.9206%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (297 samples, 0.34%)</title><rect x="58.6706%" y="501" width="0.3428%" height="15" fill="rgb(215,173,21)" fg:x="50831" fg:w="297"/><text x="58.9206%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (297 samples, 0.34%)</title><rect x="58.6706%" y="485" width="0.3428%" height="15" fill="rgb(210,6,40)" fg:x="50831" fg:w="297"/><text x="58.9206%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (296 samples, 0.34%)</title><rect x="58.6717%" y="469" width="0.3417%" height="15" fill="rgb(212,48,18)" fg:x="50832" fg:w="296"/><text x="58.9217%" y="479.50"></text></g><g><title>chessire_utils::color::Color::opponent (11 samples, 0.01%)</title><rect x="59.0203%" y="533" width="0.0127%" height="15" fill="rgb(230,214,11)" fg:x="51134" fg:w="11"/><text x="59.2703%" y="543.50"></text></g><g><title>chessire::engine::bitboard::moves::get_king_moves (602 samples, 0.69%)</title><rect x="58.3428%" y="549" width="0.6948%" height="15" fill="rgb(254,105,39)" fg:x="50547" fg:w="602"/><text x="58.5928%" y="559.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (235 samples, 0.27%)</title><rect x="59.1149%" y="373" width="0.2712%" height="15" fill="rgb(245,158,5)" fg:x="51216" fg:w="235"/><text x="59.3649%" y="383.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (239 samples, 0.28%)</title><rect x="59.1126%" y="405" width="0.2759%" height="15" fill="rgb(249,208,11)" fg:x="51214" fg:w="239"/><text x="59.3626%" y="415.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (237 samples, 0.27%)</title><rect x="59.1149%" y="389" width="0.2736%" height="15" fill="rgb(210,39,28)" fg:x="51216" fg:w="237"/><text x="59.3649%" y="399.50"></text></g><g><title>chessire_utils::board::Coord::from_tile (39 samples, 0.05%)</title><rect x="59.6886%" y="357" width="0.0450%" height="15" fill="rgb(211,56,53)" fg:x="51713" fg:w="39"/><text x="59.9386%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (577 samples, 0.67%)</title><rect x="59.0919%" y="437" width="0.6660%" height="15" fill="rgb(226,201,30)" fg:x="51196" fg:w="577"/><text x="59.3419%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (559 samples, 0.65%)</title><rect x="59.1126%" y="421" width="0.6452%" height="15" fill="rgb(239,101,34)" fg:x="51214" fg:w="559"/><text x="59.3626%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (320 samples, 0.37%)</title><rect x="59.3885%" y="405" width="0.3694%" height="15" fill="rgb(226,209,5)" fg:x="51453" fg:w="320"/><text x="59.6385%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (92 samples, 0.11%)</title><rect x="59.6517%" y="389" width="0.1062%" height="15" fill="rgb(250,105,47)" fg:x="51681" fg:w="92"/><text x="59.9017%" y="399.50"></text></g><g><title>chessire::engine::bitboard::moves::get_knight_moves::{{closure}} (75 samples, 0.09%)</title><rect x="59.6713%" y="373" width="0.0866%" height="15" fill="rgb(230,72,3)" fg:x="51698" fg:w="75"/><text x="59.9213%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::new_knight_move (21 samples, 0.02%)</title><rect x="59.7336%" y="357" width="0.0242%" height="15" fill="rgb(232,218,39)" fg:x="51752" fg:w="21"/><text x="59.9836%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (125 samples, 0.14%)</title><rect x="59.7867%" y="357" width="0.1443%" height="15" fill="rgb(248,166,6)" fg:x="51798" fg:w="125"/><text x="60.0367%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (125 samples, 0.14%)</title><rect x="59.7867%" y="341" width="0.1443%" height="15" fill="rgb(247,89,20)" fg:x="51798" fg:w="125"/><text x="60.0367%" y="351.50"></text></g><g><title>alloc::alloc::realloc (125 samples, 0.14%)</title><rect x="59.7867%" y="325" width="0.1443%" height="15" fill="rgb(248,130,54)" fg:x="51798" fg:w="125"/><text x="60.0367%" y="335.50"></text></g><g><title>realloc (123 samples, 0.14%)</title><rect x="59.7890%" y="309" width="0.1420%" height="15" fill="rgb(234,196,4)" fg:x="51800" fg:w="123"/><text x="60.0390%" y="319.50"></text></g><g><title>[libc.so.6] (106 samples, 0.12%)</title><rect x="59.8086%" y="293" width="0.1223%" height="15" fill="rgb(250,143,31)" fg:x="51817" fg:w="106"/><text x="60.0586%" y="303.50"></text></g><g><title>[libc.so.6] (90 samples, 0.10%)</title><rect x="59.8271%" y="277" width="0.1039%" height="15" fill="rgb(211,110,34)" fg:x="51833" fg:w="90"/><text x="60.0771%" y="287.50"></text></g><g><title>[libc.so.6] (11 samples, 0.01%)</title><rect x="59.9183%" y="261" width="0.0127%" height="15" fill="rgb(215,124,48)" fg:x="51912" fg:w="11"/><text x="60.1683%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (146 samples, 0.17%)</title><rect x="59.7809%" y="373" width="0.1685%" height="15" fill="rgb(216,46,13)" fg:x="51793" fg:w="146"/><text x="60.0309%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (16 samples, 0.02%)</title><rect x="59.9310%" y="357" width="0.0185%" height="15" fill="rgb(205,184,25)" fg:x="51923" fg:w="16"/><text x="60.1810%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (164 samples, 0.19%)</title><rect x="59.7636%" y="437" width="0.1893%" height="15" fill="rgb(228,1,10)" fg:x="51778" fg:w="164"/><text x="60.0136%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (164 samples, 0.19%)</title><rect x="59.7636%" y="421" width="0.1893%" height="15" fill="rgb(213,116,27)" fg:x="51778" fg:w="164"/><text x="60.0136%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (164 samples, 0.19%)</title><rect x="59.7636%" y="405" width="0.1893%" height="15" fill="rgb(241,95,50)" fg:x="51778" fg:w="164"/><text x="60.0136%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (160 samples, 0.18%)</title><rect x="59.7682%" y="389" width="0.1847%" height="15" fill="rgb(238,48,32)" fg:x="51782" fg:w="160"/><text x="60.0182%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (815 samples, 0.94%)</title><rect x="59.0803%" y="469" width="0.9407%" height="15" fill="rgb(235,113,49)" fg:x="51186" fg:w="815"/><text x="59.3303%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (808 samples, 0.93%)</title><rect x="59.0884%" y="453" width="0.9326%" height="15" fill="rgb(205,127,43)" fg:x="51193" fg:w="808"/><text x="59.3384%" y="463.50"></text></g><g><title>core::ptr::write (59 samples, 0.07%)</title><rect x="59.9529%" y="437" width="0.0681%" height="15" fill="rgb(250,162,2)" fg:x="51942" fg:w="59"/><text x="60.2029%" y="447.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.08%)</title><rect x="60.0314%" y="437" width="0.0831%" height="15" fill="rgb(220,13,41)" fg:x="52010" fg:w="72"/><text x="60.2814%" y="447.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (68 samples, 0.08%)</title><rect x="60.0360%" y="421" width="0.0785%" height="15" fill="rgb(249,221,25)" fg:x="52014" fg:w="68"/><text x="60.2860%" y="431.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (65 samples, 0.08%)</title><rect x="60.0395%" y="405" width="0.0750%" height="15" fill="rgb(215,208,19)" fg:x="52017" fg:w="65"/><text x="60.2895%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (146 samples, 0.17%)</title><rect x="60.0210%" y="469" width="0.1685%" height="15" fill="rgb(236,175,2)" fg:x="52001" fg:w="146"/><text x="60.2710%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.16%)</title><rect x="60.0314%" y="453" width="0.1581%" height="15" fill="rgb(241,52,2)" fg:x="52010" fg:w="137"/><text x="60.2814%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.08%)</title><rect x="60.1145%" y="437" width="0.0750%" height="15" fill="rgb(248,140,14)" fg:x="52082" fg:w="65"/><text x="60.3645%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.01%)</title><rect x="60.1757%" y="421" width="0.0139%" height="15" fill="rgb(253,22,42)" fg:x="52135" fg:w="12"/><text x="60.4257%" y="431.50"></text></g><g><title>chessire::engine::bitboard::moves::get_knight_moves::{{closure}} (12 samples, 0.01%)</title><rect x="60.1757%" y="405" width="0.0139%" height="15" fill="rgb(234,61,47)" fg:x="52135" fg:w="12"/><text x="60.4257%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.02%)</title><rect x="60.1895%" y="469" width="0.0231%" height="15" fill="rgb(208,226,15)" fg:x="52147" fg:w="20"/><text x="60.4395%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="60.1895%" y="453" width="0.0231%" height="15" fill="rgb(217,221,4)" fg:x="52147" fg:w="20"/><text x="60.4395%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="60.1895%" y="437" width="0.0231%" height="15" fill="rgb(212,174,34)" fg:x="52147" fg:w="20"/><text x="60.4395%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.02%)</title><rect x="60.1895%" y="421" width="0.0231%" height="15" fill="rgb(253,83,4)" fg:x="52147" fg:w="20"/><text x="60.4395%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.02%)</title><rect x="60.1895%" y="405" width="0.0231%" height="15" fill="rgb(250,195,49)" fg:x="52147" fg:w="20"/><text x="60.4395%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.02%)</title><rect x="60.1895%" y="389" width="0.0231%" height="15" fill="rgb(241,192,25)" fg:x="52147" fg:w="20"/><text x="60.4395%" y="399.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="60.1918%" y="373" width="0.0208%" height="15" fill="rgb(208,124,10)" fg:x="52149" fg:w="18"/><text x="60.4418%" y="383.50"></text></g><g><title>malloc (10 samples, 0.01%)</title><rect x="60.2011%" y="357" width="0.0115%" height="15" fill="rgb(222,33,0)" fg:x="52157" fg:w="10"/><text x="60.4511%" y="367.50"></text></g><g><title>chessire::engine::bitboard::moves::get_knight_moves (1,021 samples, 1.18%)</title><rect x="59.0376%" y="549" width="1.1785%" height="15" fill="rgb(234,209,28)" fg:x="51149" fg:w="1021"/><text x="59.2876%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,014 samples, 1.17%)</title><rect x="59.0457%" y="533" width="1.1704%" height="15" fill="rgb(224,11,23)" fg:x="51156" fg:w="1014"/><text x="59.2957%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,014 samples, 1.17%)</title><rect x="59.0457%" y="517" width="1.1704%" height="15" fill="rgb(232,99,1)" fg:x="51156" fg:w="1014"/><text x="59.2957%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,012 samples, 1.17%)</title><rect x="59.0480%" y="501" width="1.1681%" height="15" fill="rgb(237,95,45)" fg:x="51158" fg:w="1012"/><text x="59.2980%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,000 samples, 1.15%)</title><rect x="59.0618%" y="485" width="1.1542%" height="15" fill="rgb(208,109,11)" fg:x="51170" fg:w="1000"/><text x="59.3118%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.01%)</title><rect x="60.4458%" y="533" width="0.0127%" height="15" fill="rgb(216,190,48)" fg:x="52369" fg:w="11"/><text x="60.6958%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (98 samples, 0.11%)</title><rect x="60.4885%" y="485" width="0.1131%" height="15" fill="rgb(251,171,36)" fg:x="52406" fg:w="98"/><text x="60.7385%" y="495.50"></text></g><g><title>malloc (72 samples, 0.08%)</title><rect x="60.5185%" y="469" width="0.0831%" height="15" fill="rgb(230,62,22)" fg:x="52432" fg:w="72"/><text x="60.7685%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (11 samples, 0.01%)</title><rect x="60.6016%" y="485" width="0.0127%" height="15" fill="rgb(225,114,35)" fg:x="52504" fg:w="11"/><text x="60.8516%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (127 samples, 0.15%)</title><rect x="60.4792%" y="517" width="0.1466%" height="15" fill="rgb(215,118,42)" fg:x="52398" fg:w="127"/><text x="60.7292%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (126 samples, 0.15%)</title><rect x="60.4804%" y="501" width="0.1454%" height="15" fill="rgb(243,119,21)" fg:x="52399" fg:w="126"/><text x="60.7304%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (175 samples, 0.20%)</title><rect x="60.4585%" y="533" width="0.2020%" height="15" fill="rgb(252,177,53)" fg:x="52380" fg:w="175"/><text x="60.7085%" y="543.50"></text></g><g><title>core::ptr::write (23 samples, 0.03%)</title><rect x="60.6339%" y="517" width="0.0265%" height="15" fill="rgb(237,209,29)" fg:x="52532" fg:w="23"/><text x="60.8839%" y="527.50"></text></g><g><title>chessire::engine::bitboard::moves::get_single_push_target (13 samples, 0.02%)</title><rect x="60.6639%" y="533" width="0.0150%" height="15" fill="rgb(212,65,23)" fg:x="52558" fg:w="13"/><text x="60.9139%" y="543.50"></text></g><g><title>chessire::engine::bitboard::moves::is_promotion_rank (9 samples, 0.01%)</title><rect x="60.6801%" y="533" width="0.0104%" height="15" fill="rgb(230,222,46)" fg:x="52572" fg:w="9"/><text x="60.9301%" y="543.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (9 samples, 0.01%)</title><rect x="60.6801%" y="517" width="0.0104%" height="15" fill="rgb(215,135,32)" fg:x="52572" fg:w="9"/><text x="60.9301%" y="527.50"></text></g><g><title>core::ops::range::RangeBounds::contains (9 samples, 0.01%)</title><rect x="60.6801%" y="501" width="0.0104%" height="15" fill="rgb(246,101,22)" fg:x="52572" fg:w="9"/><text x="60.9301%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (9 samples, 0.01%)</title><rect x="60.6801%" y="485" width="0.0104%" height="15" fill="rgb(206,107,13)" fg:x="52572" fg:w="9"/><text x="60.9301%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::le (9 samples, 0.01%)</title><rect x="60.6801%" y="469" width="0.0104%" height="15" fill="rgb(250,100,44)" fg:x="52572" fg:w="9"/><text x="60.9301%" y="479.50"></text></g><g><title>chessire::engine::bitboard::moves::is_start_rank (13 samples, 0.02%)</title><rect x="60.6905%" y="533" width="0.0150%" height="15" fill="rgb(231,147,38)" fg:x="52581" fg:w="13"/><text x="60.9405%" y="543.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (13 samples, 0.02%)</title><rect x="60.6905%" y="517" width="0.0150%" height="15" fill="rgb(229,8,40)" fg:x="52581" fg:w="13"/><text x="60.9405%" y="527.50"></text></g><g><title>core::ops::range::RangeBounds::contains (13 samples, 0.02%)</title><rect x="60.6905%" y="501" width="0.0150%" height="15" fill="rgb(221,135,30)" fg:x="52581" fg:w="13"/><text x="60.9405%" y="511.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (92 samples, 0.11%)</title><rect x="60.7055%" y="533" width="0.1062%" height="15" fill="rgb(249,193,18)" fg:x="52594" fg:w="92"/><text x="60.9555%" y="543.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (92 samples, 0.11%)</title><rect x="60.7055%" y="517" width="0.1062%" height="15" fill="rgb(209,133,39)" fg:x="52594" fg:w="92"/><text x="60.9555%" y="527.50"></text></g><g><title>chessire_utils::board::Coord::from_tile (33 samples, 0.04%)</title><rect x="60.8151%" y="533" width="0.0381%" height="15" fill="rgb(232,100,14)" fg:x="52689" fg:w="33"/><text x="61.0651%" y="543.50"></text></g><g><title>chessire_utils::board::Coord::to_usize (19 samples, 0.02%)</title><rect x="60.8532%" y="533" width="0.0219%" height="15" fill="rgb(224,185,1)" fg:x="52722" fg:w="19"/><text x="61.1032%" y="543.50"></text></g><g><title>chessire_utils::color::Color::opponent (12 samples, 0.01%)</title><rect x="60.8751%" y="533" width="0.0139%" height="15" fill="rgb(223,139,8)" fg:x="52741" fg:w="12"/><text x="61.1251%" y="543.50"></text></g><g><title>chessire_utils::moves::Move::capture (45 samples, 0.05%)</title><rect x="60.8890%" y="533" width="0.0519%" height="15" fill="rgb(232,213,38)" fg:x="52753" fg:w="45"/><text x="61.1390%" y="543.50"></text></g><g><title>chessire::engine::bitboard::moves::get_pawn_moves (657 samples, 0.76%)</title><rect x="60.2161%" y="549" width="0.7583%" height="15" fill="rgb(207,94,22)" fg:x="52170" fg:w="657"/><text x="60.4661%" y="559.50"></text></g><g><title>chessire_utils::moves::Move::new_pawn_push (18 samples, 0.02%)</title><rect x="60.9536%" y="533" width="0.0208%" height="15" fill="rgb(219,183,54)" fg:x="52809" fg:w="18"/><text x="61.2036%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.02%)</title><rect x="60.9871%" y="485" width="0.0162%" height="15" fill="rgb(216,185,54)" fg:x="52838" fg:w="14"/><text x="61.2371%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (14 samples, 0.02%)</title><rect x="60.9871%" y="469" width="0.0162%" height="15" fill="rgb(254,217,39)" fg:x="52838" fg:w="14"/><text x="61.2371%" y="479.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (15 samples, 0.02%)</title><rect x="60.9871%" y="517" width="0.0173%" height="15" fill="rgb(240,178,23)" fg:x="52838" fg:w="15"/><text x="61.2371%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (15 samples, 0.02%)</title><rect x="60.9871%" y="501" width="0.0173%" height="15" fill="rgb(218,11,47)" fg:x="52838" fg:w="15"/><text x="61.2371%" y="511.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_queen_attack (18 samples, 0.02%)</title><rect x="60.9871%" y="533" width="0.0208%" height="15" fill="rgb(218,51,51)" fg:x="52838" fg:w="18"/><text x="61.2371%" y="543.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (143 samples, 0.17%)</title><rect x="61.0483%" y="357" width="0.1651%" height="15" fill="rgb(238,126,27)" fg:x="52891" fg:w="143"/><text x="61.2983%" y="367.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.17%)</title><rect x="61.0460%" y="389" width="0.1697%" height="15" fill="rgb(249,202,22)" fg:x="52889" fg:w="147"/><text x="61.2960%" y="399.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (146 samples, 0.17%)</title><rect x="61.0471%" y="373" width="0.1685%" height="15" fill="rgb(254,195,49)" fg:x="52890" fg:w="146"/><text x="61.2971%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.01%)</title><rect x="61.3045%" y="357" width="0.0115%" height="15" fill="rgb(208,123,14)" fg:x="53113" fg:w="10"/><text x="61.5545%" y="367.50"></text></g><g><title>chessire_utils::board::Coord::from_tile (39 samples, 0.05%)</title><rect x="61.3703%" y="341" width="0.0450%" height="15" fill="rgb(224,200,8)" fg:x="53170" fg:w="39"/><text x="61.6203%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::capture (200 samples, 0.23%)</title><rect x="61.4153%" y="341" width="0.2308%" height="15" fill="rgb(217,61,36)" fg:x="53209" fg:w="200"/><text x="61.6653%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::castling (222 samples, 0.26%)</title><rect x="61.6462%" y="341" width="0.2562%" height="15" fill="rgb(206,35,45)" fg:x="53409" fg:w="222"/><text x="61.8962%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::double_push (219 samples, 0.25%)</title><rect x="61.9024%" y="341" width="0.2528%" height="15" fill="rgb(217,65,33)" fg:x="53631" fg:w="219"/><text x="62.1524%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (226 samples, 0.26%)</title><rect x="62.1552%" y="341" width="0.2609%" height="15" fill="rgb(222,158,48)" fg:x="53850" fg:w="226"/><text x="62.4052%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,230 samples, 1.42%)</title><rect x="61.0367%" y="421" width="1.4197%" height="15" fill="rgb(254,2,54)" fg:x="52881" fg:w="1230"/><text x="61.2867%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,222 samples, 1.41%)</title><rect x="61.0460%" y="405" width="1.4105%" height="15" fill="rgb(250,143,38)" fg:x="52889" fg:w="1222"/><text x="61.2960%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,075 samples, 1.24%)</title><rect x="61.2156%" y="389" width="1.2408%" height="15" fill="rgb(248,25,0)" fg:x="53036" fg:w="1075"/><text x="61.4656%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (998 samples, 1.15%)</title><rect x="61.3045%" y="373" width="1.1519%" height="15" fill="rgb(206,152,27)" fg:x="53113" fg:w="998"/><text x="61.5545%" y="383.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (988 samples, 1.14%)</title><rect x="61.3161%" y="357" width="1.1404%" height="15" fill="rgb(240,77,30)" fg:x="53123" fg:w="988"/><text x="61.5661%" y="367.50"></text></g><g><title>chessire_utils::moves::Move::new (35 samples, 0.04%)</title><rect x="62.4160%" y="341" width="0.0404%" height="15" fill="rgb(231,5,3)" fg:x="54076" fg:w="35"/><text x="62.6660%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (189 samples, 0.22%)</title><rect x="62.4807%" y="341" width="0.2181%" height="15" fill="rgb(207,226,32)" fg:x="54132" fg:w="189"/><text x="62.7307%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (189 samples, 0.22%)</title><rect x="62.4807%" y="325" width="0.2181%" height="15" fill="rgb(222,207,47)" fg:x="54132" fg:w="189"/><text x="62.7307%" y="335.50"></text></g><g><title>alloc::alloc::realloc (189 samples, 0.22%)</title><rect x="62.4807%" y="309" width="0.2181%" height="15" fill="rgb(229,115,45)" fg:x="54132" fg:w="189"/><text x="62.7307%" y="319.50"></text></g><g><title>realloc (181 samples, 0.21%)</title><rect x="62.4899%" y="293" width="0.2089%" height="15" fill="rgb(224,191,6)" fg:x="54140" fg:w="181"/><text x="62.7399%" y="303.50"></text></g><g><title>[libc.so.6] (153 samples, 0.18%)</title><rect x="62.5222%" y="277" width="0.1766%" height="15" fill="rgb(230,227,24)" fg:x="54168" fg:w="153"/><text x="62.7722%" y="287.50"></text></g><g><title>[libc.so.6] (134 samples, 0.15%)</title><rect x="62.5441%" y="261" width="0.1547%" height="15" fill="rgb(228,80,19)" fg:x="54187" fg:w="134"/><text x="62.7941%" y="271.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="62.6792%" y="245" width="0.0196%" height="15" fill="rgb(247,229,0)" fg:x="54304" fg:w="17"/><text x="62.9292%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (223 samples, 0.26%)</title><rect x="62.4749%" y="357" width="0.2574%" height="15" fill="rgb(237,194,15)" fg:x="54127" fg:w="223"/><text x="62.7249%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (29 samples, 0.03%)</title><rect x="62.6988%" y="341" width="0.0335%" height="15" fill="rgb(219,203,20)" fg:x="54321" fg:w="29"/><text x="62.9488%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (239 samples, 0.28%)</title><rect x="62.4622%" y="421" width="0.2759%" height="15" fill="rgb(234,128,8)" fg:x="54116" fg:w="239"/><text x="62.7122%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (239 samples, 0.28%)</title><rect x="62.4622%" y="405" width="0.2759%" height="15" fill="rgb(248,202,8)" fg:x="54116" fg:w="239"/><text x="62.7122%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 samples, 0.27%)</title><rect x="62.4634%" y="389" width="0.2747%" height="15" fill="rgb(206,104,37)" fg:x="54117" fg:w="238"/><text x="62.7134%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (236 samples, 0.27%)</title><rect x="62.4657%" y="373" width="0.2724%" height="15" fill="rgb(223,8,27)" fg:x="54119" fg:w="236"/><text x="62.7157%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,532 samples, 1.77%)</title><rect x="61.0160%" y="453" width="1.7683%" height="15" fill="rgb(216,217,28)" fg:x="52863" fg:w="1532"/><text x="61.2660%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,530 samples, 1.77%)</title><rect x="61.0183%" y="437" width="1.7660%" height="15" fill="rgb(249,199,1)" fg:x="52865" fg:w="1530"/><text x="61.2683%" y="447.50"></text></g><g><title>core::ptr::write (40 samples, 0.05%)</title><rect x="62.7381%" y="421" width="0.0462%" height="15" fill="rgb(240,85,17)" fg:x="54355" fg:w="40"/><text x="62.9881%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::util::BitBoard as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.07%)</title><rect x="62.7969%" y="421" width="0.0658%" height="15" fill="rgb(206,108,45)" fg:x="54406" fg:w="57"/><text x="63.0469%" y="431.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (53 samples, 0.06%)</title><rect x="62.8015%" y="405" width="0.0612%" height="15" fill="rgb(245,210,41)" fg:x="54410" fg:w="53"/><text x="63.0515%" y="415.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (53 samples, 0.06%)</title><rect x="62.8015%" y="389" width="0.0612%" height="15" fill="rgb(206,13,37)" fg:x="54410" fg:w="53"/><text x="63.0515%" y="399.50"></text></g><g><title>chessire_utils::moves::Move::capture (24 samples, 0.03%)</title><rect x="62.8743%" y="373" width="0.0277%" height="15" fill="rgb(250,61,18)" fg:x="54473" fg:w="24"/><text x="63.1243%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::castling (31 samples, 0.04%)</title><rect x="62.9020%" y="373" width="0.0358%" height="15" fill="rgb(235,172,48)" fg:x="54497" fg:w="31"/><text x="63.1520%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::double_push (23 samples, 0.03%)</title><rect x="62.9377%" y="373" width="0.0265%" height="15" fill="rgb(249,201,17)" fg:x="54528" fg:w="23"/><text x="63.1877%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (21 samples, 0.02%)</title><rect x="62.9643%" y="373" width="0.0242%" height="15" fill="rgb(219,208,6)" fg:x="54551" fg:w="21"/><text x="63.2143%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (184 samples, 0.21%)</title><rect x="62.7842%" y="453" width="0.2124%" height="15" fill="rgb(248,31,23)" fg:x="54395" fg:w="184"/><text x="63.0342%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (173 samples, 0.20%)</title><rect x="62.7969%" y="437" width="0.1997%" height="15" fill="rgb(245,15,42)" fg:x="54406" fg:w="173"/><text x="63.0469%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (116 samples, 0.13%)</title><rect x="62.8627%" y="421" width="0.1339%" height="15" fill="rgb(222,217,39)" fg:x="54463" fg:w="116"/><text x="63.1127%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (109 samples, 0.13%)</title><rect x="62.8708%" y="405" width="0.1258%" height="15" fill="rgb(210,219,27)" fg:x="54470" fg:w="109"/><text x="63.1208%" y="415.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (109 samples, 0.13%)</title><rect x="62.8708%" y="389" width="0.1258%" height="15" fill="rgb(252,166,36)" fg:x="54470" fg:w="109"/><text x="63.1208%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.01%)</title><rect x="62.9966%" y="453" width="0.0127%" height="15" fill="rgb(245,132,34)" fg:x="54579" fg:w="11"/><text x="63.2466%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="62.9966%" y="437" width="0.0127%" height="15" fill="rgb(236,54,3)" fg:x="54579" fg:w="11"/><text x="63.2466%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.01%)</title><rect x="62.9966%" y="421" width="0.0127%" height="15" fill="rgb(241,173,43)" fg:x="54579" fg:w="11"/><text x="63.2466%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="62.9966%" y="405" width="0.0127%" height="15" fill="rgb(215,190,9)" fg:x="54579" fg:w="11"/><text x="63.2466%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="62.9966%" y="389" width="0.0127%" height="15" fill="rgb(242,101,16)" fg:x="54579" fg:w="11"/><text x="63.2466%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="62.9966%" y="373" width="0.0127%" height="15" fill="rgb(223,190,21)" fg:x="54579" fg:w="11"/><text x="63.2466%" y="383.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.01%)</title><rect x="62.9978%" y="357" width="0.0115%" height="15" fill="rgb(215,228,25)" fg:x="54580" fg:w="10"/><text x="63.2478%" y="367.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (1,735 samples, 2.00%)</title><rect x="61.0079%" y="533" width="2.0026%" height="15" fill="rgb(225,36,22)" fg:x="52856" fg:w="1735"/><text x="61.2579%" y="543.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,735 samples, 2.00%)</title><rect x="61.0079%" y="517" width="2.0026%" height="15" fill="rgb(251,106,46)" fg:x="52856" fg:w="1735"/><text x="61.2579%" y="527.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,735 samples, 2.00%)</title><rect x="61.0079%" y="501" width="2.0026%" height="15" fill="rgb(208,90,1)" fg:x="52856" fg:w="1735"/><text x="61.2579%" y="511.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,735 samples, 2.00%)</title><rect x="61.0079%" y="485" width="2.0026%" height="15" fill="rgb(243,10,4)" fg:x="52856" fg:w="1735"/><text x="61.2579%" y="495.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,730 samples, 2.00%)</title><rect x="61.0136%" y="469" width="1.9968%" height="15" fill="rgb(212,137,27)" fg:x="52861" fg:w="1730"/><text x="61.2636%" y="479.50">&lt;..</text></g><g><title>chessire::engine::bitboard::moves::get_queen_moves (1,766 samples, 2.04%)</title><rect x="60.9744%" y="549" width="2.0384%" height="15" fill="rgb(231,220,49)" fg:x="52827" fg:w="1766"/><text x="61.2244%" y="559.50">c..</text></g><g><title>chessire::engine::bitboard::attacks::get_rook_attack (17 samples, 0.02%)</title><rect x="63.0416%" y="533" width="0.0196%" height="15" fill="rgb(237,96,20)" fg:x="54618" fg:w="17"/><text x="63.2916%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.02%)</title><rect x="63.0462%" y="517" width="0.0150%" height="15" fill="rgb(239,229,30)" fg:x="54622" fg:w="13"/><text x="63.2962%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.01%)</title><rect x="63.0497%" y="501" width="0.0115%" height="15" fill="rgb(219,65,33)" fg:x="54625" fg:w="10"/><text x="63.2997%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.01%)</title><rect x="63.0497%" y="485" width="0.0115%" height="15" fill="rgb(243,134,7)" fg:x="54625" fg:w="10"/><text x="63.2997%" y="495.50"></text></g><g><title>chessire_utils::board::Coord::from_tile (10 samples, 0.01%)</title><rect x="63.1686%" y="341" width="0.0115%" height="15" fill="rgb(216,177,54)" fg:x="54728" fg:w="10"/><text x="63.4186%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::capture (71 samples, 0.08%)</title><rect x="63.1801%" y="341" width="0.0820%" height="15" fill="rgb(211,160,20)" fg:x="54738" fg:w="71"/><text x="63.4301%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::castling (87 samples, 0.10%)</title><rect x="63.2621%" y="341" width="0.1004%" height="15" fill="rgb(239,85,39)" fg:x="54809" fg:w="87"/><text x="63.5121%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::double_push (73 samples, 0.08%)</title><rect x="63.3625%" y="341" width="0.0843%" height="15" fill="rgb(232,125,22)" fg:x="54896" fg:w="73"/><text x="63.6125%" y="351.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (73 samples, 0.08%)</title><rect x="63.4468%" y="341" width="0.0843%" height="15" fill="rgb(244,57,34)" fg:x="54969" fg:w="73"/><text x="63.6968%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (378 samples, 0.44%)</title><rect x="63.0993%" y="421" width="0.4363%" height="15" fill="rgb(214,203,32)" fg:x="54668" fg:w="378"/><text x="63.3493%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (378 samples, 0.44%)</title><rect x="63.0993%" y="405" width="0.4363%" height="15" fill="rgb(207,58,43)" fg:x="54668" fg:w="378"/><text x="63.3493%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (370 samples, 0.43%)</title><rect x="63.1086%" y="389" width="0.4271%" height="15" fill="rgb(215,193,15)" fg:x="54676" fg:w="370"/><text x="63.3586%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (330 samples, 0.38%)</title><rect x="63.1547%" y="373" width="0.3809%" height="15" fill="rgb(232,15,44)" fg:x="54716" fg:w="330"/><text x="63.4047%" y="383.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (330 samples, 0.38%)</title><rect x="63.1547%" y="357" width="0.3809%" height="15" fill="rgb(212,3,48)" fg:x="54716" fg:w="330"/><text x="63.4047%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="63.5356%" y="421" width="0.0115%" height="15" fill="rgb(218,128,7)" fg:x="55046" fg:w="10"/><text x="63.7856%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.01%)</title><rect x="63.5356%" y="405" width="0.0115%" height="15" fill="rgb(226,216,39)" fg:x="55046" fg:w="10"/><text x="63.7856%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="63.5356%" y="389" width="0.0115%" height="15" fill="rgb(243,47,51)" fg:x="55046" fg:w="10"/><text x="63.7856%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="63.5356%" y="373" width="0.0115%" height="15" fill="rgb(241,183,40)" fg:x="55046" fg:w="10"/><text x="63.7856%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (420 samples, 0.48%)</title><rect x="63.0924%" y="453" width="0.4848%" height="15" fill="rgb(231,217,32)" fg:x="54662" fg:w="420"/><text x="63.3424%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (420 samples, 0.48%)</title><rect x="63.0924%" y="437" width="0.4848%" height="15" fill="rgb(229,61,38)" fg:x="54662" fg:w="420"/><text x="63.3424%" y="447.50"></text></g><g><title>core::ptr::write (26 samples, 0.03%)</title><rect x="63.5472%" y="421" width="0.0300%" height="15" fill="rgb(225,210,5)" fg:x="55056" fg:w="26"/><text x="63.7972%" y="431.50"></text></g><g><title>chessire_utils::moves::Move::capture (53 samples, 0.06%)</title><rect x="63.6245%" y="373" width="0.0612%" height="15" fill="rgb(231,79,45)" fg:x="55123" fg:w="53"/><text x="63.8745%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::castling (40 samples, 0.05%)</title><rect x="63.6857%" y="373" width="0.0462%" height="15" fill="rgb(224,100,7)" fg:x="55176" fg:w="40"/><text x="63.9357%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::double_push (64 samples, 0.07%)</title><rect x="63.7318%" y="373" width="0.0739%" height="15" fill="rgb(241,198,18)" fg:x="55216" fg:w="64"/><text x="63.9818%" y="383.50"></text></g><g><title>chessire_utils::moves::Move::enpassant (56 samples, 0.06%)</title><rect x="63.8057%" y="373" width="0.0646%" height="15" fill="rgb(252,97,53)" fg:x="55280" fg:w="56"/><text x="64.0557%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (261 samples, 0.30%)</title><rect x="63.5795%" y="453" width="0.3013%" height="15" fill="rgb(220,88,7)" fg:x="55084" fg:w="261"/><text x="63.8295%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (251 samples, 0.29%)</title><rect x="63.5910%" y="437" width="0.2897%" height="15" fill="rgb(213,176,14)" fg:x="55094" fg:w="251"/><text x="63.8410%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (246 samples, 0.28%)</title><rect x="63.5968%" y="421" width="0.2839%" height="15" fill="rgb(246,73,7)" fg:x="55099" fg:w="246"/><text x="63.8468%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (232 samples, 0.27%)</title><rect x="63.6130%" y="405" width="0.2678%" height="15" fill="rgb(245,64,36)" fg:x="55113" fg:w="232"/><text x="63.8630%" y="415.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist::{{closure}} (232 samples, 0.27%)</title><rect x="63.6130%" y="389" width="0.2678%" height="15" fill="rgb(245,80,10)" fg:x="55113" fg:w="232"/><text x="63.8630%" y="399.50"></text></g><g><title>chessire_utils::moves::Move::new (9 samples, 0.01%)</title><rect x="63.8704%" y="373" width="0.0104%" height="15" fill="rgb(232,107,50)" fg:x="55336" fg:w="9"/><text x="64.1204%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.03%)</title><rect x="63.8807%" y="453" width="0.0265%" height="15" fill="rgb(253,3,0)" fg:x="55345" fg:w="23"/><text x="64.1307%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.03%)</title><rect x="63.8807%" y="437" width="0.0265%" height="15" fill="rgb(212,99,53)" fg:x="55345" fg:w="23"/><text x="64.1307%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.03%)</title><rect x="63.8807%" y="421" width="0.0265%" height="15" fill="rgb(249,111,54)" fg:x="55345" fg:w="23"/><text x="64.1307%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.03%)</title><rect x="63.8807%" y="405" width="0.0265%" height="15" fill="rgb(249,55,30)" fg:x="55345" fg:w="23"/><text x="64.1307%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.03%)</title><rect x="63.8807%" y="389" width="0.0265%" height="15" fill="rgb(237,47,42)" fg:x="55345" fg:w="23"/><text x="64.1307%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.03%)</title><rect x="63.8807%" y="373" width="0.0265%" height="15" fill="rgb(211,20,18)" fg:x="55345" fg:w="23"/><text x="64.1307%" y="383.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="63.8831%" y="357" width="0.0242%" height="15" fill="rgb(231,203,46)" fg:x="55347" fg:w="21"/><text x="64.1331%" y="367.50"></text></g><g><title>malloc (11 samples, 0.01%)</title><rect x="63.8946%" y="341" width="0.0127%" height="15" fill="rgb(237,142,3)" fg:x="55357" fg:w="11"/><text x="64.1446%" y="351.50"></text></g><g><title>chessire::engine::bitboard::moves::fill_movelist (734 samples, 0.85%)</title><rect x="63.0612%" y="533" width="0.8472%" height="15" fill="rgb(241,107,1)" fg:x="54635" fg:w="734"/><text x="63.3112%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (734 samples, 0.85%)</title><rect x="63.0612%" y="517" width="0.8472%" height="15" fill="rgb(229,83,13)" fg:x="54635" fg:w="734"/><text x="63.3112%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (734 samples, 0.85%)</title><rect x="63.0612%" y="501" width="0.8472%" height="15" fill="rgb(241,91,40)" fg:x="54635" fg:w="734"/><text x="63.3112%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (732 samples, 0.84%)</title><rect x="63.0636%" y="485" width="0.8449%" height="15" fill="rgb(225,3,45)" fg:x="54637" fg:w="732"/><text x="63.3136%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (719 samples, 0.83%)</title><rect x="63.0786%" y="469" width="0.8299%" height="15" fill="rgb(244,223,14)" fg:x="54650" fg:w="719"/><text x="63.3286%" y="479.50"></text></g><g><title>chessire::engine::bitboard::moves::get_rook_moves (779 samples, 0.90%)</title><rect x="63.0128%" y="549" width="0.8991%" height="15" fill="rgb(224,124,37)" fg:x="54593" fg:w="779"/><text x="63.2628%" y="559.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (10 samples, 0.01%)</title><rect x="63.9131%" y="533" width="0.0115%" height="15" fill="rgb(251,171,30)" fg:x="55373" fg:w="10"/><text x="64.1631%" y="543.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (258 samples, 0.30%)</title><rect x="63.9246%" y="533" width="0.2978%" height="15" fill="rgb(236,46,54)" fg:x="55383" fg:w="258"/><text x="64.1746%" y="543.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (273 samples, 0.32%)</title><rect x="63.9119%" y="549" width="0.3151%" height="15" fill="rgb(245,213,5)" fg:x="55372" fg:w="273"/><text x="64.1619%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.05%)</title><rect x="64.2940%" y="453" width="0.0462%" height="15" fill="rgb(230,144,27)" fg:x="55703" fg:w="40"/><text x="64.5440%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (87 samples, 0.10%)</title><rect x="64.3494%" y="437" width="0.1004%" height="15" fill="rgb(220,86,6)" fg:x="55751" fg:w="87"/><text x="64.5994%" y="447.50"></text></g><g><title>core::ptr::write (87 samples, 0.10%)</title><rect x="64.3494%" y="421" width="0.1004%" height="15" fill="rgb(240,20,13)" fg:x="55751" fg:w="87"/><text x="64.5994%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (149 samples, 0.17%)</title><rect x="66.5632%" y="373" width="0.1720%" height="15" fill="rgb(217,89,34)" fg:x="57669" fg:w="149"/><text x="66.8132%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (149 samples, 0.17%)</title><rect x="66.5632%" y="357" width="0.1720%" height="15" fill="rgb(229,13,5)" fg:x="57669" fg:w="149"/><text x="66.8132%" y="367.50"></text></g><g><title>core::mem::replace (149 samples, 0.17%)</title><rect x="66.5632%" y="341" width="0.1720%" height="15" fill="rgb(244,67,35)" fg:x="57669" fg:w="149"/><text x="66.8132%" y="351.50"></text></g><g><title>core::ptr::write (149 samples, 0.17%)</title><rect x="66.5632%" y="325" width="0.1720%" height="15" fill="rgb(221,40,2)" fg:x="57669" fg:w="149"/><text x="66.8132%" y="335.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (204 samples, 0.24%)</title><rect x="66.5632%" y="389" width="0.2355%" height="15" fill="rgb(237,157,21)" fg:x="57669" fg:w="204"/><text x="66.8132%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (55 samples, 0.06%)</title><rect x="66.7352%" y="373" width="0.0635%" height="15" fill="rgb(222,94,11)" fg:x="57818" fg:w="55"/><text x="66.9852%" y="383.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (55 samples, 0.06%)</title><rect x="66.7352%" y="357" width="0.0635%" height="15" fill="rgb(249,113,6)" fg:x="57818" fg:w="55"/><text x="66.9852%" y="367.50"></text></g><g><title>[libc.so.6] (1,373 samples, 1.58%)</title><rect x="66.7986%" y="389" width="1.5848%" height="15" fill="rgb(238,137,36)" fg:x="57873" fg:w="1373"/><text x="67.0486%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (58 samples, 0.07%)</title><rect x="68.3845%" y="389" width="0.0669%" height="15" fill="rgb(210,102,26)" fg:x="59247" fg:w="58"/><text x="68.6345%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (69 samples, 0.08%)</title><rect x="68.8947%" y="373" width="0.0796%" height="15" fill="rgb(218,30,30)" fg:x="59689" fg:w="69"/><text x="69.1447%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (64 samples, 0.07%)</title><rect x="68.9005%" y="357" width="0.0739%" height="15" fill="rgb(214,67,26)" fg:x="59694" fg:w="64"/><text x="69.1505%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (64 samples, 0.07%)</title><rect x="68.9005%" y="341" width="0.0739%" height="15" fill="rgb(251,9,53)" fg:x="59694" fg:w="64"/><text x="69.1505%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (51 samples, 0.06%)</title><rect x="68.9836%" y="341" width="0.0589%" height="15" fill="rgb(228,204,25)" fg:x="59766" fg:w="51"/><text x="69.2336%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (51 samples, 0.06%)</title><rect x="68.9836%" y="325" width="0.0589%" height="15" fill="rgb(207,153,8)" fg:x="59766" fg:w="51"/><text x="69.2336%" y="335.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (118 samples, 0.14%)</title><rect x="68.9744%" y="373" width="0.1362%" height="15" fill="rgb(242,9,16)" fg:x="59758" fg:w="118"/><text x="69.2244%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (110 samples, 0.13%)</title><rect x="68.9836%" y="357" width="0.1270%" height="15" fill="rgb(217,211,10)" fg:x="59766" fg:w="110"/><text x="69.2336%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (59 samples, 0.07%)</title><rect x="69.0425%" y="341" width="0.0681%" height="15" fill="rgb(219,228,52)" fg:x="59817" fg:w="59"/><text x="69.2925%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (59 samples, 0.07%)</title><rect x="69.0425%" y="325" width="0.0681%" height="15" fill="rgb(231,92,29)" fg:x="59817" fg:w="59"/><text x="69.2925%" y="335.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (99 samples, 0.11%)</title><rect x="69.1775%" y="357" width="0.1143%" height="15" fill="rgb(232,8,23)" fg:x="59934" fg:w="99"/><text x="69.4275%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (52 samples, 0.06%)</title><rect x="69.2317%" y="341" width="0.0600%" height="15" fill="rgb(216,211,34)" fg:x="59981" fg:w="52"/><text x="69.4817%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (48 samples, 0.06%)</title><rect x="69.2364%" y="325" width="0.0554%" height="15" fill="rgb(236,151,0)" fg:x="59985" fg:w="48"/><text x="69.4864%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (48 samples, 0.06%)</title><rect x="69.2364%" y="309" width="0.0554%" height="15" fill="rgb(209,168,3)" fg:x="59985" fg:w="48"/><text x="69.4864%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (31 samples, 0.04%)</title><rect x="69.3518%" y="325" width="0.0358%" height="15" fill="rgb(208,129,28)" fg:x="60085" fg:w="31"/><text x="69.6018%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (26 samples, 0.03%)</title><rect x="69.3576%" y="309" width="0.0300%" height="15" fill="rgb(229,78,22)" fg:x="60090" fg:w="26"/><text x="69.6076%" y="319.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_queen_attack (245 samples, 0.28%)</title><rect x="69.1106%" y="373" width="0.2828%" height="15" fill="rgb(228,187,13)" fg:x="59876" fg:w="245"/><text x="69.3606%" y="383.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_rook_attack (88 samples, 0.10%)</title><rect x="69.2918%" y="357" width="0.1016%" height="15" fill="rgb(240,119,24)" fg:x="60033" fg:w="88"/><text x="69.5418%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (36 samples, 0.04%)</title><rect x="69.3518%" y="341" width="0.0416%" height="15" fill="rgb(209,194,42)" fg:x="60085" fg:w="36"/><text x="69.6018%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.04%)</title><rect x="69.4337%" y="341" width="0.0392%" height="15" fill="rgb(247,200,46)" fg:x="60156" fg:w="34"/><text x="69.6837%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (34 samples, 0.04%)</title><rect x="69.4337%" y="325" width="0.0392%" height="15" fill="rgb(218,76,16)" fg:x="60156" fg:w="34"/><text x="69.6837%" y="335.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::is_square_attacked_by (891 samples, 1.03%)</title><rect x="68.4515%" y="389" width="1.0284%" height="15" fill="rgb(225,21,48)" fg:x="59305" fg:w="891"/><text x="68.7015%" y="399.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_rook_attack (75 samples, 0.09%)</title><rect x="69.3933%" y="373" width="0.0866%" height="15" fill="rgb(239,223,50)" fg:x="60121" fg:w="75"/><text x="69.6433%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (40 samples, 0.05%)</title><rect x="69.4337%" y="357" width="0.0462%" height="15" fill="rgb(244,45,21)" fg:x="60156" fg:w="40"/><text x="69.6837%" y="367.50"></text></g><g><title>chessire::engine::bitboard::constants::get_bb_piece_index (16 samples, 0.02%)</title><rect x="69.4799%" y="389" width="0.0185%" height="15" fill="rgb(232,33,43)" fg:x="60196" fg:w="16"/><text x="69.7299%" y="399.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::clear (12 samples, 0.01%)</title><rect x="69.4984%" y="389" width="0.0139%" height="15" fill="rgb(209,8,3)" fg:x="60212" fg:w="12"/><text x="69.7484%" y="399.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (4,877 samples, 5.63%)</title><rect x="69.5849%" y="373" width="5.6292%" height="15" fill="rgb(214,25,53)" fg:x="60287" fg:w="4877"/><text x="69.8349%" y="383.50">chessir..</text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (4,941 samples, 5.70%)</title><rect x="69.5122%" y="389" width="5.7030%" height="15" fill="rgb(254,186,54)" fg:x="60224" fg:w="4941"/><text x="69.7622%" y="399.50">chessir..</text></g><g><title>chessire::engine::bitboard::util::BitBoard::reset_bit (121 samples, 0.14%)</title><rect x="75.2153%" y="389" width="0.1397%" height="15" fill="rgb(208,174,49)" fg:x="65165" fg:w="121"/><text x="75.4653%" y="399.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::set_bit (139 samples, 0.16%)</title><rect x="75.3549%" y="389" width="0.1604%" height="15" fill="rgb(233,191,51)" fg:x="65286" fg:w="139"/><text x="75.6049%" y="399.50"></text></g><g><title>chessire_utils::board::Coord::to_usize (243 samples, 0.28%)</title><rect x="75.5234%" y="389" width="0.2805%" height="15" fill="rgb(222,134,10)" fg:x="65432" fg:w="243"/><text x="75.7734%" y="399.50"></text></g><g><title>chessire_utils::color::Color::opponent (88 samples, 0.10%)</title><rect x="75.8039%" y="389" width="0.1016%" height="15" fill="rgb(230,226,20)" fg:x="65675" fg:w="88"/><text x="76.0539%" y="399.50"></text></g><g><title>&lt;chessire_utils::color::Color as core::cmp::PartialEq&gt;::eq (38 samples, 0.04%)</title><rect x="75.8616%" y="373" width="0.0439%" height="15" fill="rgb(251,111,25)" fg:x="65725" fg:w="38"/><text x="76.1116%" y="383.50"></text></g><g><title>chessire_utils::piece::Piece::get_color (126 samples, 0.15%)</title><rect x="75.9055%" y="389" width="0.1454%" height="15" fill="rgb(224,40,46)" fg:x="65763" fg:w="126"/><text x="76.1555%" y="399.50"></text></g><g><title>core::array::iter::&lt;impl core::iter::traits::collect::IntoIterator for [T: N]&gt;::into_iter (57 samples, 0.07%)</title><rect x="76.0509%" y="389" width="0.0658%" height="15" fill="rgb(236,108,47)" fg:x="65889" fg:w="57"/><text x="76.3009%" y="399.50"></text></g><g><title>core::mem::transmute_copy (57 samples, 0.07%)</title><rect x="76.0509%" y="373" width="0.0658%" height="15" fill="rgb(234,93,0)" fg:x="65889" fg:w="57"/><text x="76.3009%" y="383.50"></text></g><g><title>core::ptr::read (57 samples, 0.07%)</title><rect x="76.0509%" y="357" width="0.0658%" height="15" fill="rgb(224,213,32)" fg:x="65889" fg:w="57"/><text x="76.3009%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (22 samples, 0.03%)</title><rect x="76.1167%" y="389" width="0.0254%" height="15" fill="rgb(251,11,48)" fg:x="65946" fg:w="22"/><text x="76.3667%" y="399.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (10,090 samples, 11.65%)</title><rect x="64.5283%" y="405" width="11.6462%" height="15" fill="rgb(236,173,5)" fg:x="55906" fg:w="10090"/><text x="64.7783%" y="415.50">&lt;chessire::engine..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (28 samples, 0.03%)</title><rect x="76.1421%" y="389" width="0.0323%" height="15" fill="rgb(230,95,12)" fg:x="65968" fg:w="28"/><text x="76.3921%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (130 samples, 0.15%)</title><rect x="76.1929%" y="389" width="0.1500%" height="15" fill="rgb(232,209,1)" fg:x="66012" fg:w="130"/><text x="76.4429%" y="399.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (130 samples, 0.15%)</title><rect x="76.1929%" y="373" width="0.1500%" height="15" fill="rgb(232,6,1)" fg:x="66012" fg:w="130"/><text x="76.4429%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (51 samples, 0.06%)</title><rect x="76.2841%" y="357" width="0.0589%" height="15" fill="rgb(210,224,50)" fg:x="66091" fg:w="51"/><text x="76.5341%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (51 samples, 0.06%)</title><rect x="76.2841%" y="341" width="0.0589%" height="15" fill="rgb(228,127,35)" fg:x="66091" fg:w="51"/><text x="76.5341%" y="351.50"></text></g><g><title>core::mem::replace (51 samples, 0.06%)</title><rect x="76.2841%" y="325" width="0.0589%" height="15" fill="rgb(245,102,45)" fg:x="66091" fg:w="51"/><text x="76.5341%" y="335.50"></text></g><g><title>core::ptr::write (51 samples, 0.06%)</title><rect x="76.2841%" y="309" width="0.0589%" height="15" fill="rgb(214,1,49)" fg:x="66091" fg:w="51"/><text x="76.5341%" y="319.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as core::clone::Clone&gt;::clone (1,340 samples, 1.55%)</title><rect x="76.1744%" y="405" width="1.5467%" height="15" fill="rgb(226,163,40)" fg:x="65996" fg:w="1340"/><text x="76.4244%" y="415.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardState as core::clone::Clone&gt;::clone (1,194 samples, 1.38%)</title><rect x="76.3429%" y="389" width="1.3781%" height="15" fill="rgb(239,212,28)" fg:x="66142" fg:w="1194"/><text x="76.5929%" y="399.50"></text></g><g><title>[libc.so.6] (1,194 samples, 1.38%)</title><rect x="76.3429%" y="373" width="1.3781%" height="15" fill="rgb(220,20,13)" fg:x="66142" fg:w="1194"/><text x="76.5929%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (184 samples, 0.21%)</title><rect x="77.7211%" y="405" width="0.2124%" height="15" fill="rgb(210,164,35)" fg:x="67336" fg:w="184"/><text x="77.9711%" y="415.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="77.9185%" y="389" width="0.0150%" height="15" fill="rgb(248,109,41)" fg:x="67507" fg:w="13"/><text x="78.1685%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11,863 samples, 13.69%)</title><rect x="64.2466%" y="485" width="13.6926%" height="15" fill="rgb(238,23,50)" fg:x="55662" fg:w="11863"/><text x="64.4966%" y="495.50">&lt;core::iter::adapters..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11,863 samples, 13.69%)</title><rect x="64.2466%" y="469" width="13.6926%" height="15" fill="rgb(211,48,49)" fg:x="55662" fg:w="11863"/><text x="64.4966%" y="479.50">core::iter::traits::i..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (11,776 samples, 13.59%)</title><rect x="64.3471%" y="453" width="13.5922%" height="15" fill="rgb(223,36,21)" fg:x="55749" fg:w="11776"/><text x="64.5971%" y="463.50">core::iter::adapters:..</text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves::{{closure}} (11,687 samples, 13.49%)</title><rect x="64.4498%" y="437" width="13.4895%" height="15" fill="rgb(207,123,46)" fg:x="55838" fg:w="11687"/><text x="64.6998%" y="447.50">chessire::engine::bi..</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::test_move_legality (11,685 samples, 13.49%)</title><rect x="64.4521%" y="421" width="13.4872%" height="15" fill="rgb(240,218,32)" fg:x="55840" fg:w="11685"/><text x="64.7021%" y="431.50">&lt;chessire::engine::b..</text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (11,866 samples, 13.70%)</title><rect x="64.2466%" y="501" width="13.6961%" height="15" fill="rgb(252,5,43)" fg:x="55662" fg:w="11866"/><text x="64.4966%" y="511.50">&lt;I as alloc::vec::in_..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11,879 samples, 13.71%)</title><rect x="64.2328%" y="549" width="13.7111%" height="15" fill="rgb(252,84,19)" fg:x="55650" fg:w="11879"/><text x="64.4828%" y="559.50">core::iter::traits::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11,879 samples, 13.71%)</title><rect x="64.2328%" y="533" width="13.7111%" height="15" fill="rgb(243,152,39)" fg:x="55650" fg:w="11879"/><text x="64.4828%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11,877 samples, 13.71%)</title><rect x="64.2351%" y="517" width="13.7088%" height="15" fill="rgb(234,160,15)" fg:x="55652" fg:w="11877"/><text x="64.4851%" y="527.50">alloc::vec::in_place_..</text></g><g><title>__rdl_dealloc (11 samples, 0.01%)</title><rect x="77.9669%" y="469" width="0.0127%" height="15" fill="rgb(237,34,20)" fg:x="67549" fg:w="11"/><text x="78.2169%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.01%)</title><rect x="77.9669%" y="453" width="0.0127%" height="15" fill="rgb(229,97,13)" fg:x="67549" fg:w="11"/><text x="78.2169%" y="463.50"></text></g><g><title>__rust_dealloc (9 samples, 0.01%)</title><rect x="77.9796%" y="469" width="0.0104%" height="15" fill="rgb(234,71,50)" fg:x="67560" fg:w="9"/><text x="78.2296%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (257 samples, 0.30%)</title><rect x="77.9496%" y="501" width="0.2966%" height="15" fill="rgb(253,155,4)" fg:x="67534" fg:w="257"/><text x="78.1996%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (253 samples, 0.29%)</title><rect x="77.9542%" y="485" width="0.2920%" height="15" fill="rgb(222,185,37)" fg:x="67538" fg:w="253"/><text x="78.2042%" y="495.50"></text></g><g><title>cfree (222 samples, 0.26%)</title><rect x="77.9900%" y="469" width="0.2562%" height="15" fill="rgb(251,177,13)" fg:x="67569" fg:w="222"/><text x="78.2400%" y="479.50"></text></g><g><title>[libc.so.6] (189 samples, 0.22%)</title><rect x="78.0281%" y="453" width="0.2181%" height="15" fill="rgb(250,179,40)" fg:x="67602" fg:w="189"/><text x="78.2781%" y="463.50"></text></g><g><title>[libc.so.6] (32 samples, 0.04%)</title><rect x="78.2093%" y="437" width="0.0369%" height="15" fill="rgb(242,44,2)" fg:x="67759" fg:w="32"/><text x="78.4593%" y="447.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (19,791 samples, 22.84%)</title><rect x="55.4087%" y="581" width="22.8433%" height="15" fill="rgb(216,177,13)" fg:x="48005" fg:w="19791"/><text x="55.6587%" y="591.50">&lt;chessire::engine::bitboard::BitBoar..</text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves (19,779 samples, 22.83%)</title><rect x="55.4226%" y="565" width="22.8295%" height="15" fill="rgb(216,106,43)" fg:x="48017" fg:w="19779"/><text x="55.6726%" y="575.50">chessire::engine::bitboard::BitBoard..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chessire_utils::moves::Move&gt;&gt; (267 samples, 0.31%)</title><rect x="77.9439%" y="549" width="0.3082%" height="15" fill="rgb(216,183,2)" fg:x="67529" fg:w="267"/><text x="78.1939%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chessire_utils::moves::Move&gt;&gt; (267 samples, 0.31%)</title><rect x="77.9439%" y="533" width="0.3082%" height="15" fill="rgb(249,75,3)" fg:x="67529" fg:w="267"/><text x="78.1939%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (267 samples, 0.31%)</title><rect x="77.9439%" y="517" width="0.3082%" height="15" fill="rgb(219,67,39)" fg:x="67529" fg:w="267"/><text x="78.1939%" y="527.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (62 samples, 0.07%)</title><rect x="81.0118%" y="565" width="0.0716%" height="15" fill="rgb(253,228,2)" fg:x="70187" fg:w="62"/><text x="81.2618%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (143 samples, 0.17%)</title><rect x="81.0834%" y="549" width="0.1651%" height="15" fill="rgb(235,138,27)" fg:x="70249" fg:w="143"/><text x="81.3334%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (143 samples, 0.17%)</title><rect x="81.0834%" y="533" width="0.1651%" height="15" fill="rgb(236,97,51)" fg:x="70249" fg:w="143"/><text x="81.3334%" y="543.50"></text></g><g><title>core::mem::replace (143 samples, 0.17%)</title><rect x="81.0834%" y="517" width="0.1651%" height="15" fill="rgb(240,80,30)" fg:x="70249" fg:w="143"/><text x="81.3334%" y="527.50"></text></g><g><title>core::ptr::write (143 samples, 0.17%)</title><rect x="81.0834%" y="501" width="0.1651%" height="15" fill="rgb(230,178,19)" fg:x="70249" fg:w="143"/><text x="81.3334%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (209 samples, 0.24%)</title><rect x="81.0834%" y="565" width="0.2412%" height="15" fill="rgb(210,190,27)" fg:x="70249" fg:w="209"/><text x="81.3334%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (66 samples, 0.08%)</title><rect x="81.2484%" y="549" width="0.0762%" height="15" fill="rgb(222,107,31)" fg:x="70392" fg:w="66"/><text x="81.4984%" y="559.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (66 samples, 0.08%)</title><rect x="81.2484%" y="533" width="0.0762%" height="15" fill="rgb(216,127,34)" fg:x="70392" fg:w="66"/><text x="81.4984%" y="543.50"></text></g><g><title>[libc.so.6] (1,361 samples, 1.57%)</title><rect x="81.3246%" y="565" width="1.5709%" height="15" fill="rgb(234,116,52)" fg:x="70458" fg:w="1361"/><text x="81.5746%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (79 samples, 0.09%)</title><rect x="83.0975%" y="549" width="0.0912%" height="15" fill="rgb(222,124,15)" fg:x="71994" fg:w="79"/><text x="83.3475%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (78 samples, 0.09%)</title><rect x="83.0986%" y="533" width="0.0900%" height="15" fill="rgb(231,179,28)" fg:x="71995" fg:w="78"/><text x="83.3486%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (78 samples, 0.09%)</title><rect x="83.0986%" y="517" width="0.0900%" height="15" fill="rgb(226,93,45)" fg:x="71995" fg:w="78"/><text x="83.3486%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.01%)</title><rect x="83.2429%" y="517" width="0.0104%" height="15" fill="rgb(215,8,51)" fg:x="72120" fg:w="9"/><text x="83.4929%" y="527.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_bishop_attack (98 samples, 0.11%)</title><rect x="83.1887%" y="549" width="0.1131%" height="15" fill="rgb(223,106,5)" fg:x="72073" fg:w="98"/><text x="83.4387%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (51 samples, 0.06%)</title><rect x="83.2429%" y="533" width="0.0589%" height="15" fill="rgb(250,191,5)" fg:x="72120" fg:w="51"/><text x="83.4929%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (42 samples, 0.05%)</title><rect x="83.2533%" y="517" width="0.0485%" height="15" fill="rgb(242,132,44)" fg:x="72129" fg:w="42"/><text x="83.5033%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (42 samples, 0.05%)</title><rect x="83.2533%" y="501" width="0.0485%" height="15" fill="rgb(251,152,29)" fg:x="72129" fg:w="42"/><text x="83.5033%" y="511.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_queen_attack (60 samples, 0.07%)</title><rect x="83.3018%" y="549" width="0.0693%" height="15" fill="rgb(218,179,5)" fg:x="72171" fg:w="60"/><text x="83.5518%" y="559.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::is_square_attacked_by (500 samples, 0.58%)</title><rect x="82.8967%" y="565" width="0.5771%" height="15" fill="rgb(227,67,19)" fg:x="71820" fg:w="500"/><text x="83.1467%" y="575.50"></text></g><g><title>chessire::engine::bitboard::attacks::get_rook_attack (89 samples, 0.10%)</title><rect x="83.3710%" y="549" width="0.1027%" height="15" fill="rgb(233,119,31)" fg:x="72231" fg:w="89"/><text x="83.6210%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (45 samples, 0.05%)</title><rect x="83.4218%" y="533" width="0.0519%" height="15" fill="rgb(241,120,22)" fg:x="72275" fg:w="45"/><text x="83.6718%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (45 samples, 0.05%)</title><rect x="83.4218%" y="517" width="0.0519%" height="15" fill="rgb(224,102,30)" fg:x="72275" fg:w="45"/><text x="83.6718%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (45 samples, 0.05%)</title><rect x="83.4218%" y="501" width="0.0519%" height="15" fill="rgb(210,164,37)" fg:x="72275" fg:w="45"/><text x="83.6718%" y="511.50"></text></g><g><title>chessire::engine::bitboard::constants::get_bb_piece_index (59 samples, 0.07%)</title><rect x="83.4738%" y="565" width="0.0681%" height="15" fill="rgb(226,191,16)" fg:x="72320" fg:w="59"/><text x="83.7238%" y="575.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::clear (20 samples, 0.02%)</title><rect x="83.5419%" y="565" width="0.0231%" height="15" fill="rgb(214,40,45)" fg:x="72379" fg:w="20"/><text x="83.7919%" y="575.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (5,085 samples, 5.87%)</title><rect x="83.6273%" y="549" width="5.8692%" height="15" fill="rgb(244,29,26)" fg:x="72453" fg:w="5085"/><text x="83.8773%" y="559.50">chessir..</text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (5,140 samples, 5.93%)</title><rect x="83.5649%" y="565" width="5.9327%" height="15" fill="rgb(216,16,5)" fg:x="72399" fg:w="5140"/><text x="83.8149%" y="575.50">chessire..</text></g><g><title>chessire::engine::bitboard::util::BitBoard::reset_bit (35 samples, 0.04%)</title><rect x="89.4977%" y="565" width="0.0404%" height="15" fill="rgb(249,76,35)" fg:x="77539" fg:w="35"/><text x="89.7477%" y="575.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::set_bit (58 samples, 0.07%)</title><rect x="89.5381%" y="565" width="0.0669%" height="15" fill="rgb(207,11,44)" fg:x="77574" fg:w="58"/><text x="89.7881%" y="575.50"></text></g><g><title>chessire_utils::board::Coord::next_down (20 samples, 0.02%)</title><rect x="89.6050%" y="565" width="0.0231%" height="15" fill="rgb(228,190,49)" fg:x="77632" fg:w="20"/><text x="89.8550%" y="575.50"></text></g><g><title>chessire_utils::board::Coord::to_usize (94 samples, 0.11%)</title><rect x="89.6281%" y="565" width="0.1085%" height="15" fill="rgb(214,173,12)" fg:x="77652" fg:w="94"/><text x="89.8781%" y="575.50"></text></g><g><title>chessire_utils::color::Color::opponent (91 samples, 0.11%)</title><rect x="89.7366%" y="565" width="0.1050%" height="15" fill="rgb(218,26,35)" fg:x="77746" fg:w="91"/><text x="89.9866%" y="575.50"></text></g><g><title>&lt;chessire_utils::color::Color as core::cmp::PartialEq&gt;::eq (45 samples, 0.05%)</title><rect x="89.7897%" y="549" width="0.0519%" height="15" fill="rgb(220,200,19)" fg:x="77792" fg:w="45"/><text x="90.0397%" y="559.50"></text></g><g><title>chessire_utils::piece::Piece::get_color (103 samples, 0.12%)</title><rect x="89.8416%" y="565" width="0.1189%" height="15" fill="rgb(239,95,49)" fg:x="77837" fg:w="103"/><text x="90.0916%" y="575.50"></text></g><g><title>core::array::iter::&lt;impl core::iter::traits::collect::IntoIterator for [T: N]&gt;::into_iter (33 samples, 0.04%)</title><rect x="89.9605%" y="565" width="0.0381%" height="15" fill="rgb(235,85,53)" fg:x="77940" fg:w="33"/><text x="90.2105%" y="575.50"></text></g><g><title>core::mem::transmute_copy (33 samples, 0.04%)</title><rect x="89.9605%" y="549" width="0.0381%" height="15" fill="rgb(233,133,31)" fg:x="77940" fg:w="33"/><text x="90.2105%" y="559.50"></text></g><g><title>core::ptr::read (33 samples, 0.04%)</title><rect x="89.9605%" y="533" width="0.0381%" height="15" fill="rgb(218,25,20)" fg:x="77940" fg:w="33"/><text x="90.2105%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (23 samples, 0.03%)</title><rect x="89.9986%" y="565" width="0.0265%" height="15" fill="rgb(252,210,38)" fg:x="77973" fg:w="23"/><text x="90.2486%" y="575.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (10,201 samples, 11.77%)</title><rect x="78.2520%" y="581" width="11.7743%" height="15" fill="rgb(242,134,21)" fg:x="67796" fg:w="10201"/><text x="78.5020%" y="591.50">&lt;chessire::engine..</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (32 samples, 0.04%)</title><rect x="90.0263%" y="581" width="0.0369%" height="15" fill="rgb(213,28,48)" fg:x="77997" fg:w="32"/><text x="90.2763%" y="591.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (101 samples, 0.12%)</title><rect x="90.3887%" y="501" width="0.1166%" height="15" fill="rgb(250,196,2)" fg:x="78311" fg:w="101"/><text x="90.6387%" y="511.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (15 samples, 0.02%)</title><rect x="90.5053%" y="389" width="0.0173%" height="15" fill="rgb(227,5,17)" fg:x="78412" fg:w="15"/><text x="90.7553%" y="399.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (240 samples, 0.28%)</title><rect x="90.5053%" y="437" width="0.2770%" height="15" fill="rgb(221,226,24)" fg:x="78412" fg:w="240"/><text x="90.7553%" y="447.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::FnMut&lt;(char,)&gt;&gt;::call_mut (240 samples, 0.28%)</title><rect x="90.5053%" y="421" width="0.2770%" height="15" fill="rgb(211,5,48)" fg:x="78412" fg:w="240"/><text x="90.7553%" y="431.50"></text></g><g><title>&lt;core::str::IsWhitespace as core::ops::function::Fn&lt;(char,)&gt;&gt;::call (240 samples, 0.28%)</title><rect x="90.5053%" y="405" width="0.2770%" height="15" fill="rgb(219,150,6)" fg:x="78412" fg:w="240"/><text x="90.7553%" y="415.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (225 samples, 0.26%)</title><rect x="90.5226%" y="389" width="0.2597%" height="15" fill="rgb(251,46,16)" fg:x="78427" fg:w="225"/><text x="90.7726%" y="399.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (16 samples, 0.02%)</title><rect x="91.4633%" y="389" width="0.0185%" height="15" fill="rgb(220,204,40)" fg:x="79242" fg:w="16"/><text x="91.7133%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.14%)</title><rect x="91.4818%" y="389" width="0.1362%" height="15" fill="rgb(211,85,2)" fg:x="79258" fg:w="118"/><text x="91.7318%" y="399.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,068 samples, 1.23%)</title><rect x="90.3887%" y="517" width="1.2327%" height="15" fill="rgb(229,17,7)" fg:x="78311" fg:w="1068"/><text x="90.6387%" y="527.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (967 samples, 1.12%)</title><rect x="90.5053%" y="501" width="1.1161%" height="15" fill="rgb(239,72,28)" fg:x="78412" fg:w="967"/><text x="90.7553%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (967 samples, 1.12%)</title><rect x="90.5053%" y="485" width="1.1161%" height="15" fill="rgb(230,47,54)" fg:x="78412" fg:w="967"/><text x="90.7553%" y="495.50"></text></g><g><title>core::str::pattern::Searcher::next_match (967 samples, 1.12%)</title><rect x="90.5053%" y="469" width="1.1161%" height="15" fill="rgb(214,50,8)" fg:x="78412" fg:w="967"/><text x="90.7553%" y="479.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (967 samples, 1.12%)</title><rect x="90.5053%" y="453" width="1.1161%" height="15" fill="rgb(216,198,43)" fg:x="78412" fg:w="967"/><text x="90.7553%" y="463.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (727 samples, 0.84%)</title><rect x="90.7823%" y="437" width="0.8391%" height="15" fill="rgb(234,20,35)" fg:x="78652" fg:w="727"/><text x="91.0323%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (719 samples, 0.83%)</title><rect x="90.7916%" y="421" width="0.8299%" height="15" fill="rgb(254,45,19)" fg:x="78660" fg:w="719"/><text x="91.0416%" y="431.50"></text></g><g><title>core::str::validations::next_code_point (719 samples, 0.83%)</title><rect x="90.7916%" y="405" width="0.8299%" height="15" fill="rgb(219,14,44)" fg:x="78660" fg:w="719"/><text x="91.0416%" y="415.50"></text></g><g><title>&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,372 samples, 1.58%)</title><rect x="90.0633%" y="581" width="1.5836%" height="15" fill="rgb(217,220,26)" fg:x="78029" fg:w="1372"/><text x="90.3133%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,372 samples, 1.58%)</title><rect x="90.0633%" y="565" width="1.5836%" height="15" fill="rgb(213,158,28)" fg:x="78029" fg:w="1372"/><text x="90.3133%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1,372 samples, 1.58%)</title><rect x="90.0633%" y="549" width="1.5836%" height="15" fill="rgb(252,51,52)" fg:x="78029" fg:w="1372"/><text x="90.3133%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,372 samples, 1.58%)</title><rect x="90.0633%" y="533" width="1.5836%" height="15" fill="rgb(246,89,16)" fg:x="78029" fg:w="1372"/><text x="90.3133%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (21 samples, 0.02%)</title><rect x="91.6226%" y="517" width="0.0242%" height="15" fill="rgb(216,158,49)" fg:x="79380" fg:w="21"/><text x="91.8726%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.02%)</title><rect x="91.6226%" y="501" width="0.0242%" height="15" fill="rgb(236,107,19)" fg:x="79380" fg:w="21"/><text x="91.8726%" y="511.50"></text></g><g><title>&lt;core::str::IsNotEmpty as core::ops::function::FnMut&lt;(&amp;&amp;str,)&gt;&gt;::call_mut (21 samples, 0.02%)</title><rect x="91.6226%" y="485" width="0.0242%" height="15" fill="rgb(228,185,30)" fg:x="79380" fg:w="21"/><text x="91.8726%" y="495.50"></text></g><g><title>&lt;core::str::IsNotEmpty as core::ops::function::Fn&lt;(&amp;&amp;str,)&gt;&gt;::call (21 samples, 0.02%)</title><rect x="91.6226%" y="469" width="0.0242%" height="15" fill="rgb(246,134,8)" fg:x="79380" fg:w="21"/><text x="91.8726%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (17 samples, 0.02%)</title><rect x="91.6272%" y="453" width="0.0196%" height="15" fill="rgb(214,143,50)" fg:x="79384" fg:w="17"/><text x="91.8772%" y="463.50"></text></g><g><title>__rdl_alloc (235 samples, 0.27%)</title><rect x="91.6815%" y="357" width="0.2712%" height="15" fill="rgb(228,75,8)" fg:x="79431" fg:w="235"/><text x="91.9315%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (183 samples, 0.21%)</title><rect x="91.7415%" y="341" width="0.2112%" height="15" fill="rgb(207,175,4)" fg:x="79483" fg:w="183"/><text x="91.9915%" y="351.50"></text></g><g><title>__rust_alloc (79 samples, 0.09%)</title><rect x="91.9527%" y="357" width="0.0912%" height="15" fill="rgb(205,108,24)" fg:x="79666" fg:w="79"/><text x="92.2027%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (842 samples, 0.97%)</title><rect x="91.6469%" y="453" width="0.9719%" height="15" fill="rgb(244,120,49)" fg:x="79401" fg:w="842"/><text x="91.8969%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (842 samples, 0.97%)</title><rect x="91.6469%" y="437" width="0.9719%" height="15" fill="rgb(223,47,38)" fg:x="79401" fg:w="842"/><text x="91.8969%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (842 samples, 0.97%)</title><rect x="91.6469%" y="421" width="0.9719%" height="15" fill="rgb(229,179,11)" fg:x="79401" fg:w="842"/><text x="91.8969%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (842 samples, 0.97%)</title><rect x="91.6469%" y="405" width="0.9719%" height="15" fill="rgb(231,122,1)" fg:x="79401" fg:w="842"/><text x="91.8969%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (842 samples, 0.97%)</title><rect x="91.6469%" y="389" width="0.9719%" height="15" fill="rgb(245,119,9)" fg:x="79401" fg:w="842"/><text x="91.8969%" y="399.50"></text></g><g><title>alloc::alloc::alloc (813 samples, 0.94%)</title><rect x="91.6803%" y="373" width="0.9384%" height="15" fill="rgb(241,163,25)" fg:x="79430" fg:w="813"/><text x="91.9303%" y="383.50"></text></g><g><title>malloc (498 samples, 0.57%)</title><rect x="92.0439%" y="357" width="0.5748%" height="15" fill="rgb(217,214,3)" fg:x="79745" fg:w="498"/><text x="92.2939%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (976 samples, 1.13%)</title><rect x="91.6469%" y="533" width="1.1265%" height="15" fill="rgb(240,86,28)" fg:x="79401" fg:w="976"/><text x="91.8969%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (976 samples, 1.13%)</title><rect x="91.6469%" y="517" width="1.1265%" height="15" fill="rgb(215,47,9)" fg:x="79401" fg:w="976"/><text x="91.8969%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (976 samples, 1.13%)</title><rect x="91.6469%" y="501" width="1.1265%" height="15" fill="rgb(252,25,45)" fg:x="79401" fg:w="976"/><text x="91.8969%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (976 samples, 1.13%)</title><rect x="91.6469%" y="485" width="1.1265%" height="15" fill="rgb(251,164,9)" fg:x="79401" fg:w="976"/><text x="91.8969%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (976 samples, 1.13%)</title><rect x="91.6469%" y="469" width="1.1265%" height="15" fill="rgb(233,194,0)" fg:x="79401" fg:w="976"/><text x="91.8969%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (134 samples, 0.15%)</title><rect x="92.6187%" y="453" width="0.1547%" height="15" fill="rgb(249,111,24)" fg:x="80243" fg:w="134"/><text x="92.8687%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (134 samples, 0.15%)</title><rect x="92.6187%" y="437" width="0.1547%" height="15" fill="rgb(250,223,3)" fg:x="80243" fg:w="134"/><text x="92.8687%" y="447.50"></text></g><g><title>[libc.so.6] (123 samples, 0.14%)</title><rect x="92.6314%" y="421" width="0.1420%" height="15" fill="rgb(236,178,37)" fg:x="80254" fg:w="123"/><text x="92.8814%" y="431.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1,089 samples, 1.26%)</title><rect x="91.6469%" y="581" width="1.2570%" height="15" fill="rgb(241,158,50)" fg:x="79401" fg:w="1089"/><text x="91.8969%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1,089 samples, 1.26%)</title><rect x="91.6469%" y="565" width="1.2570%" height="15" fill="rgb(213,121,41)" fg:x="79401" fg:w="1089"/><text x="91.8969%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1,089 samples, 1.26%)</title><rect x="91.6469%" y="549" width="1.2570%" height="15" fill="rgb(240,92,3)" fg:x="79401" fg:w="1089"/><text x="91.8969%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (113 samples, 0.13%)</title><rect x="92.7734%" y="533" width="0.1304%" height="15" fill="rgb(205,123,3)" fg:x="80377" fg:w="113"/><text x="93.0234%" y="543.50"></text></g><g><title>[libc.so.6] (2,297 samples, 2.65%)</title><rect x="92.9038%" y="581" width="2.6513%" height="15" fill="rgb(205,97,47)" fg:x="80490" fg:w="2297"/><text x="93.1538%" y="591.50">[l..</text></g><g><title>__rdl_dealloc (79 samples, 0.09%)</title><rect x="95.6093%" y="485" width="0.0912%" height="15" fill="rgb(247,152,14)" fg:x="82834" fg:w="79"/><text x="95.8593%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (79 samples, 0.09%)</title><rect x="95.6093%" y="469" width="0.0912%" height="15" fill="rgb(248,195,53)" fg:x="82834" fg:w="79"/><text x="95.8593%" y="479.50"></text></g><g><title>__rust_dealloc (154 samples, 0.18%)</title><rect x="95.7005%" y="485" width="0.1778%" height="15" fill="rgb(226,201,16)" fg:x="82913" fg:w="154"/><text x="95.9505%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,315 samples, 2.67%)</title><rect x="95.5574%" y="517" width="2.6720%" height="15" fill="rgb(205,98,0)" fg:x="82789" fg:w="2315"/><text x="95.8074%" y="527.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (2,315 samples, 2.67%)</title><rect x="95.5574%" y="501" width="2.6720%" height="15" fill="rgb(214,191,48)" fg:x="82789" fg:w="2315"/><text x="95.8074%" y="511.50">al..</text></g><g><title>cfree (2,037 samples, 2.35%)</title><rect x="95.8783%" y="485" width="2.3512%" height="15" fill="rgb(237,112,39)" fg:x="83067" fg:w="2037"/><text x="96.1283%" y="495.50">c..</text></g><g><title>[libc.so.6] (1,466 samples, 1.69%)</title><rect x="96.5373%" y="469" width="1.6921%" height="15" fill="rgb(247,203,27)" fg:x="83638" fg:w="1466"/><text x="96.7873%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2,328 samples, 2.69%)</title><rect x="95.5551%" y="581" width="2.6870%" height="15" fill="rgb(235,124,28)" fg:x="82787" fg:w="2328"/><text x="95.8051%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,328 samples, 2.69%)</title><rect x="95.5551%" y="565" width="2.6870%" height="15" fill="rgb(208,207,46)" fg:x="82787" fg:w="2328"/><text x="95.8051%" y="575.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,328 samples, 2.69%)</title><rect x="95.5551%" y="549" width="2.6870%" height="15" fill="rgb(234,176,4)" fg:x="82787" fg:w="2328"/><text x="95.8051%" y="559.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,328 samples, 2.69%)</title><rect x="95.5551%" y="533" width="2.6870%" height="15" fill="rgb(230,133,28)" fg:x="82787" fg:w="2328"/><text x="95.8051%" y="543.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="98.2294%" y="517" width="0.0127%" height="15" fill="rgb(211,137,40)" fg:x="85104" fg:w="11"/><text x="98.4794%" y="527.50"></text></g><g><title>[libc.so.6] (566 samples, 0.65%)</title><rect x="98.2871%" y="421" width="0.6533%" height="15" fill="rgb(254,35,13)" fg:x="85154" fg:w="566"/><text x="98.5371%" y="431.50"></text></g><g><title>[libc.so.6] (16 samples, 0.02%)</title><rect x="98.9220%" y="405" width="0.0185%" height="15" fill="rgb(225,49,51)" fg:x="85704" fg:w="16"/><text x="99.1720%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (606 samples, 0.70%)</title><rect x="98.2421%" y="485" width="0.6995%" height="15" fill="rgb(251,10,15)" fg:x="85115" fg:w="606"/><text x="98.4921%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (606 samples, 0.70%)</title><rect x="98.2421%" y="469" width="0.6995%" height="15" fill="rgb(228,207,15)" fg:x="85115" fg:w="606"/><text x="98.4921%" y="479.50"></text></g><g><title>cfree (604 samples, 0.70%)</title><rect x="98.2444%" y="453" width="0.6972%" height="15" fill="rgb(241,99,19)" fg:x="85117" fg:w="604"/><text x="98.4944%" y="463.50"></text></g><g><title>[libc.so.6] (600 samples, 0.69%)</title><rect x="98.2490%" y="437" width="0.6925%" height="15" fill="rgb(207,104,49)" fg:x="85121" fg:w="600"/><text x="98.4990%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chessire_utils::moves::Move&gt;&gt; (608 samples, 0.70%)</title><rect x="98.2421%" y="581" width="0.7018%" height="15" fill="rgb(234,99,18)" fg:x="85115" fg:w="608"/><text x="98.4921%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (608 samples, 0.70%)</title><rect x="98.2421%" y="565" width="0.7018%" height="15" fill="rgb(213,191,49)" fg:x="85115" fg:w="608"/><text x="98.4921%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chessire_utils::moves::Move,alloc::alloc::Global&gt;&gt; (608 samples, 0.70%)</title><rect x="98.2421%" y="549" width="0.7018%" height="15" fill="rgb(210,226,19)" fg:x="85115" fg:w="608"/><text x="98.4921%" y="559.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (608 samples, 0.70%)</title><rect x="98.2421%" y="533" width="0.7018%" height="15" fill="rgb(229,97,18)" fg:x="85115" fg:w="608"/><text x="98.4921%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chessire_utils::moves::Move&gt;&gt; (608 samples, 0.70%)</title><rect x="98.2421%" y="517" width="0.7018%" height="15" fill="rgb(211,167,15)" fg:x="85115" fg:w="608"/><text x="98.4921%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (608 samples, 0.70%)</title><rect x="98.2421%" y="501" width="0.7018%" height="15" fill="rgb(210,169,34)" fg:x="85115" fg:w="608"/><text x="98.4921%" y="511.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (53 samples, 0.06%)</title><rect x="98.9439%" y="437" width="0.0612%" height="15" fill="rgb(241,121,31)" fg:x="85723" fg:w="53"/><text x="99.1939%" y="447.50"></text></g><g><title>chessire::main (85,471 samples, 98.65%)</title><rect x="0.4074%" y="693" width="98.6530%" height="15" fill="rgb(232,40,11)" fg:x="353" fg:w="85471"/><text x="0.6574%" y="703.50">chessire::main</text></g><g><title>chessire::test::perft (85,471 samples, 98.65%)</title><rect x="0.4074%" y="677" width="98.6530%" height="15" fill="rgb(205,86,26)" fg:x="353" fg:w="85471"/><text x="0.6574%" y="687.50">chessire::test::perft</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (85,471 samples, 98.65%)</title><rect x="0.4074%" y="661" width="98.6530%" height="15" fill="rgb(231,126,28)" fg:x="353" fg:w="85471"/><text x="0.6574%" y="671.50">&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (85,471 samples, 98.65%)</title><rect x="0.4074%" y="645" width="98.6530%" height="15" fill="rgb(219,221,18)" fg:x="353" fg:w="85471"/><text x="0.6574%" y="655.50">&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (85,471 samples, 98.65%)</title><rect x="0.4074%" y="629" width="98.6530%" height="15" fill="rgb(211,40,0)" fg:x="353" fg:w="85471"/><text x="0.6574%" y="639.50">&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (85,445 samples, 98.62%)</title><rect x="0.4375%" y="613" width="98.6230%" height="15" fill="rgb(239,85,43)" fg:x="379" fg:w="85445"/><text x="0.6875%" y="623.50">&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (82,194 samples, 94.87%)</title><rect x="4.1898%" y="597" width="94.8706%" height="15" fill="rgb(231,55,21)" fg:x="3630" fg:w="82194"/><text x="4.4398%" y="607.50">&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft</text></g><g><title>core::str::&lt;impl str&gt;::split_whitespace (101 samples, 0.12%)</title><rect x="98.9439%" y="581" width="0.1166%" height="15" fill="rgb(225,184,43)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (101 samples, 0.12%)</title><rect x="98.9439%" y="565" width="0.1166%" height="15" fill="rgb(251,158,41)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="575.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (101 samples, 0.12%)</title><rect x="98.9439%" y="549" width="0.1166%" height="15" fill="rgb(234,159,37)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="559.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (101 samples, 0.12%)</title><rect x="98.9439%" y="533" width="0.1166%" height="15" fill="rgb(216,204,22)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (101 samples, 0.12%)</title><rect x="98.9439%" y="517" width="0.1166%" height="15" fill="rgb(214,17,3)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (101 samples, 0.12%)</title><rect x="98.9439%" y="501" width="0.1166%" height="15" fill="rgb(212,111,17)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (101 samples, 0.12%)</title><rect x="98.9439%" y="485" width="0.1166%" height="15" fill="rgb(221,157,24)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (101 samples, 0.12%)</title><rect x="98.9439%" y="469" width="0.1166%" height="15" fill="rgb(252,16,13)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (101 samples, 0.12%)</title><rect x="98.9439%" y="453" width="0.1166%" height="15" fill="rgb(221,62,2)" fg:x="85723" fg:w="101"/><text x="99.1939%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (48 samples, 0.06%)</title><rect x="99.0051%" y="437" width="0.0554%" height="15" fill="rgb(247,87,22)" fg:x="85776" fg:w="48"/><text x="99.2551%" y="447.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (22 samples, 0.03%)</title><rect x="99.0639%" y="389" width="0.0254%" height="15" fill="rgb(215,73,9)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (22 samples, 0.03%)</title><rect x="99.0639%" y="373" width="0.0254%" height="15" fill="rgb(207,175,33)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (22 samples, 0.03%)</title><rect x="99.0639%" y="357" width="0.0254%" height="15" fill="rgb(243,129,54)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (22 samples, 0.03%)</title><rect x="99.0639%" y="341" width="0.0254%" height="15" fill="rgb(227,119,45)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.03%)</title><rect x="99.0639%" y="325" width="0.0254%" height="15" fill="rgb(205,109,36)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.03%)</title><rect x="99.0639%" y="309" width="0.0254%" height="15" fill="rgb(205,6,39)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.03%)</title><rect x="99.0639%" y="293" width="0.0254%" height="15" fill="rgb(221,32,16)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.03%)</title><rect x="99.0639%" y="277" width="0.0254%" height="15" fill="rgb(228,144,50)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="99.0639%" y="261" width="0.0254%" height="15" fill="rgb(229,201,53)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.03%)</title><rect x="99.0639%" y="245" width="0.0254%" height="15" fill="rgb(249,153,27)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.03%)</title><rect x="99.0639%" y="229" width="0.0254%" height="15" fill="rgb(227,106,25)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.03%)</title><rect x="99.0639%" y="213" width="0.0254%" height="15" fill="rgb(230,65,29)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.03%)</title><rect x="99.0639%" y="197" width="0.0254%" height="15" fill="rgb(221,57,46)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="207.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.03%)</title><rect x="99.0639%" y="181" width="0.0254%" height="15" fill="rgb(229,161,17)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="191.50"></text></g><g><title>malloc (22 samples, 0.03%)</title><rect x="99.0639%" y="165" width="0.0254%" height="15" fill="rgb(222,213,11)" fg:x="85827" fg:w="22"/><text x="99.3139%" y="175.50"></text></g><g><title>main (45 samples, 0.05%)</title><rect x="99.0628%" y="693" width="0.0519%" height="15" fill="rgb(235,35,13)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="703.50"></text></g><g><title>std::rt::lang_start_internal (45 samples, 0.05%)</title><rect x="99.0628%" y="677" width="0.0519%" height="15" fill="rgb(233,158,34)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="687.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.05%)</title><rect x="99.0628%" y="661" width="0.0519%" height="15" fill="rgb(215,151,48)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="671.50"></text></g><g><title>std::panicking::try (45 samples, 0.05%)</title><rect x="99.0628%" y="645" width="0.0519%" height="15" fill="rgb(229,84,14)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="655.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.05%)</title><rect x="99.0628%" y="629" width="0.0519%" height="15" fill="rgb(229,68,14)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (45 samples, 0.05%)</title><rect x="99.0628%" y="613" width="0.0519%" height="15" fill="rgb(243,106,26)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="623.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.05%)</title><rect x="99.0628%" y="597" width="0.0519%" height="15" fill="rgb(206,45,38)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="607.50"></text></g><g><title>std::panicking::try (45 samples, 0.05%)</title><rect x="99.0628%" y="581" width="0.0519%" height="15" fill="rgb(226,6,15)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="591.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.05%)</title><rect x="99.0628%" y="565" width="0.0519%" height="15" fill="rgb(232,22,54)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (45 samples, 0.05%)</title><rect x="99.0628%" y="549" width="0.0519%" height="15" fill="rgb(229,222,32)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}} (45 samples, 0.05%)</title><rect x="99.0628%" y="533" width="0.0519%" height="15" fill="rgb(228,62,29)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 0.05%)</title><rect x="99.0628%" y="517" width="0.0519%" height="15" fill="rgb(251,103,34)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (45 samples, 0.05%)</title><rect x="99.0628%" y="501" width="0.0519%" height="15" fill="rgb(233,12,30)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="511.50"></text></g><g><title>chessire::main (45 samples, 0.05%)</title><rect x="99.0628%" y="485" width="0.0519%" height="15" fill="rgb(238,52,0)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="495.50"></text></g><g><title>chessire::test::perft (45 samples, 0.05%)</title><rect x="99.0628%" y="469" width="0.0519%" height="15" fill="rgb(223,98,5)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="479.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (45 samples, 0.05%)</title><rect x="99.0628%" y="453" width="0.0519%" height="15" fill="rgb(228,75,37)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="463.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (45 samples, 0.05%)</title><rect x="99.0628%" y="437" width="0.0519%" height="15" fill="rgb(205,115,49)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="447.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (45 samples, 0.05%)</title><rect x="99.0628%" y="421" width="0.0519%" height="15" fill="rgb(250,154,43)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (45 samples, 0.05%)</title><rect x="99.0628%" y="405" width="0.0519%" height="15" fill="rgb(226,43,29)" fg:x="85826" fg:w="45"/><text x="99.3128%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (22 samples, 0.03%)</title><rect x="99.0893%" y="389" width="0.0254%" height="15" fill="rgb(249,228,39)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.03%)</title><rect x="99.0893%" y="373" width="0.0254%" height="15" fill="rgb(216,79,43)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.03%)</title><rect x="99.0893%" y="357" width="0.0254%" height="15" fill="rgb(228,95,12)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="99.0893%" y="341" width="0.0254%" height="15" fill="rgb(249,221,15)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.03%)</title><rect x="99.0893%" y="325" width="0.0254%" height="15" fill="rgb(233,34,13)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.03%)</title><rect x="99.0893%" y="309" width="0.0254%" height="15" fill="rgb(214,103,39)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="319.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="99.0893%" y="293" width="0.0254%" height="15" fill="rgb(251,126,39)" fg:x="85849" fg:w="22"/><text x="99.3393%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.03%)</title><rect x="99.2013%" y="405" width="0.0254%" height="15" fill="rgb(214,216,36)" fg:x="85946" fg:w="22"/><text x="99.4513%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.02%)</title><rect x="99.2117%" y="389" width="0.0150%" height="15" fill="rgb(220,221,8)" fg:x="85955" fg:w="13"/><text x="99.4617%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (9 samples, 0.01%)</title><rect x="99.2163%" y="373" width="0.0104%" height="15" fill="rgb(240,216,3)" fg:x="85959" fg:w="9"/><text x="99.4663%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (74 samples, 0.09%)</title><rect x="99.2267%" y="405" width="0.0854%" height="15" fill="rgb(232,218,17)" fg:x="85968" fg:w="74"/><text x="99.4767%" y="415.50"></text></g><g><title>[libc.so.6] (72 samples, 0.08%)</title><rect x="99.2290%" y="389" width="0.0831%" height="15" fill="rgb(229,163,45)" fg:x="85970" fg:w="72"/><text x="99.4790%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (184 samples, 0.21%)</title><rect x="99.1182%" y="485" width="0.2124%" height="15" fill="rgb(231,110,42)" fg:x="85874" fg:w="184"/><text x="99.3682%" y="495.50"></text></g><g><title>alloc::string::String::push_str (178 samples, 0.21%)</title><rect x="99.1251%" y="469" width="0.2055%" height="15" fill="rgb(208,170,48)" fg:x="85880" fg:w="178"/><text x="99.3751%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (178 samples, 0.21%)</title><rect x="99.1251%" y="453" width="0.2055%" height="15" fill="rgb(239,116,25)" fg:x="85880" fg:w="178"/><text x="99.3751%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (178 samples, 0.21%)</title><rect x="99.1251%" y="437" width="0.2055%" height="15" fill="rgb(219,200,50)" fg:x="85880" fg:w="178"/><text x="99.3751%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (178 samples, 0.21%)</title><rect x="99.1251%" y="421" width="0.2055%" height="15" fill="rgb(245,200,0)" fg:x="85880" fg:w="178"/><text x="99.3751%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (16 samples, 0.02%)</title><rect x="99.3121%" y="405" width="0.0185%" height="15" fill="rgb(245,119,33)" fg:x="86042" fg:w="16"/><text x="99.5621%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.02%)</title><rect x="99.3121%" y="389" width="0.0185%" height="15" fill="rgb(231,125,12)" fg:x="86042" fg:w="16"/><text x="99.5621%" y="399.50"></text></g><g><title>std::rt::lang_start::{{closure}} (190 samples, 0.22%)</title><rect x="99.1182%" y="693" width="0.2193%" height="15" fill="rgb(216,96,41)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (190 samples, 0.22%)</title><rect x="99.1182%" y="677" width="0.2193%" height="15" fill="rgb(248,43,45)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (190 samples, 0.22%)</title><rect x="99.1182%" y="661" width="0.2193%" height="15" fill="rgb(217,222,7)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="671.50"></text></g><g><title>chessire::main (190 samples, 0.22%)</title><rect x="99.1182%" y="645" width="0.2193%" height="15" fill="rgb(233,28,6)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="655.50"></text></g><g><title>chessire::test::perft (190 samples, 0.22%)</title><rect x="99.1182%" y="629" width="0.2193%" height="15" fill="rgb(231,218,15)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="639.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (190 samples, 0.22%)</title><rect x="99.1182%" y="613" width="0.2193%" height="15" fill="rgb(226,171,48)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="623.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (190 samples, 0.22%)</title><rect x="99.1182%" y="597" width="0.2193%" height="15" fill="rgb(235,201,9)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="607.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (190 samples, 0.22%)</title><rect x="99.1182%" y="581" width="0.2193%" height="15" fill="rgb(217,80,15)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="591.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (190 samples, 0.22%)</title><rect x="99.1182%" y="565" width="0.2193%" height="15" fill="rgb(219,152,8)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (190 samples, 0.22%)</title><rect x="99.1182%" y="549" width="0.2193%" height="15" fill="rgb(243,107,38)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="559.50"></text></g><g><title>&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt (190 samples, 0.22%)</title><rect x="99.1182%" y="533" width="0.2193%" height="15" fill="rgb(231,17,5)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (190 samples, 0.22%)</title><rect x="99.1182%" y="517" width="0.2193%" height="15" fill="rgb(209,25,54)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="527.50"></text></g><g><title>core::fmt::write (190 samples, 0.22%)</title><rect x="99.1182%" y="501" width="0.2193%" height="15" fill="rgb(219,0,2)" fg:x="85874" fg:w="190"/><text x="99.3682%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (55 samples, 0.06%)</title><rect x="99.4691%" y="341" width="0.0635%" height="15" fill="rgb(246,9,5)" fg:x="86178" fg:w="55"/><text x="99.7191%" y="351.50"></text></g><g><title>&lt;bool as core::fmt::Display&gt;::fmt (37 samples, 0.04%)</title><rect x="99.5325%" y="341" width="0.0427%" height="15" fill="rgb(226,159,4)" fg:x="86233" fg:w="37"/><text x="99.7825%" y="351.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (9 samples, 0.01%)</title><rect x="99.5649%" y="325" width="0.0104%" height="15" fill="rgb(219,175,34)" fg:x="86261" fg:w="9"/><text x="99.8149%" y="335.50"></text></g><g><title>core::fmt::Formatter::pad (20 samples, 0.02%)</title><rect x="99.5891%" y="341" width="0.0231%" height="15" fill="rgb(236,10,46)" fg:x="86282" fg:w="20"/><text x="99.8391%" y="351.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (246 samples, 0.28%)</title><rect x="99.3386%" y="405" width="0.2839%" height="15" fill="rgb(240,211,16)" fg:x="86065" fg:w="246"/><text x="99.5886%" y="415.50"></text></g><g><title>&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt (246 samples, 0.28%)</title><rect x="99.3386%" y="389" width="0.2839%" height="15" fill="rgb(205,3,43)" fg:x="86065" fg:w="246"/><text x="99.5886%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (227 samples, 0.26%)</title><rect x="99.3606%" y="373" width="0.2620%" height="15" fill="rgb(245,7,22)" fg:x="86084" fg:w="227"/><text x="99.6106%" y="383.50"></text></g><g><title>core::fmt::write (174 samples, 0.20%)</title><rect x="99.4217%" y="357" width="0.2008%" height="15" fill="rgb(239,132,32)" fg:x="86137" fg:w="174"/><text x="99.6717%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (13 samples, 0.02%)</title><rect x="99.6306%" y="373" width="0.0150%" height="15" fill="rgb(228,202,34)" fg:x="86318" fg:w="13"/><text x="99.8806%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.02%)</title><rect x="99.6306%" y="357" width="0.0150%" height="15" fill="rgb(254,200,22)" fg:x="86318" fg:w="13"/><text x="99.8806%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.01%)</title><rect x="99.6341%" y="341" width="0.0115%" height="15" fill="rgb(219,10,39)" fg:x="86321" fg:w="10"/><text x="99.8841%" y="351.50"></text></g><g><title>[libc.so.6] (10 samples, 0.01%)</title><rect x="99.6341%" y="325" width="0.0115%" height="15" fill="rgb(226,210,39)" fg:x="86321" fg:w="10"/><text x="99.8841%" y="335.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (41 samples, 0.05%)</title><rect x="99.6572%" y="373" width="0.0473%" height="15" fill="rgb(208,219,16)" fg:x="86341" fg:w="41"/><text x="99.9072%" y="383.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (41 samples, 0.05%)</title><rect x="99.6572%" y="357" width="0.0473%" height="15" fill="rgb(216,158,51)" fg:x="86341" fg:w="41"/><text x="99.9072%" y="367.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (76 samples, 0.09%)</title><rect x="99.6226%" y="405" width="0.0877%" height="15" fill="rgb(233,14,44)" fg:x="86311" fg:w="76"/><text x="99.8726%" y="415.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves (76 samples, 0.09%)</title><rect x="99.6226%" y="389" width="0.0877%" height="15" fill="rgb(237,97,39)" fg:x="86311" fg:w="76"/><text x="99.8726%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (79 samples, 0.09%)</title><rect x="99.7103%" y="405" width="0.0912%" height="15" fill="rgb(218,198,43)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (79 samples, 0.09%)</title><rect x="99.7103%" y="389" width="0.0912%" height="15" fill="rgb(231,104,20)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (79 samples, 0.09%)</title><rect x="99.7103%" y="373" width="0.0912%" height="15" fill="rgb(254,36,13)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.09%)</title><rect x="99.7103%" y="357" width="0.0912%" height="15" fill="rgb(248,14,50)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.09%)</title><rect x="99.7103%" y="341" width="0.0912%" height="15" fill="rgb(217,107,29)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.09%)</title><rect x="99.7103%" y="325" width="0.0912%" height="15" fill="rgb(251,169,33)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="335.50"></text></g><g><title>cfree (79 samples, 0.09%)</title><rect x="99.7103%" y="309" width="0.0912%" height="15" fill="rgb(217,108,32)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="319.50"></text></g><g><title>[libc.so.6] (79 samples, 0.09%)</title><rect x="99.7103%" y="293" width="0.0912%" height="15" fill="rgb(219,66,42)" fg:x="86387" fg:w="79"/><text x="99.9603%" y="303.50"></text></g><g><title>std::rt::lang_start_internal (424 samples, 0.49%)</title><rect x="99.3375%" y="693" width="0.4894%" height="15" fill="rgb(206,180,7)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="703.50"></text></g><g><title>std::panic::catch_unwind (424 samples, 0.49%)</title><rect x="99.3375%" y="677" width="0.4894%" height="15" fill="rgb(208,226,31)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="687.50"></text></g><g><title>std::panicking::try (424 samples, 0.49%)</title><rect x="99.3375%" y="661" width="0.4894%" height="15" fill="rgb(218,26,49)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="671.50"></text></g><g><title>std::panicking::try::do_call (424 samples, 0.49%)</title><rect x="99.3375%" y="645" width="0.4894%" height="15" fill="rgb(233,197,48)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="655.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (424 samples, 0.49%)</title><rect x="99.3375%" y="629" width="0.4894%" height="15" fill="rgb(252,181,51)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="639.50"></text></g><g><title>std::panic::catch_unwind (424 samples, 0.49%)</title><rect x="99.3375%" y="613" width="0.4894%" height="15" fill="rgb(253,90,19)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="623.50"></text></g><g><title>std::panicking::try (424 samples, 0.49%)</title><rect x="99.3375%" y="597" width="0.4894%" height="15" fill="rgb(215,171,30)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="607.50"></text></g><g><title>std::panicking::try::do_call (424 samples, 0.49%)</title><rect x="99.3375%" y="581" width="0.4894%" height="15" fill="rgb(214,222,9)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (424 samples, 0.49%)</title><rect x="99.3375%" y="565" width="0.4894%" height="15" fill="rgb(223,3,22)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}} (424 samples, 0.49%)</title><rect x="99.3375%" y="549" width="0.4894%" height="15" fill="rgb(225,196,46)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (424 samples, 0.49%)</title><rect x="99.3375%" y="533" width="0.4894%" height="15" fill="rgb(209,110,37)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (424 samples, 0.49%)</title><rect x="99.3375%" y="517" width="0.4894%" height="15" fill="rgb(249,89,12)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="527.50"></text></g><g><title>chessire::main (424 samples, 0.49%)</title><rect x="99.3375%" y="501" width="0.4894%" height="15" fill="rgb(226,27,33)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="511.50"></text></g><g><title>chessire::test::perft (424 samples, 0.49%)</title><rect x="99.3375%" y="485" width="0.4894%" height="15" fill="rgb(213,82,22)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="495.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (424 samples, 0.49%)</title><rect x="99.3375%" y="469" width="0.4894%" height="15" fill="rgb(248,140,0)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="479.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (424 samples, 0.49%)</title><rect x="99.3375%" y="453" width="0.4894%" height="15" fill="rgb(228,106,3)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="463.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (424 samples, 0.49%)</title><rect x="99.3375%" y="437" width="0.4894%" height="15" fill="rgb(209,23,37)" fg:x="86064" fg:w="424"/><text x="99.5875%" y="447.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (423 samples, 0.49%)</title><rect x="99.3386%" y="421" width="0.4882%" height="15" fill="rgb(241,93,50)" fg:x="86065" fg:w="423"/><text x="99.5886%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;chessire_utils::moves::Move&gt;&gt; (22 samples, 0.03%)</title><rect x="99.8015%" y="405" width="0.0254%" height="15" fill="rgb(253,46,43)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="99.8015%" y="389" width="0.0254%" height="15" fill="rgb(226,206,43)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;chessire_utils::moves::Move,alloc::alloc::Global&gt;&gt; (22 samples, 0.03%)</title><rect x="99.8015%" y="373" width="0.0254%" height="15" fill="rgb(217,54,7)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="99.8015%" y="357" width="0.0254%" height="15" fill="rgb(223,5,52)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chessire_utils::moves::Move&gt;&gt; (22 samples, 0.03%)</title><rect x="99.8015%" y="341" width="0.0254%" height="15" fill="rgb(206,52,46)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="99.8015%" y="325" width="0.0254%" height="15" fill="rgb(253,136,11)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.03%)</title><rect x="99.8015%" y="309" width="0.0254%" height="15" fill="rgb(208,106,33)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.03%)</title><rect x="99.8015%" y="293" width="0.0254%" height="15" fill="rgb(206,54,4)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="303.50"></text></g><g><title>cfree (22 samples, 0.03%)</title><rect x="99.8015%" y="277" width="0.0254%" height="15" fill="rgb(213,3,15)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="287.50"></text></g><g><title>[libc.so.6] (22 samples, 0.03%)</title><rect x="99.8015%" y="261" width="0.0254%" height="15" fill="rgb(252,211,39)" fg:x="86466" fg:w="22"/><text x="100.0515%" y="271.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="99.8061%" y="245" width="0.0208%" height="15" fill="rgb(223,6,36)" fg:x="86470" fg:w="18"/><text x="100.0561%" y="255.50"></text></g><g><title>[unknown] (86,477 samples, 99.81%)</title><rect x="0.0150%" y="709" width="99.8142%" height="15" fill="rgb(252,169,45)" fg:x="13" fg:w="86477"/><text x="0.2650%" y="719.50">[unknown]</text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::new_engine (16 samples, 0.02%)</title><rect x="99.8292%" y="437" width="0.0185%" height="15" fill="rgb(212,48,26)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="447.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::new (16 samples, 0.02%)</title><rect x="99.8292%" y="421" width="0.0185%" height="15" fill="rgb(251,102,48)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as core::default::Default&gt;::default (16 samples, 0.02%)</title><rect x="99.8292%" y="405" width="0.0185%" height="15" fill="rgb(243,208,16)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="415.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::init (16 samples, 0.02%)</title><rect x="99.8292%" y="389" width="0.0185%" height="15" fill="rgb(219,96,24)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="399.50"></text></g><g><title>chessire::engine::bitboard::AttackTables::init (16 samples, 0.02%)</title><rect x="99.8292%" y="373" width="0.0185%" height="15" fill="rgb(219,33,29)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="383.50"></text></g><g><title>chessire::engine::bitboard::initialise_rook_attacks (16 samples, 0.02%)</title><rect x="99.8292%" y="357" width="0.0185%" height="15" fill="rgb(223,176,5)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="367.50"></text></g><g><title>chessire::engine::bitboard::occupancy::set_occupancy (16 samples, 0.02%)</title><rect x="99.8292%" y="341" width="0.0185%" height="15" fill="rgb(228,140,14)" fg:x="86490" fg:w="16"/><text x="100.0792%" y="351.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::get_lsb (15 samples, 0.02%)</title><rect x="99.8303%" y="325" width="0.0173%" height="15" fill="rgb(217,179,31)" fg:x="86491" fg:w="15"/><text x="100.0803%" y="335.50"></text></g><g><title>chessire::engine::bitboard::util::BitBoard::popcount (15 samples, 0.02%)</title><rect x="99.8303%" y="309" width="0.0173%" height="15" fill="rgb(230,9,30)" fg:x="86491" fg:w="15"/><text x="100.0803%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="99.8684%" y="229" width="0.0104%" height="15" fill="rgb(230,136,20)" fg:x="86524" fg:w="9"/><text x="100.1184%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.01%)</title><rect x="99.8684%" y="213" width="0.0104%" height="15" fill="rgb(215,210,22)" fg:x="86524" fg:w="9"/><text x="100.1184%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.01%)</title><rect x="99.8684%" y="197" width="0.0104%" height="15" fill="rgb(218,43,5)" fg:x="86524" fg:w="9"/><text x="100.1184%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.01%)</title><rect x="99.8684%" y="181" width="0.0104%" height="15" fill="rgb(216,11,5)" fg:x="86524" fg:w="9"/><text x="100.1184%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="99.8684%" y="165" width="0.0104%" height="15" fill="rgb(209,82,29)" fg:x="86524" fg:w="9"/><text x="100.1184%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.02%)</title><rect x="99.8569%" y="309" width="0.0242%" height="15" fill="rgb(244,115,12)" fg:x="86514" fg:w="21"/><text x="100.1069%" y="319.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.02%)</title><rect x="99.8626%" y="293" width="0.0185%" height="15" fill="rgb(222,82,18)" fg:x="86519" fg:w="16"/><text x="100.1126%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="99.8626%" y="277" width="0.0185%" height="15" fill="rgb(249,227,8)" fg:x="86519" fg:w="16"/><text x="100.1126%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="99.8626%" y="261" width="0.0185%" height="15" fill="rgb(253,141,45)" fg:x="86519" fg:w="16"/><text x="100.1126%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.02%)</title><rect x="99.8626%" y="245" width="0.0185%" height="15" fill="rgb(234,184,4)" fg:x="86519" fg:w="16"/><text x="100.1126%" y="255.50"></text></g><g><title>&lt;chessire_utils::board::Coord as core::fmt::Display&gt;::fmt (26 samples, 0.03%)</title><rect x="99.8834%" y="309" width="0.0300%" height="15" fill="rgb(218,194,23)" fg:x="86537" fg:w="26"/><text x="100.1334%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (22 samples, 0.03%)</title><rect x="99.8880%" y="293" width="0.0254%" height="15" fill="rgb(235,66,41)" fg:x="86541" fg:w="22"/><text x="100.1380%" y="303.50"></text></g><g><title>core::fmt::write (17 samples, 0.02%)</title><rect x="99.8938%" y="277" width="0.0196%" height="15" fill="rgb(245,217,1)" fg:x="86546" fg:w="17"/><text x="100.1438%" y="287.50"></text></g><g><title>&lt;chessire_utils::piece::Piece as core::fmt::Display&gt;::fmt (17 samples, 0.02%)</title><rect x="99.9134%" y="309" width="0.0196%" height="15" fill="rgb(229,91,1)" fg:x="86563" fg:w="17"/><text x="100.1634%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (17 samples, 0.02%)</title><rect x="99.9134%" y="293" width="0.0196%" height="15" fill="rgb(207,101,30)" fg:x="86563" fg:w="17"/><text x="100.1634%" y="303.50"></text></g><g><title>core::fmt::write (16 samples, 0.02%)</title><rect x="99.9146%" y="277" width="0.0185%" height="15" fill="rgb(223,82,49)" fg:x="86564" fg:w="16"/><text x="100.1646%" y="287.50"></text></g><g><title>&lt;chessire_utils::moves::Move as core::fmt::Display&gt;::fmt (72 samples, 0.08%)</title><rect x="99.8546%" y="357" width="0.0831%" height="15" fill="rgb(218,167,17)" fg:x="86512" fg:w="72"/><text x="100.1046%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (71 samples, 0.08%)</title><rect x="99.8557%" y="341" width="0.0820%" height="15" fill="rgb(208,103,14)" fg:x="86513" fg:w="71"/><text x="100.1057%" y="351.50"></text></g><g><title>core::fmt::write (70 samples, 0.08%)</title><rect x="99.8569%" y="325" width="0.0808%" height="15" fill="rgb(238,20,8)" fg:x="86514" fg:w="70"/><text x="100.1069%" y="335.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (73 samples, 0.08%)</title><rect x="99.8546%" y="373" width="0.0843%" height="15" fill="rgb(218,80,54)" fg:x="86512" fg:w="73"/><text x="100.1046%" y="383.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::get_moves (11 samples, 0.01%)</title><rect x="99.9411%" y="373" width="0.0127%" height="15" fill="rgb(240,144,17)" fg:x="86587" fg:w="11"/><text x="100.1911%" y="383.50"></text></g><g><title>chessire::engine::bitboard::BitBoardEngine::_get_moves (11 samples, 0.01%)</title><rect x="99.9411%" y="357" width="0.0127%" height="15" fill="rgb(245,27,50)" fg:x="86587" fg:w="11"/><text x="100.1911%" y="367.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::make_move (17 samples, 0.02%)</title><rect x="99.9538%" y="373" width="0.0196%" height="15" fill="rgb(251,51,7)" fg:x="86598" fg:w="17"/><text x="100.2038%" y="383.50"></text></g><g><title>[libc.so.6] (12 samples, 0.01%)</title><rect x="99.9815%" y="373" width="0.0139%" height="15" fill="rgb(245,217,29)" fg:x="86622" fg:w="12"/><text x="100.2315%" y="383.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (131 samples, 0.15%)</title><rect x="99.8476%" y="421" width="0.1512%" height="15" fill="rgb(221,176,29)" fg:x="86506" fg:w="131"/><text x="100.0976%" y="431.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (130 samples, 0.15%)</title><rect x="99.8488%" y="405" width="0.1500%" height="15" fill="rgb(212,180,24)" fg:x="86507" fg:w="130"/><text x="100.0988%" y="415.50"></text></g><g><title>&lt;chessire::engine::bitboard::BitBoardEngine as chessire::engine::ChessEngine&gt;::perft (128 samples, 0.15%)</title><rect x="99.8511%" y="389" width="0.1477%" height="15" fill="rgb(254,24,2)" fg:x="86509" fg:w="128"/><text x="100.1011%" y="399.50"></text></g><g><title>all (86,638 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(230,100,2)" fg:x="0" fg:w="86638"/><text x="0.2500%" y="751.50"></text></g><g><title>chessire (86,638 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(219,142,25)" fg:x="0" fg:w="86638"/><text x="0.2500%" y="735.50">chessire</text></g><g><title>_start (148 samples, 0.17%)</title><rect x="99.8292%" y="709" width="0.1708%" height="15" fill="rgb(240,73,43)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="719.50"></text></g><g><title>__libc_start_main (148 samples, 0.17%)</title><rect x="99.8292%" y="693" width="0.1708%" height="15" fill="rgb(214,114,15)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="703.50"></text></g><g><title>[libc.so.6] (148 samples, 0.17%)</title><rect x="99.8292%" y="677" width="0.1708%" height="15" fill="rgb(207,130,4)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="687.50"></text></g><g><title>main (148 samples, 0.17%)</title><rect x="99.8292%" y="661" width="0.1708%" height="15" fill="rgb(221,25,40)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="671.50"></text></g><g><title>std::rt::lang_start_internal (148 samples, 0.17%)</title><rect x="99.8292%" y="645" width="0.1708%" height="15" fill="rgb(241,184,7)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="655.50"></text></g><g><title>std::panic::catch_unwind (148 samples, 0.17%)</title><rect x="99.8292%" y="629" width="0.1708%" height="15" fill="rgb(235,159,4)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="639.50"></text></g><g><title>std::panicking::try (148 samples, 0.17%)</title><rect x="99.8292%" y="613" width="0.1708%" height="15" fill="rgb(214,87,48)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="623.50"></text></g><g><title>std::panicking::try::do_call (148 samples, 0.17%)</title><rect x="99.8292%" y="597" width="0.1708%" height="15" fill="rgb(246,198,24)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (148 samples, 0.17%)</title><rect x="99.8292%" y="581" width="0.1708%" height="15" fill="rgb(209,66,40)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="591.50"></text></g><g><title>std::panic::catch_unwind (148 samples, 0.17%)</title><rect x="99.8292%" y="565" width="0.1708%" height="15" fill="rgb(233,147,39)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="575.50"></text></g><g><title>std::panicking::try (148 samples, 0.17%)</title><rect x="99.8292%" y="549" width="0.1708%" height="15" fill="rgb(231,145,52)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="559.50"></text></g><g><title>std::panicking::try::do_call (148 samples, 0.17%)</title><rect x="99.8292%" y="533" width="0.1708%" height="15" fill="rgb(206,20,26)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (148 samples, 0.17%)</title><rect x="99.8292%" y="517" width="0.1708%" height="15" fill="rgb(238,220,4)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}} (148 samples, 0.17%)</title><rect x="99.8292%" y="501" width="0.1708%" height="15" fill="rgb(252,195,42)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (148 samples, 0.17%)</title><rect x="99.8292%" y="485" width="0.1708%" height="15" fill="rgb(209,10,6)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (148 samples, 0.17%)</title><rect x="99.8292%" y="469" width="0.1708%" height="15" fill="rgb(229,3,52)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="479.50"></text></g><g><title>chessire::main (148 samples, 0.17%)</title><rect x="99.8292%" y="453" width="0.1708%" height="15" fill="rgb(253,49,37)" fg:x="86490" fg:w="148"/><text x="100.0792%" y="463.50"></text></g><g><title>chessire::test::perft (132 samples, 0.15%)</title><rect x="99.8476%" y="437" width="0.1524%" height="15" fill="rgb(240,103,49)" fg:x="86506" fg:w="132"/><text x="100.0976%" y="447.50"></text></g></svg></svg>